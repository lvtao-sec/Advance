point be important mention important api function
allow api return constant
return value api may not reliably determine amount pende datum case
before candidate be generate test , api be call
support representation be octet string , bignum hexadecimal
api set curve paramater must be agree by participant use curve
constant return constant associate supply constant
constant be need perform lock dynamic lock number
api be call as describe
section explain basic thing application programmer should support make useful element engine functionality available user
may well wish make modification table item pass back api callback
application support multiple chain different ca signature algorithm may wish check constant
within library be two form elliptic curve be interest
set character can be use cancel prompt be give as well
param revtime field be only set
port have syntax as port specify api connect bio , can be numerical port string string lookup use api string table
not happen
be not constant
check type callback invoke callback style callback callback old style
string have follow format
api be call
be much well cbc des
be optional text message
can be use obtain state information ssl
param can be set null
bio link param
case ssl constant , be always constant
follow encode api be implement
api only return handshake have be finish error occur
return api be dependent part openssl normally generate problem
depth count be level : peer certificate , level : ca certificate , level : high level ca certificate
be macro
be consider bad remove accord rfc constant
make code harder adapt algorithm option be not cleanly support low level operation be efficient use high level api
alternative param implementationi entirely responsible generation management cryptographically secure prng stream
api be similar api except encode only tbscertificate portion certificate
constant create return pkc constant signeddata structure
number be
field response be return param revtime , param nextupd
api return signaturealgorithm param
api return tbsresponsedata param
result return by api should always be consistent result api
function can not return param
api return default timeout value assign param negotiate protocol valid param
policy param can be null clear exist policy set
function return either amount datum successfully read write no datum be successfully read write
api be use retrieve application specific datum
default mac iteration count be constant
param can be null simply return number curve memory allocation purpose
api return internal pointer param add
api place file descriptor
api return bio api
public key , constant be null
be return by api
return value constant indicate successful processing datum
no certificate param be search case failure
api return number character use parse , constant error , which case no param be create
api return number byte read daemon success , constant
use constant utility create necessary link
thwart mma attack recipient be try whether succeed not
be do by call api before first call api function
be alternative way specify trust certificate instead use param
return structure be initialize ready perform signing operation
typical usage application retrieve param use api check type use api
function as strlen not return correct length encode structure
socket bios support relevant functionality file descriptor bios
api clean digest context param free space allocate api
function can be use npn callback
function call api static array pass as third param
function , application code should treat return value oid , nid , name as constant
callback not be call event handshake session resumption occur
param be appropriate param structure
api set callback function param be use
call api decrement reference count param , free memory associate
param be short name
api set param work client mode
key genration operation be abort error occur
api set list cipher only param
param function support similar option similarly name one correspond param function as api
typically constant be use bio indicate underlie stream should be close bio be free
default implementation digest param be use
param be numerical form object
param chain param can be null
kerbero param be as api
param be long name
application may either directly specify dh param can supply dh param via callback function
negative number , string be preface lead
array consist nid curve preference order
length session -PRON- would be constant byte session constant byte
be assume param contain valid param structure attempt be make reuse
default value maximum certificate chain size be 100 kb
return value constant means param be recognise command require value but param be null
fp field be number bit p. field be value
datum read param be assume have come api be decrypt use param key schedule iv initial vector
other need additional initialization , frequently utility function exist create initialize bio
by default , wildcard be support wildcard match only constant label
param must be number character address stre constant which case length be calculate strlen
type field be determine by param which can either be definition type param standard type
version be constant
be assume param contain valid param structure attempt be make reuse
api function explicitly sign param
ok be set constant indicate policy checking be complete
initial buffer size be constant , currently constant
constant version use supply structure pointer directly parent constant version be free
privatekey read api can be use application
param be encode use constant structure as define rfc constant
param be normally supply by function as api
constant make api ignore miss configuration file
neg be constant
result be round towards constant
error code be constant digit hexadecimal number
library name , function name reason string be ascii text , as
callback can use api function check , whether session be type sslv constant
remainder be constant negative
exponent be odd number , typically constant
api use cipher feedback mode
type be consist constant byte odd parity
top be number word use , value constant , bn _ lsb _ constant _ rsb _ constant param constant
signing be defer until after datum have be write
value constant may be different variable key length cipher
pid be set key -PRON- would pname be set null
pubkey function process public key use param
api be kerbero function
rsapublickey function process rsa public key use rsa structure
complex compound format may not work
param be encode use pkc constant dhparam structure
public key be encode as subjectpublickeyinfo structure
main purpose api be provide finer control cms sign datum structure simple api function default be not appropriate
api work way as api but expect old style callback function directly callback param pass constant
amount datum write depend block alignment encrypt datum
public key be encode use pkc constant rsapublickey structure
constant function process rsa public key use rsa structure
constant function process dsa public key use dsa structure
key be symmetric key use iv be iv use , actual number byte use key iv depend cipher
param may be param as param
param may be param as param
param may be param
api make param static number dmax current size
api set maximum param certificate chain verification shall be allow ssl
maximum size output buffer be write siglen param
dmax be size param array have be allocate
behaviour can be control by additional constant flag
certificate be unsupported type
check error queue find reason failure
line be indent by param space
pointer subject name successfully read certificate
pass be passphrase use
raw rsa encryption
callback have be call
keytype be type key
read state be unknown
handshake be not successful
pkey be private key include structure cert correspond certificate
signature algorithm ca certificate be acceptable
description name
param ca certificate be acceptable
signature algorithm ee certificate be acceptable
authentication api
end entity certificate algorithm can be use explicitly sign
key exchange api
param end entity certificate be acceptable
chain be suitable suite use
issuer name be acceptable
api be function can be use decryption encryption
be bitmask make follow bit
message digest
be ignore by api
protocol version
function operate current end entity certificate
retry may lead constant condition
every constant valid base constant byte process , constant byte binary output datum be produce
first be generation api key , second be actual encryption
crl only be use
can be use obtain state information ssl object create ctx
be call as follow use api function describe api page
always create key
callback be invoke call api
encryption api number secret bit
algorithm can be iterate input , depend constant time
api return pointer current default constant
api may be call repeatedly process large amount input datum
callback function param be use
api call api
api be call outer loop
callback function be call as callback
api be call
function can be call multiple time encrypt successive block datum
may call api delete certificate associate ssl object
next call handshake function lead call constant
as time constant be possible , call api can cause write operation
ocsp protocol do not require certificate be include cert field response
cipher param specifie encryption algorithm use
handle format as privatekey function but
be implement by call api sk set null
maximum size output buffer be write outlen param
number byte write be place outl
certificate callback functionality be always call even be certificate be already set callback can modify delete exist certificate
param not be finalize additional attribute can be add
old style callback be except be initialise call constant callback be type void
attempt reduce buffer size constant be ignore
api hand accumulate consecutive probe value , ie way
typically include param iv
api have semantic as api
key schedule be expand form key
operation fail
api set cipher param base algorithmidentifi param
api compute mont , ie param
api set message digest bio param
server choose follow preference
option be not need client
api retrieve field value param structure
see note
shutdown be successfully complete
operation succeed
shutdown be not yet finish
message could not be decode
disable version rollback attack detection
probably param do not contain correct alert message
verification succeed no peer certificate be present
handshake be not successful but be shut control by specification protocol
certificate be corrupt , contain signature do not verify correctly , etc
structure define datum lock need handle
store session not be reuse
shutdown be not successful
cause be error condition
certificate limit be ignore
message be generally warn
error message be generate
write operation be not successful
be typically do file bios
function be implementation api des
be often not desirable
implementation be base one
follow function be implement
ssl bio be only current exception rule
ec library not use seed value
negative value indicate error signature verification failure
function api can be call context
no configuration take place
call api may be make wait until datum be available retry bio operation
constant be numeric release version identifier
constant , accept constant byte challenge but appear only use constant byte generate encryption key
second way get functional reference be by ask openssl default implementation give task , eg by api , etc
check error stack find
can be highly confusing
application can retry fail call immediately avoid situation by set constant underlying ssl structure
api be similar api except digest context param be automatically clean
api be identical api except output be write file pointer param
private key be random integer
api set fp file bio param
main purpose function be enable application lookup signer certificate use appropriate technique
format string be describe api
param can be bitwise flag
api can be call without block actually receive datum underlie socket
api be stream cipher variable key length
failure be only flag
api exchange value param
api set certificate store use certificate chain building param
error code can be obtain by api
oid commonname have follow definition
openssl , type constant be use express certificate request
connection use protocol
function api force internal representation constant affine constant system
blowfish can be use mode as des
blowfish be currently one fast block cipher
api free memory associate constant
api initialize sign context param use default implementation digest param
api create bio chain consist ssl bio follow by connect bio
record have be completely process
call api internally finalize copy digest context
value reflect underlie api behaviour
valid point curve be special point infinity
point be set be infinity by call api
api set key length cipher ctx
api set give constant psk identity hint param ssl context object param
expiration time single session can be modify use api family function
api initialize param structure
blowfish be quite bit fast des , much fast idea rc constant
be no way restrict list compression api support per connection basis
api set give constant psk identity hint param ssl connection object param
instead call hash function directly
api be implement as macro
reference count session param be incremente by constant
function reason code be unique within constant
understand two command
client session be add session cache
ephemeral rsa key exchange can take place
option be not activate by default
constant openssl have unique library number
blowfish use variable size key , but typically , constant bit key be consider good strong encryption
case api value param provide number point array param be force
api add session param context param
not be include
current hint param be delete
prng state be not consider
api compare param
reset param allow another connection
triple des , constant bit , constant bit , des constant bit rc constant
handle complex part certificate , be type constant
related structure be certificate request , define pkc constant rsa security , inc , reflect rfc constant
openssl server match identifier list by client against compression api unconditionally activate compression
old session be remove by call api
error can be obtain api
setting be keep
alternatively , constant compatible daemon prngd can be use
api not provide diagnostic information
param be length bit safe prime be generate
param be paramter , not use as param
name function be perhaps little misleading
api be as api
api decode encode pkc constant rsaprivatekey structure
api convert text string param
function can be call several time param include additional datum
api hash param byte datum param verification context param
call api internally finalize copy digest context
api free already exist buffer
api close free memory allocate by configuration module
api sign datum param use private key param place signature param
api print param stderr
evp signature api be high level api digital signature
param be not incremente point start datum write
api print param word param stderr
api completely free param
api parse message format
library contain fast implementation des encryption algorithm
standard call api can be use determine amount pende datum read write buffer
can either be do automatically
reason auto increment behaviour be reflect typical usage function
but wildcard may match part label explicit prefix suffix
message be always fatal
memory be allocate buffer encode datum write
shutdown procedure consist constant step
callback be call session free param session cache
long name short name be interpret as well as numerical form
system without device provide entropy kernel , egd entropy gathering daemon can be use collect entropy
api do not provide diagnostic information
by default , host param would match certificate san cn value
api free param structure param
api set param particular param object
ssl engine inherit behaviour param , respectively
api initialize cipher contex param
evp envelope api be high level api envelope encryption
openssl library can session later reuse
validity chain be determine by check
datum can be encrypt use key
several chunk can be query
call api link algorithm
error can be obtain api
openssl keep internal table digest algorithm cipher
api be use retrieve information param
param object may be reset
generate random key iv envelope by use public key encryption
api allow retrieve function pointer provide callback function
api set shutdown state param
certificate type issuer name
api be as api param set constant
api retrieve internal pointer verification param respectively
openssl use table lookup cipher via function as api
constant represent point curve
support future functionality
key be inherit by param object create param
api set dh param be use be param
param have constant behaviour
api reduce param modulo param place constant remainder param
api print short summary state hash table
api decode encode dsa public key component structure
api destroy association two connected bios
can be use traverse bios chain use conjunction api find bios certain type
api be currently implement usig macro
api decrypt param byte param use private key param store plaintext param
see api information generator
api load one serverinfo extension param
api print load actual load
valid certificate chain partial chain be receive , but certificate be not accept , trust ca
api add certificate param
param structure record statistic aspect access hash table
api decrement reference count param , remove param
load be average number datum item per bucket hash table
free allocate memory
be possible add require cipher digest
api hash param byte datum param signature context param
session be unique param
recipient certificate be need locate appropriate recipient pkc constant structure
session can be hold memory param
can be do by prepende buffer bio
api free previously loaded error string
api set trust set param
actual load be average number search need find item hash table
api hash param byte datum param verification context param
function be effectively version api support stream
function be currently implement use macro
only contain key be print
filter bios usually pass operation next bio chain
function can be call several time param include additional datum
creation ssl structure fail
close notify alert be send as warning alert
example constant error be certificate error
can contain public as well as private rsa key
api create param contain value param
function load certificate private key constant ssl object , respectively
previous param associate param be clear
subsequent call api be send param
option already set before be not clear
bios can be join together form chain
receive side may cancel connection reception warn alert discretion
indicate error relate unrecognised option miss param error queue
warning alert be send
api add option set via bitmask param
last entry array be _ lcb _ 0,0 _ rcb
api set signing context param use dig param engine param
reason code can be obtain use api
api set context associate param structure param
api reset ssl object allow another connection
datum read write first bio traverse chain end
other may not even call callback
param function process crl use param
reset operation however keep several setting last session
typically memory allocation failure asn decode error
certificate be revoke by certificate signer
function serve no recognizable purpose
be currently 17k , sufficient maximum size tls record
be use flush final block bio
default value be use
api set ec curve ec param generation param
add current content screen prng
attempt be make establish one first call
close notify shutdown alert be send peer , connection be consider closed session be close correct
api can be call repeatedly chunk message be hash
api set write buffer size bio param
internal check be suppress as appropriate
be effectively disabled neither client nor server attempt use sslv constant
host name check be scope api certificate usage
api extract decrypt content pkc constant envelopeddata structure
clear bit constant disable constant code present crypto library
api function be available convenience window programmer
use sequence api
api set intenal verification param pointer param
can supply api handler , can specify constant engine flag , can expose array control command description
api compare absolute value
session be reuse
api initialise param start encode operation
prefix be arguably wrong
api add object module
may not give useful information
api function provide limited support password base encryption
api compare number param
api delete entry param position param
server only understand client hello message
function be implement use macro
careful selection param provide pkc constant compatible implementation
connection establish api only understand protocol
openssl library handle incoming datum by dynamically allocate buffer
error code can be obtain by call api
dynamic lock be currently not use internally by openssl , but may future
api replace creation time session param choose value param
default be : constant bit encryption certificate , triple des encryption private key , key iteration count constant mac iteration count constant
library perform arithmetic operation integer arbitrary size
api set param use param byte long key param
standard do not give maximum size certificate chain
openssl constant later
lifetime be specify by store creation time session timeout value valid time
mechanism be entirely base use constant pair assume ascii input _ lrb _ no unicode utf
api function check consistency private key param public key param
api free component param
contain peer certificate
default size be use
stack contain peer certificate
api be similar api except api attempt parse datum bio param
callback function may not be call
application want allow user specify exactly which engine want use
old session be remove replace by session
function be either trinomial form
octet string , bignum hexadecimal respectively
builtin ui api do not care info
available param choice be describe api
session be not reuse
behaviour api additionally depend underlie bio
session be assign maximum lifetime
value indicate failure
window api reserve filename param be constant encode
default mode be constant
blowfish consist key setup phase actual encryption decryption phase
param be free replace successful call
not prefer constant cipher
be write use public key cryptography , as rsa constant
api add piece memory api use time
param be private key recipient , param be recipient certificate , param be bio write content param be optional set flag
api be use register index application specific datum
api try read param byte specify param buffer param
api attempt encrypt param structure param
api consist key setup phase actual encryption decryption phase
api encrypt param byte param use public key param store ciphertext param
recognise option intend command line configuration file use
api function be synonyms constant _ _ apiname counterpart
encode file name constant
api only check session store internal cache
api take square param modulo param place result param
can add intermediate optionally root ca certificate use api
function api convert constant format
addition multiplication operation within field be perform use irreducible polynomial function
api verifie datum param use public key param against param byte param
error code can be obtain by call api
be possible application dynamically interrogate loaded engine implementation name , description , input flag available control command , provide flexible configuration scheme
application typically call api set end entity certificate private key
alpn protocol not select
flag have no effect ssl connection , dtls connection
output line be indent by param space
function be effectively version api support stream
bio behave manner describe api manual page
however , be not require
possible work around by add buffer bio api chain
api succeed place datum write buffer
api be implement as macro
constant mean enable constant time
api destroy sensitive datum hold within constant free constant memory
api combine call api create connect pair bios param write buffer size param
function describe use api work
automatically support ecdh use appropriate shared curve
api attempt complete ssl handshake supply bio establish ssl connection
param be optional set flag
algorithm be loaded api
api set param use param byte long key param
param be bio write datum
api set list available cipher param use control string param
list cipher be inherit by param object create param
follow description apply case constant procedure
await incoming connection before processing call
api calculate value generator param store result param
function be implement as macro
api add first certificate find file certificate store
api allocate initialize param structure
api be ofb mode blowfish constant bit feedback
constant be however call synchronize external cache
order operation be significant
certificate be add store chain certificate use api
evp encode api provide high level api base constant encoding decoding
api set timeout value session param second param
operation do not complete
shift function , param may be variable
api select param perform operation use key param
detail depend application
api record constant thread -PRON- would give param object
state information however can be significant interest
ca name extracted param list ca send client
api use propagating cipher block chain mode use by kerbero constant
state be internally maintain
api add ca name
api be use register index application specific datum
querying state information be not informative
result be place back param
api clear datum write buffer
constant _ class function load certificate key param
ca certificate be additionally look location trust ca certificate , see api
content write filter be use verbatim
api do not provide diagnostic information
be no corresponding function work single ssl object
api calculate inverse supply point param
ssl object pass several state
api set support curve param string param
anonymous cipher use ephemeral dh key
api load certificate chain param
high level ca certificate
api be use store application datum param object
no canonical translation be perform
set maximum depth constant allow level constant
api allocate initialize param structure
api initialize exist uninitialized param
api describe arithmetic operation
comparison be describe api
application not have call api but may wish separate handshake process processing
conversion param external format be describe api
api do not provide diagnostic information
alpn sni callback be execute hello processing
api set limit which
api clear extra chain certificate associate param
PRON- can find
output line be indent by param space
creation param object be describe api
api describe certain assignment , api generation random number , api deal prime number api bit operation
api erase key data param release associate resource
param typically be supply by functionsuch as api
ephemeral dh key exchange can take place
depth certificate chain be use
handshake be cancel reason unrelated protocol failure
api may be call repeatedly obtain temporary param
replace constant use by rsa key
api set digest context param use dig param engine param
be useful -PRON- ask
api be similar api except api attempt parse datum file pointer param
constant be issue
api add encryption algorithm table include password base encryption algorithm
start subject certificate , follow by intermediate ca certificate , end high level ca
api implement cfb mode des 64bit feedback
version openssl before constant only have single certificate chain store certificate type , openssl constant later have separate chain store type
api read write underlie socket
api decode encode rsa public key use subjectpublickeyinfo structure
api turn blind free memory use blind factor
api set certificate store use certificate verification param
type key can be obtain api
constant be cryptographic hash function constant bit output
datum write buffer bio be buffer periodically write next bio chain
api function print constant output public param constant param
api convert param textual representation
api set mark current topmost error record
api be api construct hash function constant bit output block cipher
function api compare public key component paramter key param
api be add openssl constant provide clean way traverse bio chain find multiple match use api
api be synonyms api
api set renegotiate byte count param
size byte
be possible fail
call api encrypt input byte output update ivec num
api be call session
api initialize exist uninitialized param
be possible directly access database eg searching
api deal key param generation
engine functionality be add openssl constant
api hash param byte datum param digest context param
standard terminology ephemeral constant scheme be dhe ecdhe
api can be call free whole chain
api be available mit kerbero library as well , be available name api
api print human readable version param bio param
output format can be extensively customise by use param
api add cipher digest use directly indirectly by
numerical form always be use
api erase memory use by param set param value constant
function api can be call context
representation be write as
ssl session be automatically renegotiate
api be use destroy sensitive datum as key
store associate parent constant be use instead retain compatibility previous version openssl
api can be call several time param hash additional datum
api be call by api handle param generation process
api free param structure param
function work context type ui
api perform check param
api clean openssls internal object table
api allocate param structure initialize
api free param structure component
follow function be include des library compatibility mit kerbero library
api create file bio wrapping param
api set param structure modulus param by precompute inverse value
pem function read write structure pem format
session internal session cache be keep api type database
api affect protocol behaviour ssl library
function implement digital signature algorithm
signature generation verification be describe api
as version constant implementation be group together algorithmic api param module
sense pem format be simply encode datum surround by header line
api check consistency private key correspond certificate load param
api be macro
api be as api , use constant
be limitation current code rather evp api
behaviour api can be change by use similar api function
generation share dsa param be describe api
constant be useful use comparison assignment
param be create
function api get set status constant curve
api initialise param start decode operation
function be implement as macro
constant can be construct by call api
api convert positive integer constant form length param place param
work constant system provide efficient point multiplication operation
last item instal be check
set get projective constant use api respectively
do not need know care engine control operation configuration file
api set parity pass param odd
connection establish api only understand protocol
api set socket bio param close flag param
null bio can be place end chain discard datum pass
be two type bio , bio filter bio
server only understand client hello message
rsa pair be check
last item add param be check
api set quiet shutdown flag param be param
curve can be associate constant by call api
api update param by squaring param
be possible api reason constant
constant represent public key associate private key
function api can be call context
api ssl object be reset api currently set correspond param
be name curve associate oid
param , after specific number use , by constant blinding param
message can only appear api bio , respectively
api copy param object param
reference count newly create constant be initially set constant
api can be call retrieve set accept socket
verification certificate can be control by set logically ed param flag
api attempt change file pointer start file use fseek
session be negotiate
function be thread safe , unlike normal crypt
api can be use add additional item list client cas
be pass retrieve as param type
api remove cipher digest table
underlie bio be not connect yet peer call would block api
api write socket file descriptor can be use
call api internally finalize copy digest context
api add appropriate mime header pkc constant structure produce message
api add signer certificate param private key param use message digest param constantontentinfo signeddata structure param
api output structure ber format
certificate verification depth set api stop verification certain depth
api be fast version unix api function
previous version openssl be link message digest type public key algorithm
api use string param set accept port
prime number generation have negligible error probability
constant bit aes , gost constant , gost constant bit aes , constant bit aes , triple des , constant bit , constant bit , des constant bit rc constant
api do not affect setting
param be ignore
api get degree field
version take only small amount space relative fast api implementation
api be constant
api function be call rsa encrypt , decrypt , sign verify function
api clear option set via bitmask param
change param not affect already create ssl object
api duplicate context param
case application may consider configuration file error as fatal exit immediately
paramater include param
error may be handle differently by different application
api allocate initialize param structure
param be well define point curve choose cryptographic operation
after call api algorithm specific control operation can be perform set appropriate param operation
typically be call certificate callback
application can use api directly have full control session can be resume
client ca list param be open
param be safe prime
current option setting be copy
correct handshake api be automatically set
option setting ssl object be use
change timeout value not affect already establish session
main purpose function be enable application lookup recipient key use appropriate technique
application have be configure by user admin want use acme engine
certificate have expire be not currently valid
api could be call by api
password dialog may ask password twice comparison
param multipie by param give number point curve
can be use by pass api respectively
structure inherit setting underlie context param
api set constant param be pass callback param
flag constant can be set api encode data one line expect datum be one line
due realization , session behave accord timeout value valid time session negotiation
ssl bio be exceptional
api be use retrieve information param
operation perform by key param generation depend algorithm use
be equivalent call api
api extract decrypt content cms envelopeddata structure
api allocate initialize param structure
api set param be use
param be optional set flag
store pointer associate param be copy ssl structure
api free private key param
as result ssl structure not be affect
api macro can be use public key algorithm support signature operation
constant be cryptographic hash function constant bit output
api be use generate verify signature constant mode
api macro set message digest type use signature
param be bio write datum
file descriptor link param
case generation option merely set appropriate field param
ssl structure not be affect by chain subsequently change parent constant
param be appropriate param structure
api read number byte file param add prng
previous two bug be fix new api function
reference count be decremente during api
param function process netscape certificate sequence use param
api create param copy content param newly create param
api decode encode pkc constant rsapublickey structure
be api macro
function api allocate sufficient memory store hexadecimal string
cache space may be reclaim by call api remove expire session
reference count param be incremente by constant
api cause run session cache param remove session expire time param
several openssl structure can have application specific datum attach
function decode encode crl
chain store be use build certificate chain
api check syntax param
text variant version number release date
engine api internal architecture be currently review
function constant offer constant bit optimised implementation nist , curve respectively
api be constant
api compare certificate param against signer identifi param
api create ui use default ui api
api look set default verification api param
api be use create lock
api copy point param
api call constant actual creation
api finish unload configuration module
param be copy ssl structure
api der encode data buffer param
chain associate param be copy ssl structure
api macro set dh generator param dh param generation
no share cipher error be generate
session -PRON- would context be set by server
datum can be buffer inside param be ready immediate retrieval api
use function api find appropriate set param
automatic chain building be perform session
unused session be drop end cache
param be private key recipient , param be recipient certificate , param be bio write content param be optional set flag
api be use absolute value param
session -PRON- would context become part session
reference , flush cache line be introduce extension
start openssl , complete file be read
api wait handshake take place
api set field value param string type param value determine by param
constant be use
api be low level function blowfish encryption
api allow various cipher specific param be determine set
api add prompt ui , as well as flag result buffer desire minimum maximum size result , not count final nul character
remain function be implement as macro
size can be determine by call api
alternative be use api
api may be call sensitive datum as user enter password
seed value can not be recover prng output
module , include builtin module be unload
function decode encode cms contentinfo structure
first form be define prime field fp
one chain can be set key type support by server
api retrieve chain associate current certificate param
envelope encryption be usual api use public key encryption large amount datum
macro api set rsa pad mode param
api can not fail
allow application initialize context externally
use dynamic memory allocation store datum structure
function api can be call context
handshake be start
api be wrapper function api param set null
api can be use copy message digest state param
implementation be register table index by nid value , engine can support arbitrarily many
api parse structure
api allocate ssl bio
api perform actual query egd daemon socket param
api join two separate bios connect pair
param byte be query write param
be useful
callback have be call indicate error exit handshake function
use constant param use client mode
only module load dso be unload
psk identity constant key use
application can use long key maintain consistent level security
api be wrapper api
purpose callback function be select
api be macro
enable constant time
api query entropy gather daemon egd socket param
tlsciphertext decrypt invalid way
api perform first step constant key exchange by generate private public dh value
api first constant bit vector point by param , use key param
api query constant byte use api seed openssl constant prng
application can use api process command line
api initialize param structure
api param string represent field name use api
status nibble have one value constant development , constant beta constant , release
after call api algorithm specific control operation can be perform set appropriate param operation
by call api , be combine party public value compute share key
api examine internal state information ssl object
param function process pkc constant contentinfo use structure
length memory block can be obtain use api
api allocate initialize param structure
api clear option set via bitmask param
api override verification result
api use param
only change verification result param object
param can be set null
api be similar api except api attempt automatically detect private key format
openssl ec library do not use seed value but do enable -PRON- inspect use api
api initialize exist uninitialized param
api initialize list cipher , session cache setting , callback , key certificate option api default value
param byte be query use seed openssl constant prng use api
additionally , openssl support dynamic lock , sometimes , part openssl need well performance
invalid value param be give
api initialise param before first use
bio can transparently handle ssl connection , unencrypted network connection file
param be ignore
ansi define api generate curve param random number
either tlsciphertext be not even multiple block length tlsciphertext padding value be not correct
may include identifier application session , application algorithm param , lifetime context
api family function operate way as api function
reference count object be incremente by one
not be destroy
overall security be only constant bit
check error stack information
function be use obtain temporary param variable param
field value be add be param length param
constant obtain constant associated param
param can take value constant pkc constant padding , constant padding , constant no padding , constant oaep padding , constant pad constant
api set support curve param curve array param
api add param as private key param
api be use destroy lock
api call constant actual destruction
be implement as macro
api add private key param type rsa param
tls client curve be use directly support curve extension
openssl version after constant report standard term via api
function api add standard openssl configuration module internal list
constant can be set time
api add param as private key param
use read only memory bio avoid problem
reference count api object be not incremente
have call function , engine object would have be dynamically allocate populated implementation link openssl internal link list
behaviour api depend underlie bio
can be use by openssl configuration code
use accept bio , connection can be accept datum transfer use only bio api
way platform specific operation be hide by bio abstraction
original value reappear
tls server curve be use determine set share curve
api add param as private key type rsa param
public key , private exponent relate secret value be null
api free component param
function api allocate initialise param structure use constant function
current time be use
field length be calculate internally use strlen
be perform transparently during api operation
be possible set custom seed use api pass pointer memory block , along length seed
tls standard allow integration compression api communication
not member constant be use
add buffer bio chain speed process
function handle application specific datum param
ssl bio be reset initial accept connect state
do not become part establish session
api decode encode rsa private key net format
api copy ssl session -PRON- would bio chain param
current state information can be obtain use api family function
ssl session contain information require constant connection without handshake
application can use api function
api compare two thread id
issue arise process certificate , render unacceptable
api function allocate public key algorithm context use algorithm specify param engine param
typically disconnect underlie transport
call api ssl bio close current ssl connection by call api
application constant use may agree certain compression api
api set callback function generate session id session param be param
api be send next bio chain
normally be public key
function handle rsa signature low level
mime parser use by api be somewhat primitive
api set api already exist bio
functional reference can be obtain one two way
server only understand client hello message
function api be use finalise operation process default
api be use register index application specific datum
do by locate ssl bios chain call api internal ssl pointer
evp signature verification api be high level api digital signature
call api read write datum underlie stream
connection establish api only understand protocol
api set bio param close flag param
api add algorithm table
api function set peer key
api provide access param object within param structure
mark be remove
api free param structure
api set quiet shutdown flag param be param
api load certificate param , api load param
param be automatically allocate
exist structural reference require engine , by ask openssl default operational engine give cryptographic purpose
api decode encode dsa public key use subjectpublickeyinfo structure
random number generator do not need be seed rsa signature
bio wait incoming connection
function be not normally call directly , various macro be use instead
be help user provide proper locking
function api can be call context
be help user provide proper
be not change
case , bignum value not be use by implementation may be use alternative datum storage
be no datum be write be read
api turn blind key param generate random blinding factor
good solution be probably avoid deleting item hash table inside doall callback
server always generate dh key
api be bio control operation take param various type
content be process stream fly not hold memory
every read read write memory bio remove bio be read small chunk , operation can be slow
api can be call repeatedly chunk message be authenticate
output filter be write param
datum read internal copy operation
api set ssl bio mode param
api serve two function
internal command be not intend be expose constant configuration by application , administration , user , etc
appropriate default implementation api be use
file command name as sslprotocol , ssloption etc be recognise instead protocol option
supply datum be copy
command prefix alter command recognise by subsequent api call
server side , additional restriction apply
api free param structure param
api can only find first match entry copy content field verbatim
pkc constant padding
function api be shortcut call api appropriate api function
ssl server always follow client preference
client side , inclusion list be sufficient
cipher have additional requirement
description constant please refer api
bios can be use immediately after call api
currently be widely use mode
api return total number share curve
api add appropriate mime header cms structure produce message
api set datum string param buffer param length param
basic type reference be use instantiating engine , iterate across openssl internal constant load engine , read information engine , etc
api output structure pem format
length be determine by strlen
ssl server always follow client preference
object act as container implementation cryptographic algorithm , support constant mechanism allow be dynamically load running application
datum write chain be automatically translate ber format cms structure appropriate type
client mode be set
function implement constant key agreement protocol
server mode be set
api can be use add recipient exist enveloped datum structure
three additional callback function , constant
list algorithm associate public key algorithm appear api
function api get set param , private key constant public key param respectively
api process partial block datum remain param object
reference count be constant
hash table entry can be arbitrary structure
param be bio read message
library implement constant dynamic hash table
alpn protocol select
mime parser use by api be somewhat primitive
param typically be socket file descriptor network connection
flag prevent command usable constant engine function as api
second subsequent call api await incoming connection , request retry non block mode
flag be purely informational caller
be careful : table may decrease size , move item -PRON- be currently low hash table
api attempt decode param byte param
generation share dh param be describe api
param be process execution api function
api set file descriptor param as facility side param
attempt create accept socket bind address
api finalise structure param
can be achieve by add null sink bio end chain
call function api
otherwise total number curve be provide
api can be use extract
api call api convert password des key by call api
index be globally param can be retrieve use api
function api set key param generation callback param
textual representation cipher name
api retrieve field name param structure
compound format may not work
function populate param array information builtin curve
function be implement several platform assembly language
failure error code can be obtain api
api duplicate thread -PRON- would value
param contain content be process
function api can be call context
param be incremente byte follow parse datum
api call callback function hold param structure pass int param as param
underlying param be free
key length be set value recover key length
param structure consist two bignum value ecdsa signature
internal ssl structure be free use api
function api get set constant param
api set signer certificate param
index value be set
similarly command line constant be recognise instead constant instead constant
param be free
param contain bio write content after processing
api be macro
library try complete chain available ca certificate trust ca storage
note , be constant data format
api increment reference count associate param
api internally clean param structure
api store multiple underlie constant generator fast point multiplication
object can be add by call api
server may request certificate client
almost current bio type not request retry
only pass relevant datum function
api be identical macro obtain name currently use cipher
after call api algorithm specific control operation can be perform set appropriate param operation
api set reference key param however use supply param internally param
default dig public key algorithm be use
be usually work around by
attribute can be add use param cms attribute utility function
be use by pem api write trust certificate object
context can be reuse call api
make possible retry api change buffer location
api set timeout newly create session param
api be similar api , but encode output contain certificate auxiliary trust information
list be globally maintain ssl operation within application
function api set param context param
api set size internal session cache context param
api add compression api param identifi param list available compression api
call api internally finalize copy digest context
function api set param time represent by constant value param
function api set get constant curve respectively
error string contain numeric code
param word array param
function decode encode object identifier
can be use
expired session be remove internal session cache , either directly by application automatically
constant hexadecimal output component rsa key , dsa param key dh param be print param
api set verification context param use dig param engine param
api transform param representation store param memory location point by param
include pem , pkc constant , ssl library
ssl session have reference count two user : ssl object
api print number entry bucket hash table
client can only send exactly one session ticket
api be macro
api be macro
flag prevent session store internal cache
api append single certificate param chain associate current certificate param
function , param be previously allocate param use temporary variable
api add option set via bitmask param
ssl session have reference count two user
header record be evaluate
api divide param by param use param
behaviour violate tls standard
be common query openssl mailing list
api do , but constant number generate by function be not necessarily unpredictable
api be use lock unlock lock
one typical use bio pair be place application control , normal socket api be inappropriate
place quotient param remainder param
detail cipher obtain by api can be obtain use api family function
default ui api do not care datum , but api may
constant random datum can be pass underlying api call api
api set param value constant param respectively
depend setting , param be internally reference by constant linked session cache
api set key only param
api decrement reference count param
depend presence constant , session negotiate handshake may be cache possible reuse
api remove ssl structure point by param free allocate memory
difference two be only conceptual
api be variant api write param character
api generate constant string represent error code param , place param
api be variant api truncate stre
follow api mostly operate input output stream param
alert be send as special message do not influence normal datum stream
connection establish api only understand protocol
constant be synonym constant be synonym constant
automatic flushing may be disabled api can be call explicitly by application
api operate param word arrays param
api mix param byte param prng state
server only understand client hello message
api set internal flag constant
api set context associate param structure param
api test  , constant , param respectively
ssl _ class function only load certificate key specific ssl object
session be thus consider be shutdown , but no close notify alert be send peer
server , callback function , either agree reuse session ticket information start full tls handshake create session ticket
failure may appear delay
indicate unknown protocol version
constant number generate by function can be use constant purpose certain purpose cryptographic protocol , but usually not key generation etc
api operate param word arrays param
version constant have version identifi interpretation
suitable input come user interaction certain hardware event
api do not hash datum be sign , be normally use sign digest
api read write underlie descriptor
random prime number be call as describe api
api add mode set via bitmask param
api free component param
api free structure
api compute great common divisor param place result param
can be do by call api half pair reading send underlie transport
signature be write param amount datum write param
octet string be store buffer along associated buffer length
api be use decrypt piece datum
thus , increase uncertainty state make prng output less predictable
api be call by api
addition constant can be convert various external representation
information param api function discuss , refer api
api set automatic curve selection server param
api operate param word arrays param
api add mode set via bitmask param
callback function may be use provide feedback progress key generation
api be call by api
api add crl param
datum be only write next bio chain
api be use derive share secret public key algorithm
api copy param
api retrieve next index match param after param
api only report success complete chunk be write
handle engine be release during change
can be practical have api handle password dialog interactively
replace constant use by dh key
api copy curve param
dh param can be reuse , as actual key be newly generate during negotiation
multiple line be use
addition param , api inspect current thread openssl error queue
api decode block param character base constant datum contain param store result param
actual key be newly generate
point hold bignum be calculate by convert point octet string convert octet string bignum integer
api be call by api
equivalent be api
handshake be perform use api respectively
api be macro
can be process
api be use encrypt piece datum
api can be use shut connection
api attempt decrypt param structure param
api be use read write datum connection
api set callback only param
synchronization internal session cache be realize via callback function
certificate use depend cipher select
inappropriate message be receive
constant be text variant version number release date
inside callback function , session can be save disk put database use api
be possible obtain state information engine
param be not incremente point start datum write
api initialize param structure
api combine api single call
internal certificate store openssl can hold several private pair time
api attempt write null terminate string param bio param
api trigger processing next record
api generate cryptographically strong constant number param range constant param
new function follow name convention use number constant
api compute api message dig param byte param place param
valid code param be document api
api be use adjust constant setting
api compute constant message digest param byte param place constant message digest param byte param
api do , but be base api , hence number generate by api be not necessarily unpredictable
api convert param byte long representation param store param , newly allocate param
api test
api set verification param
function first search constant api object constant object
shutdown state connection be use determine state ssl session
actual condition correctly close session be constant
api function can be use help import necessary datum
api free param structure component
api can be use set chain bios which be duplicate prepende chain
api behave similar way api except param do not need be initialize always use default cipher implementation
api set reference key param however use supply param internally param
api can be use set state without send close alert peer
api set callback function , which be automatically call
function decode encode pkc constant dh param use dhparam structure describe pkc constant
api set param only param
api currently do not print time zone
library number , function code reason code respectively
api either print gmt nothing
call api free memory associate
call api decrement reference count param
root ca certificate may be omit accord tls standard thus standard conforming answer can be send server
retrieve context can be use conjunction standard cipher api set
api be call by api
session cache , list cipher , list client cas , certificate key
ui stand user interface , be general purpose set api prompt user constant information
application datum be only maintain session hold memory
api generate random key
client only send certificate
filter bio take data one bio pass another , application
api close ssl connection bio chain param
function handle application specific datum dsa structure
datum encode by private key function be unencrypted offer no private key security
only last verification error occur during processing be available api
session be automatically remove session cache mark as constant
can be do by wait connection call
api erase memory use by prng
be possible make one half bio pair have datum process by chain application control
can be resolve by use api freeing accept bio after initial connection
api item have unique integer -PRON- would , human readable comment string describe curve
verification callback can be set inherited parent structure perform operation
do by locate ssl bio chain call api internal ssl pointer
api retrieve ssl pointer bio param , api can be manipulate use standard ssl library function
api add private key param
recognise certificate private key option
api function attempt discover validate certificate chain base param
constant enable caller associate arbitrary additional datum specific elliptic curve scheme use param
call api second time
be describe api
api set callback function , which be automatically call
api subtract param modulo param place constant result param
api shut active connection
api allocate param structure copy param value newly create param object
param be file number function set lock
mechanism describe relate solely software prng implementation build openssl use by default
default behaviour can be change constant option api
entry be append
api be synonyms constant _ _ apiname counterpart
client step respect server answer violate version rollback protection
evp envelope api decrypt public key encrypt symmetric key decrypt datum use public key encrypt symmetric key
constant padding byte value constant be add
client send hello accept , server only understand sslv constant
not be reset by call api
api clear flag indicate by param
next time openssl try set rsa key , bundle engine implement constant be pass api
api duplicate dsa as dh
flag be leave exist state
api exist generic type , server only type , client only type
be reuse flag be set can be query by application
api create bio chain consist buffer bio , ssl bio connect bio
api set field name param
param be represent as constant internally can be free use api
api set flag param
api generate cryptographically strong constant number param length store param
be set constant
previous version openssl could effectively only use single ecdh curve set use function as api
api set default param ssl object newly create param
version openssl library include release date
two significant bit number be set , product two random number always have param length
server only understand client hello message
callback function be call
number be odd
significant bit random number can be constant
param keep internal link information session cache list
be lose
api attempt read param byte bio param place datum param
symmetric algorithm , digest asymmetric algorithm can be replace by engine module provide alternative implementation
int api look sign receipt request param
constant be need perform lock share datum structure
form elliptic curve equation be modify
constant , list be empty fact
be currently no corresponding inverse bio
api operation be successful
connection establish api only understand protocol
api be use retrieve information param
ssl object already create api be not affect
various evp function automatically use implementation automatically preference build software implementation
function api free context param
constant only refer internal cipher default key length
reference count bio be not incremente
function perform arithmetic operation bignum unsigned integer
no shutdown set yet
lhash code regard table entry as constant datum
api clear information cipher context free allocated memory associate api
provide buffer -PRON
be bio wrapper cipher api
read operation be successful
api be variant api
api put param cryptographically strong constant byte param
api do not provide diagnostic information
function api enable application use keying material function api purpose accordance rfc constant
verification result be part establish session be restore
be discuss next section
result be unpredictable
api place iteration count param counter use find generator param
api place underlie param
api add two point param place result param
api be call by api
be warn alert
api be macro
connection use protocol
resume session application have state information available exactly as if full negiotation have occur
function api process two command line param
be valid param be one param
api convert absolute value param constant form store param
api may run several hour before find suitable prime
api allocate initialize structure
be use hold single large integer
api free memory associate constant
can be achieve by set verify signer certificate manually use sign datum utility function
api be as , but api additionally store file name line number error occur param
api be use generate signature piece datum use private key
certain signature improper algorithm identifier be accept compatibility api constant
api set callback only param
two rsa pad mode behave differently
basic object library be param
session -PRON- would be arbitrary sequence byte
function decode encode pkc constant certificate request
value param be update reflect number command option process
api initialize digest context param
obtain signer certificate by unspecified mean set use api
constant be use
typical usage application retrieve param use api retrieve identifi information use cms
api allocate initialize param structure
function api set command prefix param
param be numerical form object , param short name param long name
no check be perform supply data param be use directly
datum be use directly not encapsulate
api set certificate be vertifie param
no certificate be search
entry be add position determine by param
case pad rsa algorithm identifi byte be add check remove
only first one be examine
api initialize exist uninitialized param
additionally , session -PRON- would be transmit clear information
exact definition can be find x. constant document constant , pkix
openssl , type be use express certificate , type constant be use express crl
constraint be violate by default behavior openssl library
server look session internal session storage
without callback set , openssl server generate unique session -PRON- would pseudo random number maximum possible length
constant function support full range asymmetric algorithm operation
be constant api dtlsv constant
api add copy param structure param
apply api
behaviour api depend underlie bio
as always , can be achieve by precede cipher bio buffer bio
be possible determine correct recipient key by mean set cms structure advance use cms utility function as api
server generate session -PRON- would
detailed description possible state be include later
api change ui api associate give ui
api set callback function generate session id session param be param
api set equivalent curve param curve
depend behaviour platform function
one solution be use non block use timeout api call
api obtain previously set curve param
be name convention function
command prefix param be restore default value
api function set param default message digest nid public key signature operation associate key param
api destroy sensitive datum hold within constant free memory
api be call by api
api be available backward compatibility mit library
api reinitialise digest bio
api disable configuration
nothing be do
old value be replace
bio be normally call api _ _ apiname filter bio api _ _ apiname
api test if bit param be set
negative constant be convert constant
ssl bios can request retry
session be not include api count
api be use decimal system
api create ui use give ui api
api add digest algorithm table
be use flush possibly pad final block bio
api free structure
only certificate be send
api function not provide diagnostic information
api decrement reference count param remove param structure point by param free allocate memory
be send server
function api compare param key param
rdn be create
string type content be compare
client use verification store verify server certificate chain server use verify client certificate chain
api set param object param be result verification certificate present by peer
api free component param
constant param optionally define by api
param represent irreducible polybnomial _ bit represent term polynomial
api free param structure component
api be use generate actual key specify algorithm
api call api
api add first private key find param
param object param be result verification certificate present by peer
des library contain api prompt password
function implement cryptographically secure constant number generator
api decode encode dsa private key component
otherwise type param can be determine use api
api print ascii version param
follow be constant transformation
api be call by api
api connect bios param read write operation side param
normally , param be structure key field set
handshake be not immediately add cache
param be create
api generate prime generator use dsa store result param
function handle application specific datum dh structure
use function api provide param curve be construct
api convert string param contain hexadecimal number param store param
backward compatibility , constant be define
api allocate initialize param structure
api be use verify signature recover digest signature
api generate constant prime number bit length param
api only query internal session cache , not external one
api add certificate param extra chain certificate associate param
api add first private rsa key find param
only compute number length hexadecimal digit
size can be modify use api call
connection use protocol
api be similar api except api attempt parse datum bio param
several certificate can be add one after another
api verifie datum param against signature param length param
be not necessarely dependent des , have become part ui compatibility library
openssl automatically query
api allocate initialize param structure
be not limited ca certificate
api add first private rsa key find param
api add first private key find param
api add param modulo param place constant result param
object utility function as api be use instead
be default
function api , set get nid curve respectively
function api set retrieve opaque pointer
likewise , cache null response future query not repeat iteration unless state table change
server session be add session cache
api set rsa key be use be param
be equivalent call api
constant mod constant ax mod
api set verification purpose param
unlike mechanism set cipher list , be no api available restrict list compression api per connection basis
api function allocate public key algorithm context use algorithm specify by param engine param
datum write memory bio can be recall by read memory bio
function simply wrap call api
body record be evaluate
almost application param can be set constant param constant
already create ssl object be not affect
api generate public private key supply param object
param be use store number
refer api description curve name
call api read data buffer request retry
as version constant implementation be group together algorithmic api param module
param contain number bit process by choose algorithm
api retrieve param correspond index param
param be length prime be generate
behaviour can be change
call api buffer bio clear buffer datum
public key be constant curve calculate by multiply generator curve by private key
api output param pem format
previous two bug be fix new api function
api attempt write param byte param bio param
no certificate be present by peer no connection be establish
server try reuse session
can take appropriate action base status certificate
add entry end param as single value relativedistinguishedname
no bio be connected ssl object
function api copy param key param key param
socket bio be create connection append chain
only datum read memory bio be delete bio
key be inherit by ssl object newly create param api
private key loaded file can be encrypt
decompression function receive improper input
server look correspond session internal session cache , external cache
be no need use constant openssl constant later , be however retain compatibility
api derive share secret use param
api support uni _ bidirectional shutdown by api constant step behaviour
api create param copy content param newly create param
api do not provide diagnostic information
function apply server only
application typically call api use certificate -PRON- would interest check validity use api
api perform montgomery reduction param constant
api be use store application datum param object
api write param byte buffer param specify param connection
function , param be previously allocate param use temporary variable
function can be call several time param include additional datum
api allocate buffer constant size
usage function be similar api describe api manual page
api hash param byte datum param signature context param
after call api algorithm specific control operation can be perform set appropriate param operation
api be synonym api
buffer library handle simple character arrays
typically server callback would set response datum by call api
be two encode flag currently define _ constant
api free param structure component
api be use close bio param
send constant clienthello
after call api algorithm specific control operation can be perform set appropriate param operation
public key be not encode along private key
failure constant could not be extract param
session object be keep setting correspond
see constant detail
typically server callback would obtain ocsp response be send back
server either agree reuse session start full handshake
maximum size output buffer be write param
eg special api use be keep next handshake
explicitly mean
functionality be disabled ticket not be use by client server
buffer be use various purpose library , notably memory bio
similarly , api be use retrieve psk identity use
share secret be write param amount datum write param
simply copy datum
random block have better constant chance correct format problem input datum earlier not produce final decrypt error
be wrapper round platform socket api
ssl client object use client api next handshake ssl server object use server api , _ api be choose startup
constant xy constant ax constant
api be use retrieve psk identity hint use
api be identical api
be application responsibility set inner content type outer param
api set retrieve current bind mode
socket can bind port
number bit process can be different secret bit
function api get set value encode flag param
api retrieve fp file bio , api be macro
predecessor constant , sha , be implement , but
after call api algorithm specific control operation can be perform set appropriate param operation
api initialize param structure
param have meaning as api , param be macro
blowfish be block cipher operate constant bit block datum
application param api be set null use default digest implementation
datum write read dig bio use api be digest
session datum be negotiate use rsa key rsa key supply certify by certificate chain be only use signing
public param curve be not encode along private key
different library may use value signal different function reason
reason have separate file descriptor socket bios be platform socket be not file descriptor use distinct api , windows be one platform
mean call api can be call later digest verify additional datum
param object receive send message
object not nee be internal table be process , function api can process numerical form oid
implie , correspond session external session cache be remove as well
constant compatible daemon prngd be available http
mean call api can be call later digest sign additional datum
api allocate initialize param structure param be use rsa operation
datum be constante before free case buffer contain sensitive datum
old documentation indicate difference constant be retryable
after one structure be encode decode another process after
pkc constant pad constant modification denote server be capable
send close notify shutdown alert reception peer close notify shutdown alert
internal session cache collect session establish specify maximum number
typically callback would obtain param datum via call api function
pass public key api only print public component
parser assume param be always encode not handle case param be binary format use quote printable format
egd entropy gathering daemon provide socket api which entropy can be gather chunk constant byte
instead call api function directly
api be as , except output go param
param structure be define as follow
as result statically link executable can be quite large
api join two bio chain whereas api delete single bio chain , delete bio do not need be end chain
prompt be divide two , one part descriptive text one describe possible answer
accord tls standard , be acceptable application only send shutdown alert close underlie connection without wait peer response
actual nid value be internal value which may not have correspond object identifier
param be pad mode be use encrypt datum
be wrapper round platform socket accept api
free half pair automatically destroy association
check error stack find reason
actual load be average number item per bucket , but only bucket which contain entry
api add prompt ui suppose be answer boolean way , single character yes different character no
error code can be obtain by api
case error , error code be set , which can be obtain by api
memory bio be bio which use memory
alternatively -PRON- can reconfigure toolkit constant option recompile
often mean be no need locate require bio particular operation , can be call chain be automatically pass relevant bio
be assume session be identical
point be construct by call function api provide param object point relate
datum write memory bio be store param which be extend as appropriate accommodate store datum
application can decide process param base value
normally application only call api application tidy configuration perform
default be normal shutdown behaviour as describe by tls standard
be mostly legacy eric young writing library reason implement look like nice algorithm rather particular software product
function api store multiple generator fast point multiplication , whilst api test whether precomputation have already be do
perform ssl bio communicate use ssl protocol ssls read write bio
engine have constant property expose can affect behave
api can be use find whether be buffer byte available immediate retrieval
param structure consist several bignum component
api bio write be use signal no data be be encode
encode decode api encode parse param structure , which represent certificate
callback function never see message be consider large be process
whilst command be automatically process by openssl framework code , use various property expose by engine process query
meaning param pass callback depend algorithm specifiic implementation algorithm
client send client hello message indicate client only understand
be examine whether session session -PRON- would already exist
api be function whereas api be macro
peer may send certificate chain
mechanism be ideal
api be as api use output feed back mode
mechanism be entirely base use constant pair assume ascii input
function api calculate discriminant curve verifie be valid
api can be use print error code currently queue
decryption use function call as encryption
advanced callback may examine handshake param set whatever chain be appropriate
latter case , openssl behave way use before engine api exist
be wrapper round platform file descriptor api as api
be mechanism support by engine framework allow engine implementation define arbitrary set configuration command expose openssl application base openssl
identity compression api tls protocol have be standardize , compression api likely be change
behaviour api depend behavior platform api call descriptor
several call function do not add datum , several call function replace previous blob one give as param
flag be constant
fact engine be make visible openssl do not mean be register call use by openssl automatically _ behaviour be something application control
api do not check whether param point bio , value be overwritten , api be not call
api be , except output go param
be filter bio which be wrapper round openssl ssl api add bio flavour ssl
flag be constant
however , application may not need concern discover support control command simply prefer pass setting engine exactly as be provide by user
content be output ber format use indefinite length construct encode except case sign datum detach content content be absent der format be use
main purpose function api be handle public key certificate param be sometimes omit public key
context nee not be set context can be set null which case only syntax checking command be perform , possible
function api can be call context
api load encode certificate memory location param , api load encode certificate param
many browser implement sign encrypt option which be simply envelopeddata contain sign message
can be readily produce by store sign message memory bio pass api
api write string specify by param standard output turn echo read input string terminal
use flag can save around 34k per idle ssl connection
value param may be null which case result be param
other may prefer load support have openssl automatically use constant engine able successfully initialise _ ie assume correspond acceleration hardware attach machine thing
api print statistic size hash table , many entry be hash table , number result call api library
param be use rare case encrypt content be detach
curve define fp discriminant be give by formula 4a constant 27b constant whilst curve discriminant be simply
pass call next bio chain
old version documentation wrongly state call api could not be make after call api
prepende api buffer bio prevent
be probably numerous way which application may prefer handle thing , simply illustrate consequence as apply couple simple case leave developer consider source code openssl builtin utility as guide
openssl constant later ssl flag constant can be set disable behaviour
release memory be either append list unused ram chunk constant , simply free
mean reason code action should be take depend type bio result condition
application provide procedure have access verify depth information api function , but way information be use may be different
can be use set either default value which can not be override
api remove ui memory , along piece memory connect , like duplicated input string , result other
param structure be define as follow
api add param user define stack api
process call api bio may have additional consequence effect be note description individual bios
default depth limit be constant , allow peer certificate additional constant ca certificate
api add signer certificate param private key param use message digest param sign datum structure param
every constant byte binary datum provide constant byte base constant encode datum be produce plus occasional newline
handle engine be release during change
case , session datum be negotiate use dh key key supply certify by certificate chain be only use signing
api set maximum param certificate chain verification shall be allow param
object which be not table have nid value api
previous export restriction , cipher rsa key short usual key length constant bit be create
perform certain sanity check key confirm be valid
send by server indicate server do not recognize psk identity srp identity
constant point be encode as octet signify hybrid form have be use which two possible solution have be use , follow by octet , follow by octet
shutdown alert be receive form peer , either normal close notify fatal error
no constant byte padding
api set verification callback but api be implement as macro
datum read buffer bio come internal buffer which be fill next bio chain
be filter bio digest datum pass , be bio wrapper digest api
be several reason call openssl configuration api be advisable
as example , hash table may be maintain by code , reason encapsulation , have only const access datum index hash table _ lhash prototype be appropriate constant
api convert nid param , nid param long name nid param short name respectively , null
openssl constant control function can be support by engine , can be use load dynamic engine share library
follow code illustrate approach
error message produce be incomplete certificate chain not constant as may be expect
however application currently support control api can load use dynamic engine
base constant encode convert binary datum printable form use character constant , represent datum
case psk identity hint be null , server do not send serverkeyexchange message client
param indicate whether callback be use
error relate private key not be indicate until after potentially large amount datum have be pass api
only happen as result memory allocation failure be not much problem practice
override dh default set use dh api
mapping exist jacobian projective constant affine constant
constant value curve be use determine whether be specific oid describe curve not
jacobian projective constant be express as three value
conversion jacobian projective affine constant be simple
api function perform key generation operation , generate key be write param
normally client server , possible , transparently make use ticket stateless session resumption
jacobian projective constant , , z. can be write as affine constant as . , constant
indicate no description be available alert type
as name imply bio be source sink datum , example include socket bio file bio
api add symmetric key param length param use wrap algorithm param , identifier param length param optional value param constantontentinfo envelop datum structure param as kekrecipientinfo structure
api describe generate signature key
context contain information need prompt correctly as well as reference constant , which be order vector function carry actual prompting
ssl object create param inherit param valid time api be call
client send client hello message indicate client only understand
othewise behave similar way api describe api manual page
param specifie function openssl use constant operation
invocation pointer param be provide
openssl version before constant api call be handle incorrectly , bio reference count be incorrectly incremente dissociate ssl bio
api be call underlying file descriptor
by modify api , alternative implementation as hardware accelerator may be use
mean call api can be call later digest sign additional datum
command value low symbol be consider generic command be handle directly by openssl core api
ca certificate be make available via lookup api , handle inside constant
result early version tls dtls may not be useful
be possible discover constant name , constant , description input param control command support by engine use structural reference
case error may simply print warning message application continue
constant use be create
function be similar function describe api , note example be available
application can use api directly have full control session
api can use param check , whether item shall be encrypt
api be similar , except constant string param be first convert internal representation
function api perform number check curve verify be valid
sometimes however be useful obtain datum originally sign use signing operation
function be as follow
api initialize param structure use hash function param key param which be param byte long
api encode structure point by param der format
api initialize verification context param use default implementation digest param
protocol message be pass callback function after decryption fragment collection applicable
function api can be use check application configuration ensure necessary subordinate ca be send correct order
whether session be reuse can be query api call
check perform include verify discriminant be non constant , generator have be define generator be curve have correct order
control command be define by openssl intercept handle control command behalf engine , ie engine api handler be not use control command
specifically , one case happen be step occur
function allow param structure be manipulate
api generate constant param can be share among group user , store provide param structure
api function allocate empty param structure which be use by openssl store private key
api free exist param point by param
error code can be obtain by api
slate possible release constant be support transparent loading dynamic engine
api perform various sanity check param confirm param be valid
error code can be obtain by api
have several potential use , can be use cache datum associate structure additional datum
be write der encode data buffer param increment point after datum write
version openssl part reuse structure may persist
encode tbscertificate portion certificate be cache param structure internally improve encode performance ensure certificate signature be verify correctly certificate broken encoding
api be mac , ie key hash function use message authentication , which be base hash function
ui can contain one prompt , which be perform give sequence
api compare param determine whether represent curve not
api write number random byte file param which can be use initialize prng by call api later session
check error stack find reason failure
tlsciphertext record be receive which have length constant byte , record decrypt tlscompresse record constant byte
datum be receive block peer
call api be efficient automatic chain building as be only perform
api set file bio param use file param reading , writing , append read write respectively
api be similar except api set support curve ssl structure param
param be macro be unsigned integral type optimie efficient implementation local platform
param be use rare case compress content be detach
support abstraction , engine code maintain internal table state control which implementation be available give abstraction which should be use by default
case abstraction like rsa , dsa , etc , be only one algorithm implementation implicitly register use nid index
api check key pass be odd parity be not weak constant key
api use param object instead param
api allocate initialize dsa structure param be use dsa operation
number builtin curve within library provide seed value can be obtain
currently no detailed documentation use param be available
param contain stre encode param contain optional configuration information additional string be read
symmetric encryption be use bulk encryption small random symmetric key use be transfer use public key encryption
various lhash macro callback type exist make possible write constant code without resort constant cast _ evil make application code much hard open window opportunity stack corruption constant bug
param typically come config file wherease param be obtain param structure which typically be use by certificate extension function
api test whether supply point be curve not
api behave way as api except pass context param do not have be initialize , always use default digest implementation
provide advantage param obtain way be highly unlikely be susceptible special purpose attack , have trapdoor
as mention , functional reference exist
bio be abstraction , bio hide many underlying detail application
flag set affect subsequent call api behave
one way be set prefix appropriate value use api , pass current param follow param
param be generate verifiable fashion use seed
assume want load register engine implementation bundle openssl
unlike api , which evaluate error queue , result be obtain by examine internal state flag only
start one consider secure
eg api be override api set via api family function
additionally old style callback be use instead newer constant base approach
api describe obtain random datum prng
dig algorithm be still common use
would allow engine implementation be provide independently openssl library constant application , would remove requirement application explicitly use dynamic engine bind constant implementation
constant control by api be use
be either assign dedicated client api , dedicated server api , generic api , can be use client server connection
default engine dsa operation be use
api negotiate session ,  explicitly perform by api
api add field whose name be define by string param , object param nid param respectively
client send client hello message indicate client only understand sslv constant
additional bio be place socket accept bio , chain be accept _ otherbios _ socket
api pop top error stack until mark be find
read write operation accept bio perform underlie connection
function usage be identical api as describe api
be possible encode large structure
certificate matching function be use check whether certificate match give host name , email address , ip address
thread -PRON- would object newly allocate param structure be initialise thread -PRON- would which api be call
api be legacy function which have various limitation which make api minimal use practice
dh key may use constant param implementation , either directly by use param module
rest certificate need form complete certificate chain can be specify use api function
essentially structural reference be sufficient
whole stack be remove
api ensure param have enough space param bit number
tls rfc do however not specify compression api correspond identifier , be currently no compatible way integrate compression unknown peer
api create param object as framework establish enable connection
api ensure param have enough space param word number
param byte be write text write param be null terminate
dsa key may use constant param implementation , either directly by use param module
output datum be store param length datum write be store param
usually hash table entry consist key value field
param _ ,  , constant pass back constant message be different one decide upon
api describe perform key agreement
macro call api , which allocate param array copy datum
ecprivatekey encode decode api encode parse param structure binary format back
api operate way as api except generate two key by use api function
api have exactly property as api , as document api manual page
retrieve pointer api function can be use correct index
api encode structure point by param der format
because different protocol , , server send list preference client client choose
whilst library can be use create curve use function describe , be number predefine curve be available
api convert string param utf8 format , converted datum be allocate buffer param
api be seldom use practice be typically use create add entry single operation
purpose be perform operation necessary param set appropriate field
disable support by default but user can override
can obtain master secret ticket use key decrypt traffic use session
api normally write internally buffer datum , case api be use signal eof no datum be write
set stay valid until value be set
api write hexadecimal encode param , lead _ negative number , param
be do depend underlie structure
additionally option support by api can be use control field value be display
api set maximum size allow peer certificate chain param be size byte
constant offer implementation optimise use nist recommend curve
be filter bio encode datum write decode datum read
mean api can be call later digest verify additional datum
param be write param
main purpose function be provide finer control cms envelop datum structure simple api function default be not appropriate
pointer ssl object be store param identify connection affect
write der encode data buffer param increment der encode datum point after datum write
api increment reference count , session not be implicitly remove by operation but stay memory
be not default avoid misconception constant api behave like constant api
decryption operation always succeed
function implement rsa public key encryption signature as define pkc constant _ lsb _ rfc constant _ rsb
session be remove session cache as require by rfc constant
cipher digest lookup function be use many part library
api be as api except constant be use
bio be automatically use as ssl bios read write bio
mode be bitfield describe should be do lock
not handle multi character field have various quirk inconsistency
be currently use support key , which use identical encode ecdsa
normally session be add internal cache as well as external session cache configure constant
code be incomplete code have only be test certain common cipher cbc mode
assume user be only supply command specific give engine set constant
param be maximum number untruste ca certificate can appear chain
as session may be reuse , several ssl object may be use one param time
api be similar api except destination param do not have be initialize
api add recipient param constantontentinfo envelop data structure param as keytransrecipientinfo structure
parser assume structure be always encode not handle case structure be binary format use quote printable format
api sign datum param place signature param
rsa key may use constant param implementation , either directly by use param module
api check if certificate match specify address
case file bio datum may be available file structure internal buffer but be not possible determine portably way
client send client hello message indicate client only understand tlsv constant
api set callback function which be call
may occur user click cancel button
api negotiate session ,  explicitly perform by api
api allocate initialize dh structure param be use dh operation
compute param use param _ param , which be set as describe
error code can be obtain api
param specifie time which should be use expiration test , case actual time give by api be use
param be estimate much randomness be contain param , measured byte
constant alert message be send connection setup fail
api add string be show time as prompt extra information show error string
be two place param object be store
ip address store dns name common name be ignore
as shutdown be not specially handle protocol , api succeed first call
api compute message authentication code param byte param use hash function param key param which be param byte long
function api test whether supply point be infinity not
detail source randomness estimate entropy can be find literature , eg rfc constant
api compare two supply point test whether not be equal
server external caching be configure , successful session lookup external cache would normally be copy local cache before processing continue _ flag prevent addition internal cache as well
api be equivalent api except param represent certificate request structure param
flag guarantee lookup be direct external cache
function be only define
param be use as follow
default engine dh operation be use
callback approach have advantage , callback may generate key only case be actually need
currently function use bios file pointer , be no function which work directly memory
pem read api version openssl not correctly reuse exist structure
as api name imply api be wrapper round stdio file structure api be bio
api may be use precompute part signing operation signature case signature generation be constant
api be similar except apply ssl structure param
function can be use determine much memory must be allocate rsa encrypt value
api be basically as api counterpart , except make copy string
as generation rsa key be however costly , lead significant delay handshake procedure
old session be remove next time session shall be add
way password can be supply may depend application
api have exactly property as api , as document api manual page
by set flag , constant operation server not automatically look session internal cache
information callback function be call
library implement blowfish cipher , which be invent describe by counterpane
another advantage callback function be can supply key different size
one be constant static array represent standard api different algorithm , one be stack constant api , which can be manipulate by use api
output be pad constant bit ensure output be always constant byte every constant input byte
version constant have interim interpretation like current one , except patch level get high bit set , keep continuity
client , be ask send certificate , do not send certificate
by prepende buffer bio chain be possible provide api functionality
create accept bio port param
but function may be useful several operation be be perform use modulus
call api accept bio close active connection reset bio state await another incoming connection
follow test be perform until one show param be composite
close notify alert be send peer close notify alert be receive
be possible have dh key only work certain constant implementation , attempt change constant key can have unexpected result
good fix probably be introduce api handler constant function table alternative implementation can provide alternative implementation verifier
point hexadecimal format be store null terminate character string character be one printable value constant
digest be place static array
as servername callback may update constant , subsequently , alpn callback
typically trust certificate store be handle indirectly via use api
refer module be available as openssl
downside be create rsa key be computationally expensive
value depend index value define param before ssl index be create
api change default ui api one give
block constant socket , detail state information can be use within constant function set api call
datum be not retrieve last call api can still be buffer inside ssl layer be retrieve next call api
evp dig api be high level api message digest
constantpplink be constant api which provide glue openssl bio layer compiler constant environment
ecpkparameter encode decode api encode parse public param structure , which represent curve
param structure consist several bignum component
otherwise deadlock may occur as peer may be wait datum before able continue
use api function be possible manipulate param beyond api call
api be use verify whether signature be valid
function determine bio be not able read write datum
function can be use determine much memory must be allocate dsa signature
since openssl private key contain public key component function api can be use determine
lh _ type _ api delete entry param
api be api macro which retrieve internal bio cipher context
use ephemeral rsa key exchange yield forward secrecy , as connection can only be decrypt
similarly newline character be output
api do not follow convention openssl function buffer can be set null determine amount datum should be write
read only bio restore bio original state read only datum can be read
fatal alert always lead connection abort
finally , supertype constant , which can contain crl , certificate correspond private key
main purpose function be provide finer control pkc constant sign datum structure simple api function default be not appropriate
client mode , be not check whether constant flag be set , but whether constant be not set
allocation api , allocate free structure , which represent certificate
constant byte input block encode constant byte base constant datum be output plus additional newline character
othewise function behave similar way api describe api manual page
param be buffer should be populate list name param be size buffer
api be analogous use param structure
constant api , prompting can be do way imaginable , be plain text prompting , dialog box cell phone
private key can be use function which require use public key param
signer certificate have be set api can be use
openssl param contain private key contain public key component param
call api may have effect underlie structure
api create colon separate nul terminate list constant name be available client server
api be idential api except api read configuration information param
can be readily produce by store sign message memory bio pass api
similar condition file bio mean have reach eof
by generate temporary rsa key inside server application , become impossible attacker decrypt past session
api be convenience function print error string error openssl have record param , thus empty error queue
openssl private key be equivalent library call key pair
by combine retry condition several non block bios single api call be possible service several bios single thread , delay can occur
api add private key type rsa store memory location param
constant as define pkc constant , empty encoding param
case param structure be create destroy internally only way set custom verification callback be by inherit associate param
decryption failure constant mode leak information which can potentially be use mount bleichenbacher padding oracle attack
param actually determine index entry be insert
api send close notify shutdown alert peer
socket be shut closed bio be free
similarly function set private key replace private key have already be set
function set certificate replace exist certificate type have already be set
api set pointer param which be provide password callback invocation
api add private key type param store memory location param
flag be already set be leave set
api make explicit guarantee api never read past first param byte param
remove bio become single bio no association original chain , single bio no association original chain can thus be free attach different chain
thus permanently install certificate key ssl object
bundle engine be set as default rsa use
constant point be encode as octet signify uncompressed form have be use follow by octet , follow by octet
function api can be use make server always choose appropriate curve client
addition be flag constant which be specific ecdh be define ecdh
openssl constant , api do not check
client mode session set api successfully reuse be count as hit
api compute api message digest param byte param place param
check error stack find reason
server mode session successfully retrieve internal external cache be count as hit
function can be use determine much memory must be allocate share secret compute by api
constant curve control constant datum be encode as as define
openssl maintain internal link list visible engine which have operate
api place pointer digest bios digest api param , be api macro
but result dh param contain result dh param length
client send client hello message indicate client only understand sslv constant
api be macro
first consideration be whether available engine implementation should be make visible openssl _ be control by call various load function , eg
session resumption shortcut tls client certificate negiotation not occur
ie one which can decode cms structure fly
alternatively nid validity can be determine first by check api be not null
share keying material be establish two endpoint
library number function code describe error occur , reason code be information go wrong
param specifie function openssl use dsa operation
api be equivalent standard library function
similarly api double point param place result param
see note section important information dsa api function be affect by use param api call
make by store client certificate negotiate state information encrypt within ticket
as , internally represent api item const void pointer type
be filter bio encrypt datum write , decrypt datum read
change make context affect digest bio
which be identical almost case
however , as caller be provide pointer , can choose whether should be treat param as constant
process trust certificate but trust setting be discard
x. constant crl be tool help determine
api can be modify only set connection shutdown state but not actually send close notify alert message
handshake be successfully complete , connection have be establish
param structure be use by various openssl function which require general private key without reference particular algorithm
ssl object have be use conjunction callback function , certificate be set ssl object not be clear even
be callback as use by api declare prototype const , even param pass back table item datum pointer _ consistency , constant datum be const time as far as lhash code be concern
api perform param probe record number oscillator cycle every probe take
api retrieve datum have last be give ui api
x. constant certificate be structure group information individual , device , anything one can imagine
api indicate whether read ahead have be set not
plaintext buffer be actual digest value be encapsulate digestinfo structure accord pkc constant signing structure be expect verify
lh _ type _ api insert structure point by param
reference count param be not incremente , pointer can become invalid by operation
thus no syntax checking take place
param determine type be add
depend type param can be ignore key identifi datum retrieve use appropriate function
verification store be use verify certificate chain send by peer
api can be call null key decrypt envelop content
function api be similar except param be generate
can associated structure api call
item be not recognize , , be simply ignore
either be three five bit set dependant whether polynomial be trinomial pentanomial
api encryption bio write be use signal no data be be encrypt
api read file pem format certificate extract constant certificate find
otherwise check error stack find reason
lh _ type _ api look entry param
old version documentation wrongly state call api could not be make after call api
egd be check via api first time
give constant point curve be possible derive two possible value
state table have flag note whether have process constant query
pkc constant function encode decode private key pkc constant format use pkc constant pkc constant password base encryption algorithm
special case be size constant , which be use unlimited size
be chain be accept _ socket
use callback function be possible implement proper selection api allow user interaction choose certificate be send
indicate be not possible session ticket session continue by by negiotatione set cryptographic param use alternate resumption mechanism , session id
alternatively constant can be construct by call api supply nid associate curve
api be cryptographic hash function constant bit output
openssl client speak protocol allow compression unconditionally send list compression api enable api server
lh _ type _ api be macro
lh _ type _ api can be use determine
before , , after certificate text be allow which can be use eg description certificate
internal session cache size be constant , currently constant session can be hold
constant point be encode as octet signify compress form have be use which two possible solution have be use , follow by octet
api perform bios get operation place data param
be not strong test input datum key be correct
result number bit be shift leave later be store param
effectively mean attempt initial accept socket await incoming connection perform incoming connection
otherwise behave similar way api describe api manual page
api write private key as pkc constant encryptedprivatekeyinfo however use pkc constant pkc constant encryption algorithm instead
case abstraction like constant , implementation be index by nid , flag constant be distinct nid value
api store param set compute _ param shifting leave by api constant make integer
typically server callback would obtain server certificate send back client via call api
engine object only actually be clean deallocate
api check if certificate match specify email param
api indicate whether peer support secure renegotiation
api be api macro which can be call determine whether decryption operation be successful
usually operation attempt read line data bio maximum length param
api try send close notify shutdown alert peer
ssl object inherit set valid param time api be call
constant allocation api , allocate free param , which represent object identifier
export cipher like eg constant have only constant secret bit
final block be automatically decrypt check
flag define behaviour param be convert call api
be static constant structure which be share
api free internal table compression api be build internally , possibly augment by add api
algorithm do use full constant bit , which however 88bits be fix
be use core control command one can discover control command implement by give engine , specifically command
final block be check see
by generate temporary dh key inside server application , become impossible attacker decrypt past session
item pem formatting can be encrypt , be however not usual , as certificate information be consider public
be only single constant structure table object
socket close
active connection chain be shutdown
call api place datum buffer request retry
bio pair be pair bios datum write either half pair be buffer can be read half
api set maximum size allow peer certificate chain ssl object create param be size byte
be no inherent memory leak worry engine functionality
mechanism use internal callback registration table engine api functionality know require cleanup can register cleanup detail be call during api
second attempt be make use constant
attempt be first make use constant
api verifie signature param be valid ecdsa signature hash value param size param use public key param
total amount space require be return
whether operation succeed not , constant flag be set currently open session be consider closed good be keep session cache reuse
api work much way as api except no param be pass instead newly allocate param structure be return
amount space need param be return
param be not recognise application specific param can be check instead
do not provide feedback
be possible bio block indefinitely
key be erase before memory be return system
return value can be compare macro make sure correct version library have be load , especially use dll window system
value be erase before memory be return system
param be signer public key
be do use constant
try read random byte egd have collect
system provide , randomness device be use seed prng transparently
api additionally overwrite datum before memory be return system
api compute digital signature len byte message digest param use private key param return private key param newly allocate param structure
if constant flag be set , no attempt initialisation take place , instead only way state table return constant engine constant query be if one be expressly set table
approach allow api clean after engine functionality program use , yet do not automatically create link dependency possible engine functionality _ only cleanup callback require by functionality -PRON- use be require by linker
api collect entropy window event as mouse movement user interaction
api verifie signature param match give message digest param size len
before illustrate control command work , be worth mention be typically use
everything after first constant bit be ignore
after call api no additional call api can be make , but api can be call initialize digest operation
constant do not extend thing like multiple thread use ssl object time
have try use api individual number rsa key , dh key dsa key , find not always come number bit expect
api return number byte need store derive key
class command consist setting operation tweak certain behaviour cause certain operation take place , command may work either before after api , case
first be provide necessary detail implementation can be initialise use
increase count param slow algorithm which make hard attacker peform brute force attack use large number candidate password
place precompute value newly allocate param rp , after free old one
_ window beo use system default thread identify api , platform use address errno
shutdown be not clean
no attempt be make download crl crl distribution point extension
object be use represent algorithm which not have corresponding asn object identifi encoding
encode unknown field be print instead value
generate random private dh value , compute correspond public value constant which can be publish
function do not handle algorithmidentifi specify pkc constant
api initialize cipher context param encryption cipher param use random secret key iv
unlike rsa function , function do not work transparently underlie engine implementation
thus implementation api not need care handle case return output buffer size by
supply callback function be call instead
before callback function be start ctx hctx have be initialise api respectively
param indent indicate far printout should be indent
provide rich api which be document
be do
no encryption be use pkc constant privatekeyinfo structure be use instead
api generate default path random seed file
value constant can be negative set time before param
api have undocumented behaviour previous version openssl _ failure switch api program expect cause stop work
constant api set whether should read as many input byte as possible not
by use api appropriate flag , application can customise application configuration good suit need
signedcontentidentifier field be set constant byte pseudo random datum
constant retrieve signer certificate , do not check validity whether signature be valid
api return underlie bio could not satisfy need api continue operation
api do , but register libssl error string
param read function handle either form be no constant read function
api be wrapper function api kinv rp set null
constant use subject key identifi value instead
could include path driver config file need load , require network address , constant identifier , password initialise protect device , log information , etc etc class command typically need be pass engine before attempt initialise , ie before call api
ca list not become trusted
precompute value return kinv rp can be use later call api
constant function not check
signature be return newly allocate param structure
file param app directory current version openssl distribution contain skip dh param , which use safe prime be generate verifiably constant
api return underlie bio could not satisfy need api continue handshake
functionality need be make available via function macro
api return , underlie bio could not satisfy need api continue operation
command support be document openssl utility command line page option _ pkeyopt which be support by pkeyutl , genpkey req command
without callback random number be use , probability generating session -PRON- would be extremely small
api set notbefore notafter field param
api compute digital signature param byte hash value param use private ec key param optional constant value kinv rp
return param be not complete output content via function do not properly finalize param give unpredictable result
api only return handshake have be finish error occur
uniqueness could easily be achieve without randomness add
be call before certificate be use by client server
api be call param constant before advance next level
api verifie signature param size siglen be valid ecdsa signature hash value param size param use public key param
subapi question instrument reference purpose gather entropy random number generator
page document internal function use by openssl param implementation
result certificate verification process can be check after handshake use api function
api compute digital signature param byte hash value param use private key param optional constant value kinv rp
prime be generate random
be restore after callback have finish session -PRON- would be pad 0x constant
random seed be choose
api be call after generate constant potential prime number
error rate depend size prime go big prime
api be call after constant iteration
number iteration be use yield constant positive rate constant random input
shutdown can occur
api return underlie bio could not satisfy need api continue handshake
des key be type param
api do not require pad constant character group
after call connection contain bio recently establish connection accept be single bio which can be use await incoming connection
constant be call keylength need constant information
actual datum send param consist constant byte contain length follow encrypt datum
param specifie function openssl use random number generation
encrypt datum follow , pad random datum multiple constant byte
currently param can be constant use first valid certificate constant set next valid certificate after current certificate
api do not modify ivec
function can lead either constant
macro , as well as use doall callback , be define as
certificate matching be do base subject name , key identifi , serial number as take certificate be verify
api never return amount large return by api
way param be incremente after operation can trap unwary
api add extra control application author
api be intend be use generate value should remain private
lh _ type _ doall , every entry hash table , call function datum item as param
constant do not necessarily indicate underlie transport have be close
follow code illustrate can work
api stand constant , ensure fresh encoding be generate case object have be modify after creation
be no fix upper limit number iteration may be necessary until progress become visible application protocol level
standard macro be describe , macro specific particular type bio be describe specific bios manual page as well as special feature standard call
could cause entry be skip during iteration
can be use determine much datum should be write bio next read succeed
return value client callback be interpret as follow
return value server callback be interpret as follow
application guarantee strong prime be use
give -PRON- revise elliptic curve equation as follow
be , do however not indicate success
param be define as follow
api allow modify constant use different set algorithm default
api set expect ip address param
fp curve low common denominator implementation be constant implementation
function be typically call after api have indicate error verification callback determine nature error
quirk stdio behaviour be mirror by correspond bio
constant build constant but add use montgomery multiplication
sender decide not proceed negotiation
valid certificate be receive , but
api compare constant param time constant
api generate miss public key automatically
behaviour api depend underlie bio
api release resource allocate by create object
set constant flag call api stream
error string be place static buffer
api set default password callback call
api reset file related bio file position pointer param byte start file
constant obtain constant param
param be allocate
alpn callback be not invoke
ssl object may be use param
api output param ber format
previous param associate param be clear
api may make difference , however
normally session cache be check expire session every constant connection use api function
condense : : notation be support address
api set maximum verification depth param
behaviour api depend underlie bio
subsequent call api be send param
openssl error queue contain information error
param be previously allocate param use temporary variable
api retrieve signature associate param pointer param
builtin api , no technical difference
removal be not synchronize expiration session
param array be binary format , network byte order
be perform transparently during api operation
api test if be odd
api can be use perform efficient api operation
api be call
eg param be completely free as reference count incorrectly become , but param be still reference internal session cache cache list be process during api operation
api can be use assign library number user library runtime
send alert
psk identity be not find
param may be param as param
index value access pointer
only explicitly mark address certificate be consider
function api clear param context param
option already set before be not clear
maximum size output buffer be write param
version before constant have identifier 0x constant
several option can be ore together
api file bio call api function wrap stream
api allocate initialize param
api select param perform operation use key param
after call api algorithm specific control operation can be perform set appropriate param operation
specific information be keep
otherwise type param can be determine use api
param be bio read message
api set accept socket non blocking mode
right api simply use rsa structure element directly , bypass constant table altogether
api set accept socket block mode
api select param as current end entity certificate , but only
api register available cipher digest
net format function be present provide compatibility certain old software
behaviour api depend underlie bio
recognise option intend use client server
normally current time be use
can be readily work around by convert buffer memory bio
api parse message format
param be call as show
every constant input byte exactly constant output byte be produce
api set verification time param
function implement montgomery multiplication
api print param indent line by param character
function be effectively version api support stream
password may be supply protect private key
api be call param
api remove session param context param
api be call automatically
buffer bios implement api by use api operation next bio chain
api change size already exist buffer param
ca name extracted param list ca send client
function initialise param structure subsequent use by api
function load serverinfo tls serverhello extension constant
check error queue find reason
function be use automatically
api add
function be use by kerbero constant
be constant dtls api
datum already buffer be preserve
high preference curve be automatically use ecdh temporary key use during key exchange
api empty current thread error queue
api obtain previously set curve param
api work base record
datum be receive record
currently support protocol have default timeout value constant second
no certificate be present by peer no connection be establish certificate chain be no longer available
param be free
constant message digest param byte be place static array
api produce constant byte checksum base input stream
api find param object param
alpn callback be execute after servername callback
api be similar api except api attempt parse datum file pointer param
default value session timeout be decide per protocol basis
api add engine configuration module
no session cache client server take place
api load one serverinfo extension byte array param
api set param work server mode
api be implement use api underlie stream
api compute mont
api attempt change file pointer start file use lseek
call api read write memory bio clear datum
encode be automatically renew
api be use store application datum param object
api call apie procedure indirectly affect item
addition number option can be set commonly use format
api load first certificate store param
api be as api , but reference count param be incremente by one
similar way , function automatically release structural reference pass
api library provide constant encryption function
api load certificate param
api free param
constant api retrieve intenal pointer verification param associate param
param be array error string datum
api call api
but certificate comply et al use gmt anyway
api register error string library number param
null sink bio behave similar manner unix device
api function add sign receipt request param signerinfo structure param
datum may be leave unmodified translate
file can contain several ca certificate identify by
otherwise , encode tbscertificate portion param can be manually renew by call api
param can be api etc
encode binary datum be perform block constant input byte
api clear flag param
be constant
curve can be construct by call api , use implementation provide by param
final block output constant byte every constant byte input
elliptic curve library provide number different implementation single common api
no certificate be send
hardcode default timeout protocol be use
point file ca certificate pem format
refer api information constant
due protocol definition , server always send certificate
application datum be not include
be often undesirable however
constant byte be not include length
full constant byte be still output final constant byte input
by generate temporary rsa key inside server application lose , become impossible attacker decrypt past session
bio type may place additional information error queue
evp library provide constant api cryptographic function
api set constant underlying param
evp cipher api be high level api certain symmetric cipher
creation param fail
format external representation public key write by api be describe by constant
api session cache by set operational mode param mode
internal error unrelated peer correctness protocol make impossible continue
api print time param bio param human readable format
connection use protocol
callback have be call indicate state change inside loop
length vector be not vector , but separate variable
api set error code param
extra chain certificate be send order follow end entity certificate
complete description process be contain api manual page
be possible perform use accept bio
may be use verification callback set error base additional check
connection use protocol
api operation be consider complete
can be useful debugging
client violate rule by adapt server answer
be inherent weakness pkc constant padding design
evp envelope api be high level api envelope decryption
datum be treat as black box by ec library
api create pkc constant structure
param use param as connection api
server look session cache
api free context param
api be usually use perform different job , as generate key , sign verifying , encrypt decrypt , etc
api be algorithm choice use
client can propose reuse session
override temporary ecdh param set by server
openssl library have api compression api available
api add object internal table
lack single pass processing mean
state can be save seed file avoid have go seeding process
padding be always add
api return pointer respective constant
param be incremente byte follow parse datum
api return pointer param structure
api return name protocol use connection param
api transform external representation session , store as binary datum location param length param
api return signer
api return string indicate type alert specify by param
api return verification mode currently set param
api return constant string
api return option set param
api divide two word number by param return result
api return internal pointer param add
api be similar api except api return constant mutable reference associate date field certificate
otherwise api return pointer newly allocate structure
api return previously set timeout value
api return size representation byte
api return size write buffer
api return library name , function name reason string respectively
api return allocate param structure
api do not return value
constant , which make api print openssl error stack as part processing ui , constant , which return flag saying
unknown param text not available be return
api return no value
function return no value
response return by server can be obtain via call api
api return digest bio api
api return number
api return no value
api return current file position file relate bio
initially , default constant be openssl internal implementation , as return by api
otherwise api return pointer newly allocate structure
value param be update point ocsp response datum return value be length datum
api return currently set maximum size param
api return pointer internal table do not allocate memory
api return string indicate current read state ssl object param
api return value as underlie api function
api return pointer respective param
api return number session propose by client be not find internal session cache server mode
api return nid
api return number start renegotiation client mode
api return next bio chain
api do not return value
api return quiet shutdown setting param
number byte pende be return
api return currently set timeout value param
api return accept bio api
api return value constant trinomial pentanomial respectively
alert be return
structure return by api be empty
api return no value
error be only reflect return value api
match be find be return param
api return content type param as constant pointer
compute param place result param return high word
api return index newly create lock
function api return param associate cms envelopeddata structure
return value constant indicate operation be not support by public key algorithm
api return one letter string indicate type alert specify by param
api return two letter string as short form describe reason alert specify by param
api return no value
api return certificate param
api return pointer hash value
api return no value
api return pointer api certificate form certificate chain peer
api return number byte successfully encode negative value
if return value be constant operation be not implement specific bio type
api do not return value
api return ssl bio api
api return time which session param be establish
api return pointer param null
api return library number
api return pointer result buffer associate information index by param
api return file descriptor bio api
api return no value
return value constant indicate signature do not verify successfully , while value indicate serious error
application may call api
api return currently valid value
api return maximum length datum can be currently write bio
write large value return value api less amount request
api return nid corresponding text string
api return value param constant
server name port can be set use api bio return by api without have locate connect bio first
api return total number support curve
api not return value
api return current bitmask
api return verification mode currently set param
api not return diagnostic output
api return set support curve send by client support curve extension
api not return diagnostic information
api not return diagnostic output
api return constant
if param be set , user be ask password twice unless two copy match , error be return
api return pointer currently set callback function
api return pointer current default constant
api determine precise reason special condition , api return bio cause condition  contain reason code
api return type param
api return param
api return currently set param flag
api return pointer constant string describe version openssl library give information library build
api return file bio api
function api return param associate generation operation
api return mode bitmask after add param
api return flag associate param as integer
non negative value return value param
api return type key correspond value param
api return socket bio use param
api do not provide return value
if param be constant total number param available be return
api return message digest bio api
api return bios close flag
api return no value
vector be extend ebx value return by cpuid eax constant ecx constant as input
api return correspond nid object param long name ln short name sn respectively api if error occur
by check return code api be possible query  , be useful be api value be mixed additional application specific operation
api return copy structure param
api return late error code thread error queue without modify
api return numeric value usable as constant key
api return flag param
api return total number entry param
api return pointer param , which param be create api
api return function pointer verification callback currently set param
api return certificate include param
api return ui api associate give ui
api return currently valid size
api return pointer current default ui api
api return currently set maximum size param
be different normal crypt third param be buffer return value be write
api return no value
api return value position pointer
api return size signature
api have no return value
api return previously valid size
initially , default constant be openssl internal implementation , as return by api
api return no value
api return current bitmask
api return size recover message digest
api return type bio param
api return number byte successfully encode negative value
api do not return value
api return timeout value set session param second
api return internal pointer param add , can be use set additional attribute before be finalize
api return pointer param contain description actually use cipher connection establish param object
if param be equal value constant param collide error condition return by api which use as error value
api be typically use by engine return hsm key as part api load private key
api return no value
api return memory bio api function
api return key length
api create return param object , associate give param
api return number significant bit param follow principle as api
api return current number session internal session cache
openssl constant later context be always return bio be state be set initialize
api return function pointer verification callback currently set param
api place socket param return socket
api return function pointer api set param
api return current verification depth
otherwise api return pointer newly allocate structure
initially , default constant be openssl internal implementation , as return by api
except constant return string length command name description , populate supply character buffer copy command name description
api return pointer lhash database contain internal session cache param
api return pointer param structure
return code reflect return value fail module
api return number byte which be available inside param immediate read
return type may be replace param declaration future release
openssl client check session -PRON- would context return by server reuse session
api return pointer param structure
api call be shortcut possible state return by api
key schedule be not generate
function api return param associate cms signeddata structure
api return number byte read
api return current setting
api return pointer old constant implementation be replace
api return value current encode flag constant
api allocate , initialize return digest context
api return number pende character bio read write buffer
api return digest bios context param
api not return value
api return param be function , api be macro which call api
return value be similar api
api return number start handshake client mode
return pointer memory block contain seed be use
complex pkc constant file multiple private key only return first match
api set behaviour memory bio param be empty
api return size message digest pass param structure , ie size hash
require param be miss error be indicate
if param be constant empty memory bio return eof
only single private key corresponding certificate be return by function
api return length content param
api return current file position
api set param pointer start memory bios datum return total amount datum available
api not return diagnostic information
api not return value
api return string describe reason alert specify by param
error occur can be report back user
if param be non constant api return param be empty api set read retry flag be constant
api go information give far , do print prompting return
constant function have no return value
could use chain first set which return suitable flag
api return internal pointer param add , can be use set additional attribute before be finalize
if return value be positive be use skip number param as have be process by api
get function , function pointer be return by param
return value provide number octet store
api return no value
api not return value
call function null buffer not perform conversion but still return require buffer length
api return total number entry
api return pointer hash value
api have no return value
api return nid shared curve param api
api return different string depend param
chain return by function behave like standard filter bio
api return stream filter bio chain base param
api not return value
length output string write be return exclude terminate null
constant api return order , cofactor , curve name , flag , constant degree specify curve respectively
return value api function depend command supply via param
api have no return value
always check error return value api not take randomness grant
api return end chain , param
return value point allocate ssl structure
api return option bitmask after add param
api retrieve text first entry param which match param
api return bitmap flag indicate validity chain
api return param
api return entry delete
none function return value
api return pointer param pointer contain embed content
api return number command param process
function api return key param generation callback
return value be total number curve available
api return no value
error code return by api consist library number , function code reason code
if successful pointer param structure be return
api have no return value
api return reference key param null
api return constant error depth
if param be less total number curve available , first param curve be return
api return option set param
api return pointer respective param
only length be calculate return
api return constant
api return current file position by call lseek
api be macro obtain number bit use api return protocol name
param be allocate return
numerical value unknown code be return static buffer
api return number builtin curve be available
length result representation be return
api return currently set cache mode
api return number session be remove
return value point certificate present by peer
api return copy param
api return dns hostname subject commonname peer certificate match one reference identifier
api return string indicate current state ssl object param
api return currently set timeout value
api return socket bio api
return string be allocate by library be no longer valid associated param be free
be number lock as return api
api return hardcode value , which be constant second currently support protocol
api return number successfully retrieve session external session cache server mode
api return number start handshake server mode
current standard openssl public key algorithm api be return
api return number line currently buffer
pointer return correspond internal signature value
api return currently use cache mode
api do not return diagnostic information
compute param _ param place result param return carry
pointer param be return
api return bio file api
api return shutdown mode param
api return amount pende datum
api return pointer hash value
api return file descriptor read write channel , which can be different
otherwise api return pointer newly allocate structure
api return file descriptor which be link param
api return nid cipher object identifi api
api function append bio param api return param
api return file descriptor read channel
function return rsa modulus size byte
api return state information ssl object param
api function return bio use api param
api return pointer certificate peer present
api return number successfully establish session server mode
api return verification depth limit currently set param
case failure constant be return error message can be retrieve error stack
api return number start renegotiation server mode
api return pointer newly allocate param
api return crl param
lead whitespace be trim as trail whitespace , newline , carriage return eof character
otherwise api return pointer newly allocate structure
api return number byte currently store
api return integer identifie type field param support
serverinfo extension be return response empty clienthello extension
compute param place result param return high word
last case , password could be store param storage api only return password already store
return value point certificate chain present by peer
api return pointer param initialise value constant
api return pointer current certificate verification storage
content record be return
last constant byte checksum be return complete constant byte be place param
otherwise number record value be return
api return pointer thread -PRON- would object within param object
no constant base constant character be expect
api return previously set cache mode
api return number byte successfully encode negative value
api return block size message digest pass param structure
otherwise api return pointer newly allocate structure
only record have be receive process completely , api return report success
api return nid correspond object identifi api
api return param structure pass digest name , digest nid param respectively
if param be high number byte buffer , api return byte buffer
call api single bio have effect as call api discard return value
api return mode set param
write operation be successful , return value be number byte actually write connection
param command be miss
api return pointer name constant list param
api return number successfully establish session client mode
api return pointer find param object return null if not find
string return by api case success consist cleartext information separate by one blank follow sequence
function add engine openssl internal list be api _
api can not return complete certificate chain , can only return one client certificate
function return size asn encode dsa signature byte
as datum be buffer , api may return constant condition , but be still datum write buffer
api return pointer param object return null error
certificate be return do not indicate information verification state , use api check verification state
function which encode structure as api may return stale encoding  have be modify after deserialization previous serialization
api have no return value
api return earliest error code thread error queue without modify
function reverse return value convention
api not return value
api return size param byte
function return available share ciphersuite whether not be enable
api return psk identity
function describe return const pointer param structure can be pass api
api return currently set value
api return human readable error string verification error param
api return length seed have be set
api return constant
api not return value
api return buffer bio api
api return signature param
if supply buffer be not large enough contain complete list name truncate list name be return
api do not return value
if time structure have invalid format , api print bad time value return error
api can be use reset value return by api constant
return value constant means param be not recognise
cause be connection close
constant api return pointer embed content type
precise error condition depend bio type cause return code bio operation
api return current setting
api remove bio param chain return next bio chain , null
api free single bio , api free single bio but api do not return value
api return stack available constant param sort by preference
api not return diagnostic information
api return pointer current default constant
api return no value
api return number byte successfully encode negative value
api return pointer correspond param
api return verification depth limit currently set param
api return maximum length der encode ecdsa signature create private ec key param
api return mode set param
api return index number which pointer ssl object be store param
api return result verification certificate present by peer , if
api have no return value
api return size content octet param
api return number successfully reuse session
api do not return diagnostic output
if callback return no certificate , openssl library not send certificate
if padding be disabled , api not encrypt datum api return error if data remain partial block
api return reference engine handling param
api return no value
openssl server always return correct session -PRON- would context , as openssl server check session -PRON- would context before reuse session as describe
function return constant size byte
hash table entry be replace , api return value replace
api return pointer current constant
api return printable string contain hexadecimal decimal encode param respectively
api return length constant number place param
api return maximum size signature byte
api return previously set value
error be flag handshake fail
api return pointer constant use by param
if callback function return certificate , openssl library try load private key certificate datum ssl object use api function
api return flag value after set clearing flag
api return current flag be set constant
context return by api be internal context structure
otherwise api return pointer newly allocate structure
actual signature return by api may be small
initially , default constant be openssl internal implementation , as return by api
api may may not be supply by engine implementation , but  , return value can only be guarantee be valid as long as rsa key be valid do not have implementation change by api
api return no value
api return pointer respective api
return value api be pointer param content pointer
be mandatory destroy ssl object use api create one return previous state
api return pointer actual session
api return quiet shutdown setting param
return value be number byte actually read connection
api return cipher bio api
api do not return value
api return pointer param actually use param
function return value indicate description section
api return pointer bio read write channel , which can be different
none function present return value
api return param structure param correspond index param
api search param return index first match entry after param start beginning
api return dig block size byte
nid be return create object
api return private key associate constant
api return param pass cipher name , nid param
block environment , application be not always prepare deal operation return without success report
flag constant cause operation only return after handshake successful completion
api return param structure correspond pass param
api return number line buffer
api return currently valid session cache size
api return pointer param
otherwise api return pointer newly allocate structure
api return file descriptor bio use param
api return current verification flag
constantp function constant always return const pointer param
api return current setting
api return require number lock
api return newly initialise param structure
api return number curve , which may be constant
normally param be supply by function which return pointer constant
function can be call repeatedly until be no error code return
api return number param structure param
use constant socket , function call perform handshake may return constant condition , api may be call
api return earliest error code thread error queue remove entry
return value be valid only during lifetime ssl object param
api return block size
api return no value
api return size encrypt datum
api create return param structure
if param be null , buffer be dynamically allocate return , param be ignore
api not return value
api return constant associate constant
otherwise , param byte be write , include end constant , param be return
api return number secret bit use param
api return size recover plaintext
if return functional reference engine , cache another reference speed process future query
api return no value
datum write null sink be discard , read return eof
function return pointer fully populate structure
api return number byte encode exclude nul terminator
api return type value param refer
api return length representation
neither api nor api return value
return value point allocate param
api return allocate param structure type param
api return type bio
api do not return value
api return total number param field param
api return pointer hash value
api return param structure sha api digest algorithm but use dss signature algorithm
api function return structural reference engine object
otherwise api return pointer newly allocate structure
api return option bitmask after clear param
be engine api function return structural reference as
api return current setting
api return pointer name param
api return no value
api return share curve param constant ssl param
if param be constant , total number share curve be return , which may be constant
api return api bio pair
return value point datum ssl session
api be cipher block chain function blowfish
api return number significant bit word
basically , except constant , return floor constant
enc decide if encryption decryption shall be perform
read half pair return pende datum eof pende datum have be read
egd be available http
session be immediately remove
mode function api operate variable length datum
negative return value api can occur
be not nid
param correspond constant field et al
api be cfb mode blowfish constant bit feedback
be compliant tls specification
constant _ ... handle certificate name
datum be return application , be value as supply previous api call
param may be param as param
write read socket operation communication be block
api be basic blowfish encryption decryption function
if take as example , return 11 , not 16 , not constant
constant _ ... handle certificate extension
constant _ ... handle certificate attribute
encrypt decrypt constant bit chunk param use key schedule , put result param
encrypt decrypt byte param use key schedule , put result param
ctx be previously allocate constant use temporary variable
program protocol simplify , like ssh , ivec be simply initialize constant
param can still be set constant use different algorithm determine field type
encrypt user datum directly rsa be insecure
api can be call repeatedly chunk message be hash
encrypt decrypt first constant bit param use key param , put result param
constant be pass param ssl session sess
allow internal code correctly determine type field apply length check accord relevant standard
api add custom extension tls server extension type param callback constant
entry be add position determine by param
param be create
constant be pass ssl connection ssl session sess
constant param can be set arbitrary value which be pass corresponding callback
api add custom extension tls client extension type param callback constant
constant may be valid application datum but
be run as egd param be absolute path designate socket
happen session internal session cache
constant be call
constant be call
constant be always call
serverhello constant callback be only call
call api be equivalent api
api free error queue associate thread tid
length signature be place siglen
bio hence ssl engine inherit behaviour param
param be constant param null
param be signer public key
expect param contain dsa param
supply datum be read directly supply buffer
api be use encrypt variable number byte
api operate datum multiple constant byte long
constant be pass ssl connection , session -PRON- would length length memory location datum
value may be pass api dsa _ kinv dsa _
fatal constant alert be send
handshake abort
api compute digital signature param byte message digest param use private key param place asn der encode sigret
api retrieve entropy daemon use daemon constant read command which shall be answer immediately by daemon without wait additional entropy be collect
constant _ ... , api _ ... api _ ... handle pkc constant certificate request
_ ... , api _ ... api _ ... handle x. constant certificate , exception , show
constant _ ... , api _ ... api _ ... handle x. constant crl
handshake be abort
fatal constant alert be send
current thread have error queue remove
api be associate rsa return api
param have constant behaviour
api multiplie param blind factor param
api set param flag
copy inverse blind factor param be return param
api compute inverse param modulo param place result param constant
newly allocate param object no flag be set
api create memory bio use param byte datum param , length be determine by strlen
api return nid public key signing algorithm associate digest
functional reference be release by call api
api may be use precompute part signing operation case signature generation be constant
api verifie signature sigbuf size siglen match give message digest param size param
use specific engine implementation
prefix check be case sensitive _ be default
api multiplie param inverse blind factor param
automatically use builtin engine implementation
discover support control command
engine object have two level constant match way which object be use
issue control command engine
param structure be opaque public key algorithm context use by openssl high level public key api
program can process message as usual
api constant return nid object identifi represent give message digest
api retrieve digest value param place param
obtain functional reference exist structural reference , call api function
openssl make sure prng state be unique thread
estimate entropy contain event message , add prng
be not permissible use context simultaneously two thread
exist value param be overwrite
count be iteration count use
datum be bio write content param be optional set flag
api extract uncompresse content cms compresseddata structure param
param be cipher derive key iv
however , structural reference provide no guarantee engine be initialise able use cryptographic implementation
function be normally use
param be message digest use
api expect param contain share param dh _ dh _
api derive key iv various param
derive key iv be write key iv respectively
function allow param structure be examine
api decode encode dsa param use constant structure as define rfc constant
api create param use exponent param modulus m. api constant can be use pass special function exponentiation constant
broadly speak be two use control command
api set signing context param use dig type engine impl private key pkey
salt param be use as salt derivation
openssl can generally be use safely constant application provide least two callback function be set , constant
api be equivalent api
mime header type be delete content
datum be buffer contain datal byte which be use derive keying datum
constant signing operation be write param
api decode encode dsa signature use constant structure as define rfc constant
indeed quite possible engine not initialise typical environment , as engine be typically use support specialised hardware
digest type may be null
see secure renegotiation section detail
api compute share secret private dh value param party public value param store param
option be code as bitmask can be combine by logical operation
constant inhibit automatic update param after use constant inhibit automatic constant param after fix number use
typical application function be derive keying material encryption algorithm password datum param
allow legacy insecure renegotiation openssl unpatched client server
behaviour ssl library can be change by set several option
can be use set alternative signing option
only constant field be encode as integer
default implementation be use
number byte datum write be write integer param , constant byte be write
option be currently set by default
allow legacy insecure renegotiation openssl unpatched server only
dsapublickey function use non standard format actual datum encode depend value constant field param key param
name be friendlyname use supply certifictate key
as openssl constant option be set by default
param can be pass constant flag set
_ constant _ constant functionality be describe api
keytype add flag store private key
iter be encryption algorithm iteration count use constant be mac iteration count use
api set expect email address email
api enable policy checking add policy acceptable policy set
api enable policy checking set acceptable policy set policy
detailed description _ constant functionality can be find api
delta crl check be currently primitive
exist policy set be clear
be non standard extension only currently interpret by msie
api function set flag param by ore param
api set expect ip address ip
api return mask cause retry condition consist value constant
api set expect dns hostname name clearing previously specify host name name
api add name as additional reference identifer can match peer certificate
param constant , iter , constant keytype can be set constant sensible default be use
see verification flag section complete description value param can take
api decode private key use algorithm param
api function perform public key verification operation use param
api encode key
signature be specify use sig siglen param
api function initialize public key algorithm context use key pkey signature verification operation
verify datum be specify use tbs tbslen param
call api return value ret find reason
error code can be obtain by call api
api initiate handshake server
action depend underlie bio
attempt use key specific format pkc constant unencrypted privatekeyinfo format
as api value param may be null
message be clear text sign
be usually safe use constant enable bug workaround option
refer api
peer be consider verify name match
be call by constantigestsign function
api only return handshake have be finish error occur
constant signctx api be use sign digest present by param
api return type param
see api detail
certificate verification automatically invoke api
see api detail
certificate verification automatically invoke api
be call by various constantigestverify function
api return underlie type nid param
api return actual oid associate param
detail output buffer size , refer api
api be underlie implementation particular public key algorithm present by param
api set engine handling param
dsaprivatekey function use non standard structure consiting consist sequence contain , , param constant field respectively
historically key use algorithm could use different oid
rsa operation be much fast
constant verifyctx api be use verify signature against datum param
previous name set via api be retain , no change be make
as oppose init , cleanup api be call
param constant respectively field be encode
certificate verification automatically invoke api flag equal param give api
copy api be call
use key specific format pkc constant unencrypted privatekeyinfo format
init api be call initialize constant datum
crl be expect be available corresponding param
iqmp may be null private key , but
list hostname be clear , name check be not perform peer certificate
api add param
return value api be ignore
api be use retrieve application specific datum
param be application specific datum
param be pointer parent rsa structure
precise manner which function pointer be call be describe detail
function typically be use allocate application specific structure
api function be initially call register application specific datum
rsa key could use oid correspond nid api
option be useful old export grade software which could use sign only key arbitrary size but have restriction permissible size key which could be use encryption
api multiplie param
api subtract param
datum be return application , be value as supply previous api call
api take param
api divide param by param return remainder
api calculate value generator param _ lsb _ constant _ rsb _ _ lsb _ constant _ rsb _ ... _ lsb _ constant _ rsb _ _ lsb _ constant _ rsb
param be index
be value return by api function be initially register
api expect param contain dsa param
constant use comma plus as separator
api return remainder param divide by param
param be as api
api function be not useful
constant use space newline plus respectively
see bug section
point can be describe term compress constant
constant use space semicolon plus
constant use format identical api
pointer destination source param structure be pass param respectively
take three optional function pointer which be call
api return flag be set param current api
fact constant call api internally
option constant determine field separator use
param specifie function openssl use rsa operation
constant use comma plus space
affine constant point describe point term position
api make param default api rsa structure create later
be readable plain comma plus
field constant determine field name be display
generate key pair store _ constant _ constant
param be pointer param structure parent rsa structure
api be call
api be call
api allocate initialize rsa structure engine be use rsa operation
constant be multiline format which be as
function api can be call manipulate
constant set option which produce output compatible be equivalent
api be call
two distinct separator be use distinct relativedistinguishedname component separate value rdn constant rdn
constant be readable one line format which be as
param be passphrase use
param be param structure parse
param be pass pointer source application datum function be call , function return value be copy destination
use short name long name always use oid numerical form no field name respectively
as version constant implementation be group together algorithmic api engine module
param be content be compress
api create return cms compresseddata structure
ca can be null which case additional certificate be discard
param be optional set flag
only friendlyname localkeyid attribute be currently store certificate
application can thus modify datum point by param have different value source destination
whole dn be print reversed order
param be compression algorithm use api use default algorithm
behaviour api be constant left constant avoid create compatibility problem
ca can be valid stack which case additional certificate be append ca
point , give value point be curve only ever be two possible value
field name be pad constant character
originally pass corresponding param
space be place around character separate field name value
override rsa default set use rsa api
constant be use indicate
constant control by api be use
api validate constant param
default engine rsa operation be use
api , point encode param length pl
mime header type be prepende datum
function decode encode param structure which be equivalent algorithmidentifi structure
maximum size output buffer be automatically calculate check correspond evp api by evp framework
however , can be call directly implement pad asymmetric cipher
api wait client initiate handshake
not constant _ type have correspond bio implementation
api function initialize public key algorithm context use key pkey share secret derivation
see api information api function
friendlyname localkeyid attribute certificate be store alias keyid attribute param structure
no data be read bio param
if constant flag be set , partial param structure be return suitable streaming
api may be use application combine constant
check be safe prime , be suitable generator
standard set object be represent internal table
api search bio give type chain , start bio param
api set verification callback ctx constant overwriting exist callback
appropriate value be define header file object
pubk be array npubk public key
error code be constant digit hexadecimal number , library name , function name reason string be ascii text
api pad check leak timing information which can potentially be use mount bleichenbacher padding oracle attack
param be normally supply by function as api
convenience , oid be usually represent source code as numeric identifier , nid
case error , bit flag constant be set code
be possible call api twice way as api
object utility function process param which be representation object identifi type
application can determine
actual size encrypt secret key be write array ekl
iv param be buffer generate iv be write
api can be call repeatedly chunk message be hash
default constructor create string enter description name
object openssl can have short name , long name numerical identifier associate
may be null
padding be pad mode be use sign datum
normally supply content be translate mime canonical format
correspond certificate param additional certificate ca
be generate
raw rsa signature
description pass phrase file name param , become enter pass phrase param
api may create whatever string may include encoding be process by api function
compress datum be include param
iv param be ignore can be null
sign user datum directly rsa be insecure
search be make bio type
api be helper function can be use create prompt two piece information
api store additional datum flag associate error code datum flag
ee key can be use signing
chain can be use current session
verification callback param be inherit by correspond param
data contain string
constant be set
openssl have internal table oid , corresponding nid be available as define constant
if flag element rsa key be change , change be honour by rsa functionality but not be reflect return value api function _ effect api behave like api function
api sign param byte param use private key rsa store signature
secret key be encrypt use one public key , allow encrypt datum be decrypt use correspond private key
certificate type be acceptable
be currently
param be call as describe api while random prime number be generate , prime have be find , api be call
function api perform configuration operation param optional param ctx
param be structure hold bignum temporary variable use by library function
application could translate relative pathname absolute pathname
rsa functionality , as encryption function , be control by flag value rsa key , not by flag value constant attach rsa key
return number param process
none be representation anonymous cipher
api recover message digest param byte long signature param use signer public key rsa
see note information
be always disabled attempt override by user be ignore
api return stre which indicate protocol version first define cipher
no cipher be add by
api call configuration module finish handler free configuration module may have perform
constant set verification callback function ctx
api check whether certificate , private key pk certificate chain chain be suitable use current session
param structure be use
enveloped datum be add originatorinfo
cipher be flag sslv constant
function validate rsa key
api return textual description cipher use buffer param length len provide
within constant , callback have access api function set use api
sign datum certificate crl be add certificate crl field signeddata structure
by set callback null , default behaviour be restore
purpose be simplify application configuration constant param structure by provide common framework command line option configuration file
function check be fact prime , pq
field be optional absent null be write corresponding param
function use header as oppose chain verification functiosn which use constant
check de constant mod , , iqmp be set correctly be null
stream be perform
latter be set use api family function
cipher context can be set use api
compute signature constant output message
either keyidentifier be set param issuer name serial number param
server implementation only apply tls be no implementation
provide complete verification procedure include certificate purpose setting etc be complex task
function api can be use by application check existence command perform additional syntax check translation command value
api set callback fuction cb handling session ticket ssl context param
callback be call param callback
iv length be length iv correspond cipher
accord description cipher property be unknown
buffer constant byte be allocate use api
name be constant character long be use as key identifier
word export be print
name iv have already be parse session ticket
param arg be specify by application
verification function be call
api context can be set use api
ssl object be create ctx inherit set valid time
session ticket , define provide enhanced session resumption capability server implementation be not require maintain per session state
callback be available
keyencryptionalgorithm field be write param
remain param can be null
date field be write param
component keyattrid keyattr be write param
constant verification function be use
keyidentifi field be write param
api retrieve certificate signer identifier associate specific param
callback function cb be call every client instigate tls session
currently no public key algorithm include option pctx param
indicate ctx hctx have be set session can continue param
engine implementation can override way key datum be store handle , can even provide support hsm key _ which case rsa structure may contain no key datum
openssl library call cb enc param constant set ticket
pctx param allow print output be finely tune by use printing option
use constant pointer cb disable message callback
return value cb function be use by openssl determine processing occur
key be send bio param human readable form
param value be pointer which be pass application callback
either keyidentifier be set param issuer name serial number param
library call callback arguement enc equal constant set ticket
api set bit param constant
api set bit param constant
constant api specify default setting be copy param object by api
buf point buffer contain protocol message , which consist len byte
api modify actual setting param object
constant api can be use define message callback function cb observe protocol message be receive send
place result param
signedcontentidentifier be copy pcid
protocol version accord which protocol message be interpret by library
api set cipher bio param use key key iv iv
receiptsto param be copy prto
constant create sign receipt request structure
rsa be signer public key
function api print public , private param component key param respectively
constant retrieve value receipt request
api shift param leave by one place result param
receiptsto param specifie receiptsto field value
param be ignore
number be expand
sni be not use
api truncate param bit number
library call cb get set param
constant _ ... reason code as constant be globally unique
api shift param right by param bit place result param
api set application callback cb use by server perform action configuration require base servername extension receive incoming connection
store signature sigret signature size siglen
api can be use set param callback function , which be available arbitrary application use
api shift param right by one place result param
openssl ssl library implement secure socket layer transport layer security protocol
example crl would be free but rev would not
api shift param leave by param bit place result param
api initialize reuse param structure use hash function param key param
can be assign ssl object
openssl library expect name be use retrieve cryptographic param cryptographic context ctx be set retreived param initialization vector iv
exist value param be overwrite
api set verification callback param constant overwrite exist callback
various option regard certificate , algorithm etc can be set object
api verifie signature sigbuf size siglen be der representation give octet string param size constant
function param have follow meaning
openssl crypto library implement wide range cryptographic algorithm use various internet standard
signedcontentidentifier field be set use -PRON- would idlen
however verification callback be not essential default operation be often sufficient
session ticket , callback function be call enc equal constant
param be create as framework establish enable connection
api sign octet string param size constant use private key rsa represent der use pkc constant padding
api set verification context param use dig type engine impl public key pkey
receiptlist option receiptsfrom be use
allorfirstti option receiptsfrom be use set value allorfirst param
api function recover sign datum use param
size output be place constant
return structure be valid finalize
no error occur
param can be pass api constant flag set
due automatic protocol version negotiation , version be not necessarily protocol version use by sender message
case ssl constant tls constant , be one contenttype value define protocol specification , alert , handshake
param callback be param structure perform verification operation
effectively remove security application
additional application datum can be pass callback via constant mechanism
constantig ... function provide message digest
api be macro
after ssl object have be create use api can be use associate network connection object
error code be generate library number function reason code
see old constantign ... constanterify ... function
symmetric encryption be available constantncrypt ... function
create constant see api
api function initialize public key algorithm context use key pkey verify recover operation
api be similar except apply ssl structure ssl
error api
param be allocate return
constantigestsign ... constantigestverify ... function implement digital signature message authentication code
constanteal ... constantpen ... provide public key encryption decryption implement digital envelope
constant can be compare use api , print use api
constant ... function provide high level api asymmetric algorithm
function api send control operation context param
param correspond asn structure time define et al
param point buffer size param which store filename
value param always be less number second day
api set param time difference
param certificate provide api be free by library
constant verification operation be write param
constantncode ... constantecode ... function implement base constant encoding decoding
time set function obey rule outline rfc constant
can be use set alternative verification option
application add offset time directly constant value pass result api
char , temp
constant value can exceed number second day
param be mask indicate which operation control can be apply
api set param time represent by time constant after constant value param
return param be valid finalize
control command be indicate cmd additional param constant
temp malloc
constant set salt length digest length
service provide by library be use by openssl implementation ssl , tls , have be use implement ssh , openpgp , cryptographic standard
api macro set rsa key length rsa key genration bit
api function perform public key encryption operation use param
be intend be use option specify command line text file
signeddata structure include several pkc constant autenticatedattribute include signing time , pkc constant content type support list cipher smimecapabilitie attribute
macro api set number bit use dsa param generation bit
openssl by default identify signing certificate use issuer name serial number
datum be encrypt be specify use param inlen param
add signer exist structure
macro api set length dh prime param dh param generation
else generalizedtime be use
param not be finalize additional attribute can be add
main use be
actual number byte write be place outl
no signedattribute be use
function api allow application send algorithm specific control operation context param string form
attempt be make copy content digest value struture
operation perform depend value enc param
maximum size output buffer be write routlen param
use standard block padding
api enable disable pad
if call be successful , recover datum be write rout amount datum write routlen
constant return list client ca explicitly set ctx use constant
api function initialize public key algorithm context use key pkey encryption operation
constant can be associate private key particular algorithm by use function describe api page , key can be generate use api
api set cipher context param encryption cipher param engine impl
api constant return type pass cipher context
api be correspond decryption operation
api encrypt inl byte buffer param write encrypt version param
client mode , api return list client ca send server , if
mechanism be use internally by ssl library store ssl structure associate verification operation param structure
operation have four function associate operation
list ca name explicitly set send by server
api take account only byte record currently process
rsaprivatekey function process rsa private key use rsa structure
api return list client ca explicitly set ssl use api ssl param constant , server mode
no client ca list be explicitly set server do not send list cas
attempt be make copy content digest value param
dhparam function process dh param use dh structure
privatekey function read write private key pem format use param
read function can additionally transparently handle pkc constant format encrypt unencrypted key
detail meaning param see pem function argument section
write api use traditional private key format can handle rsa dsa private key
dsaprivatekey function process dsa private key use dsa structure
constant create return pkc constant envelopeddata structure
api write private key param pkc constant encryptedprivatekeyinfo format use pkc constant password base encryption algorithm
clarity term foobar function be use collectively refer api function
dsaparam function process dsa param use dsa structure
flag be optional set flag
old privatekey write api be retain compatibility
api register error string libcrypto function
signeddata structure include several cms signedattribute include signing time , cms content type support list cipher smimecapabilitie attribute
constant function process trust certificate use structure
cert be list recipient certificate
api encrypt final datum , data remain partial block
api create param copy constant
be content be encrypt
api copy content constant param dest
api make param default api dh structure create later
api set file pointer position ofs start file use fseek
cipher be symmetric cipher use
repeat api call param yield continuous key stream
by default encryption operation be pad use
type be actual nid cipher object identifi as ignore cipher param constant bit constant bit have nid
api be use prepare ssl object connection
standard block padding padding be check remove
unlike pem api encryption be apply pkc constant level not pem header
param constant function process pkc constant certificate request use param
api encrypt decrypt param byte datum param use param place result outdata
additional protocol byte may have be read contain record
however public key be encode use subjectpublickeyinfo structure
no padding be perform
encrypt datum be write amount datum write outlen
param write function use certificate request header whereas constant function use certificate request
api be use two different meaning
process be repeat prime api
store be trust certficate store
api be macro set position pointer offset byte start file
constant verifie pkc constant signeddata structure
api generate key pair store rsa structure provide rsa
be structure verify
openssl by default identify recipient certificate use issuer name serial number
cert flag param have meaning as constant
cert be set certificate which search signer certificate
callback be inherit by param object create param
callback be set use function api
api compute constant message digest param byte param place param
acceptable certificate would be pass cert param
success length psk byte be return
flag be optional set flag , which can be use modify verify operation
api select param perform operation use key rsa
api clear read buffer fill num byte buf
one application constant be only accept message sign by small number certificate
api make param default api dsa structure create later
param hint give callback may be null
previous version callback use constant keylength param control param generation export constant cipher suite
content be write
side effect be handle current ssl session
behaviour can be control constant flag api call
buffer datum be clear
partial structure be output suitable streaming
api set read , write read write buffer size size
behaviour can be cutomize use flag
indata be sign datum
client application may request server send back ocsp status response
constant if set error return by individual configuration module be ignore
function api configure openssl use file param application name param
which case constant may occur
constant return complete validate chain
api function perform public key decryption operation use param
callback be pass as param value previously set via call api
api return depth error
combination be however useful
datum be decrypt be specify use param inlen param
no error information be add
standard openssl configuration file be use
no data be read bio
be constant integer represent certificate chain error occur
session be consider bad be remove session cache , as require by rfc constant
normally module error add error information error queue
session be consider open
replace constant use by dsa key
api function initialize public key algorithm context use key pkey decryption operation
configuration module loading dsos be disabled
list specify override previous setting
standard openssl application name constant be use
be believe be compatible api _ lsb _ tm _ rsb _ , proprietary cipher rsa security inc
read operation be not successful
first module error be consider fatal no module be load
api initialize cipher context param decryption cipher param
use api additionally load verification
iv be supply iv param
case use configuration file be optional absence be not error
merely compare public material key param key pair
constant would be set
api return length der encode signature
param be ignore
api set param subsequent verification operation
api may be use precompute part signing operation
be possible call api twice way as api
constant set set crl use aid certificate verification sk
api decode der encode ecdsa signature return decode signature newly allocate param structure
der encode signature be store param be length be return constant
param point buffer contain der encode signature size len
param be ignore
api set renegotiate timeout second
callback function be give connection param , constant psk identity hint send by server param hint , buffer identity length constant byte result constant identity be be store , buffer psk length constant byte result constant key be be store
constant set additional certificate chain use by param sk
constant set set trusted certificate param sk
param be private ec key param be pointer param structure
decrypt encrypt symmetric key length ekl byte pass param use private key priv
api create der encode ecdsa signature param write encode signature param
api be wrapper function api kinv rp set null
api subtract param place result param
function be fast api
api add param place result param
multiplication by power constant , use api
param may be param as param
function normally be call
api set internal ssl pointer bio param ssl use close flag
either param may be null , which case respective value be not return
api multiplie param place result param
api take square param place result param
division by power constant , use api
function be faster repeat application api
function use less time space api
error code can be obtain by api
api set list ca send client
api raise param power place result param
api create return cms signeddata structure
constant set
api divide param by param place result param remainder param
efficient algorithm repeat computation use modulus , see api
buffer location param be only guarantee have size constant
datum be sign be read bio datum
cert be optional additional set certificate include cms structure
api multiplie param by param find constant remainder respective modulus param mod
api compute param power modulo param
many client expect sign content include valid mime header
way datum can be sign single pass
api set list ca send client
callback function receive pointer memory location put param pointer maximum allow length constant
send list cas , client
callback be only allow generate short -PRON- would reduce constant
signcert be certificate sign , pkey be correspond private key
returned param be initialize ready perform signing operation
several function include api finalize structure
signing be however not perform datum be sign be not read data param
trust certificate store be set param , end entity certificate be verify be set param set additional certificate chain
if call be successful decrypt datum be write amount datum write outlen
alternatively finalization can be perform by obtain stream bio directly use api
be api rsa dsa key
api return lastupdate nextupdate field param
api check , whether session -PRON- would param be already contain internal session cache parent context param
api return notbefore notafter field certificate param respectively
depend command param , fp be evaluate
api function perform public key signing operation use param
function api be basic cms sign function whose output be suitable many purpose
api function initialize public key algorithm context use key pkey signing operation
datum be sign be specify use tbs tbslen param
api set lastupdate nextupdate field param
one signer can be add use function api , non default digest can be use custom attribute add
ssl _ _ ctrl family function be use manipulate setting constant ssl object
signer use default digest signing algorithm
whitespace , newline carriage return character be ignore
be restore after callback have finish session -PRON- would be pad 0x constant
as time constant be possible , call api can cause read operation
api set file pointer position ofs start file use lseek
only full block datum be immediately process output by function
additionally nul terminator character be add
give number block datum be process
constant return pointer currently set information callback function ctx
length datum generate without nul terminator be return function
datum sign be include param
api encode inl byte datum find buffer point by param
every constant byte input provide constant byte output datum be produce
event error api set param constant
api set file descriptor bio param close flag
callback may only fill part possible length leave constant untouched
function attempt decode as much datum as possible constant byte chunk
callback set currently valid ctx be use
param specifie information callback function be call
partial param be output which additional signer capability can be add before finalization
ret information can be evaluate use api family function
certificate return be check
location param be fill before callback be call
output be store buffer param number byte output be store param
output be store buffer param number byte output be store param
api encode full block input datum param length dlen store param
api decode inl character datum find buffer point by param
remainder be hold param object be process by subsequent call api
api return pointer currently set information callback function ssl
api return pointer content octet param
handshake be continue
which case constant may occur
param denote message digest algorithm be use generate param
api verifie signature sigbuf size siglen match give message digest param size param
operation binary field be perform relative irreducible polynomial
param denote message digest algorithm be use generate signature
last api set specifically ssl remain
constant be set
if illegal base constant character be encounter if base constant padding character be encounter middle data function return constant indicate error
curve openssl use trinomial pentanomial param
level signature issuer attribute be check
server not send client certificate request client , client not send certificate
verification process be continue
return value api control strategy verification process
only request client certificate initial handshake
api sign message digest param size param use private key rsa as specify pkc constant
server send client certificate request client
pkc constant add constant , place limit size key can be use
server certificate be verify
api set verification flag param be param specifie api function be use
ret specifie alert information
set ctx be override set specific ssl object
api set verification flag ssl be param specifie api function be use
ssl signature be create
function decode encode param which be equivalent digestinfo structure define pkc constant pkc constant
param be pointer complete context use certificate chain verification
return value constant additionally indicate last input datum character process include base constant padding character no constant character datum be expect be process
handshake not be terminate respect verification failure connection be establish
verification process be immediately stop verification fail state
certificate chain be check start deep nesting level work upward peer certificate
if client do not return certificate , handshake be immediately terminate handshake failure alert
flag begin constant _
partial chunk unprocessed datum remain end be hold param object process by subsequent call api
api set callback function
by apply constant _ function api can locate certificate question perform additional step
flag be bit field flag which be define
null pointer can be use api
calculate require size output buffer add together value inl amount unprocessed datum hold param divide result by constant
implementation be define constant
constant set callback function
constant be application define callback
integer value be store param , malloce array word , least significant word first
structure contain constant param , see api
api verifie _ top constant _ top _ dmax
param indicate , whether verification certificate question be pass not
server send certificate which be check
constant be ignore
api function be use control behaviour
handshake be immediately terminate alert message contain reason verification failure
internal function use by openssl param implementation be describe facilitate debug extend library
verification failure alert be send peer handshake be terminate
default callback be use
default callback underlie param be use , be valid time ssl be create api
no callback function be use
signature be write sig amount datum write siglen
call process can however retrieve error code last verification error use api by maintain error storage manage by api
api create return cms sign receipt structure
normal server sanity check be perform certificate set by callback
internal function use by openssl param implementation be not be use by application
block be encode as final block datum output be pad be always divisible by constant
return value be identical param verification failure lead termination handshake alert message
negative return value suspend handshake handshake function return immediately
callback can inspect pass ssl structure set clear appropriate certificate
constant api set constant callback , arg value be pointer which be pass application callback
certificate callback functionality supercede functionality provide by old client certificate callback api
param be constant param , null
api function initialize public key algorithm context use key pkey key genration operation
api perform constant probabilistic primality test param iteration
si be param contain sign receipt request
similarly api be deprecate can be compare api respectively
arg param be pointer set via api
be empirically find timing reference primary memory be subject irregular , apparently constant variation
param be use
length param be specify constant
api be define as empty macro
api read certificate file return api subject name find
be use by api make param constant param contain param low high word param
cb be application define callback
no match be find
arg value be pointer which be pass application callback
api macro reduce _ top point significant constant word plus one
implementation use follow macro which , depend architecture , may use long long operation inline assembler
otherwise , seed be use generate
implement standard protocol selection
api return pointer select protocol param length len
param , inlen param be vector constant format
alpn be not use
various api library require use temporary param variable
api be use
api be use by client set list protocol available be negotiate
api , prime
be loop counter
optimize implementation
record duration period
api be helper function use select protocol
api set application callback cb use by server select which protocol use incoming connection
prime fulfill condition param rem
api clear exist chain associate current certificate param
macro api exist enable fetch flag param structure param
subapi perform param probe attempt fill vector _ lsb _ num _ rsb _ , param value constant meaning as many as take
param value return can be convert integer nid value use api
api change current certificate value base param
application can issue non fatal warning check chain by set flag constant checking return value
if negotiate ciphersuite be anonymous , be return current certificate be unchanged
first item server , constant list match item client , constant list be select , return param
be error return value great constant
api return internal pointer datum param
constant length context be treat differently no context , result different keying material return
partial param be return which additional recipient attribute can be add before finalization
api only return handshake step have be finish error occur
api return type param use standard constant as constant
api do not return value
api set embed content type param
two operation can be use iterate certificate param structure
if constant flag be set , partial param be return suitable streaming
callback be set use function api
psk identity be find server callback have provide psk successfully param psk
api create return cms envelopeddata structure
return value be length psk byte
provision context be optional
be last certificate load select corresponding param structure
give ssl connection param byte datum be write param
application can add set certificate use api call api option constant check reorder
pconf could be null
serverinfo extension be load last certificate instal
value context contextlen be ignore
alternatively label begin experimental be permit by standard be use without registration
loaded serverinfo extension datum be load certificate
constant set certificate chain associate current certificate param sk
accept can be free use api
purpose callback function be validate receive psk identity fetch constant key use
mime header type be add content , only make sense
cleartext signing be use , option only make sense signeddata constant be set api be call
compute signature api output message
api build certificate chain param normally use
chain store verify store
be two phase use des encryption
api use constant mode des
least significant bit byte be parity bit
input output may overlap
datum encrypt be include param
almost type openssl be represent as param structure
callback function be give connection param , constant psk identity send by client param identity , buffer psk length constant byte constant key be be store
param can be set constant use exist chain certificate as untrusted cas , constant omit root ca build chain , constant use exist chain certificate only build chain , flag constant ignore error
api param block by use constant encryption ecb mode
mode be use by ssl
api encrypt use output feedback mode
be use speed encryption process
function be available compatibility
param be decrypt param
use inw outw whiten encryption
api be rsa desx mode des
return constant byte checksum input byte
api implement outer triple cbc des encryption three key
involve encrypt input , decrypt key schedule , encrypt ks constant
api write param byte file descriptor param buffer param
form constant be use by rsaref library
api take array character as input output array character
macro api be provide perform constant encryption by use final encryption
datum be encrypt via constant use param key iv as start vector
api macro implement constant by reuse final encryption
store be trust certificate store use chain verification
inw outw be secret be as , part key
api be basic des encryption api encrypt decrypt single constant param electronic code book mode
by modify api , alternative implementation as hardware rng may be use
api make param api prng use
use der as oppose pem function be identical corresponding pem function as describe pem manual page
api be use read param byte file descriptor param buffer param
api be use specify encryption mode use api
mean des operation inside cbc mode be
param be use choice type which consist entirely primitive string type as directorystre time
api verifie cms signeddata structure
always transform input datum , point by param , output datum , point by param
cms be param verify
api if size param be large enough finish digest calculation return digest value
cert be set certificate which search signing certificate
as version constant implementation be group together algorithmic api engine module
certificate available via param capath be trust
type as constant be simply typedefe param function call param equivalent
one application constant be only accept message sign by small number certificate
example be demonstrate
api verifie cms sign receipt
allocate hash table entry not be free
rcms be sign receipt verify
api be use
store be trust certificate store
constant byte generate by pass be write param
api call free procedure indirectly affect item
ocms be original signeddata structure contain receipt request
provide constant cast before call constant callback write by application author
buffer bio , read write bio , cipher list specially create param , constant
lh _ type _ free free constant _ lrb _ type structure param
indata be detach content
callback be inherit by ssl object newly create param api
hash callback take pointer table entry as param return unsigned long hash value key field
api set
constant flag be set
one technique sometimes use blocking socket be use system call , poll equivalent determine call read read datum
override rand default set use rand api
session be generate within certain context
constant be application define callback
callback function param be use
be equivalent encryption use ecb mode
file contain one ca certificate
last block be copy temporary area constant fill
param be encrypt param use constant specify by param , previously set via api
api greatly reduce chance brute force break des have advantage as key
api can be call repeatedly chunk message be hash
next call handshake function lead call constant
if successful pointer param structure be return
api specifie location param , which ca certificate verification purpose be locate
next certificate be try
error be log error stack
certificate be instal ssl , see note bug section
example be illustrate callback be use cleanup resource item hash table before hashtable deallocate
function can understand ber form
returned structure be write param
api attempt decode param byte param
api convert internal der
api set context param length constant within which session can be reuse param object
length constant session -PRON- would context param exceed maximum allow length constant
see warning section common error
error be silently ignore
api set context param length constant within which session can be reuse param object
another trap avoid be misuse xp param api
operation complete
be however much well nothing
connection have be close
api constant encrypt cleartext datum point by param ciphertext point by param , use key schedule provide by param , initialization vector provide by ivec param
point directory contain ca certificate pem format
socket unix system , consult errno detail
value be define constant header file
search be perform order extension number
multiple call have no effect
buf no longer contain pointer allocate by api subsequent call api may well crash
file type constant can contain one item
openssl error queue may contain information error
encode datum be binary form may contain embedded constante
constant set constant callback
certificate capath be only look
verification process be perform
lh _ type _ create constant _ lrb _ type structure store arbitrary datum entry , provide hash compare callback be use organise table entry
signcert be certificate sign , pkey be corresponsde private key
param can be kind binary datum give length , be possible use eg name application hostname service name
api may want write datum api may want read datum
be make reuse
api handle pende handshake
be mainly
socket bios be use , select poll underlie socket can be use find
constant macro can be use create callback wrapper prototype require by lh _ type _
api attempt retrieve certificate directly sign param
cert be optional additional set certificate include pkc constant structure
api configure openssl use standard param read application section param
api set algorithmidentifi param base pass cipher
api function be design be simple call forget function
actual protocol version use be negotiate high version mutually support by client server
api search param ocsp response param
api get responder -PRON- would param
otherwise verifie signer certificate meet ocsp issuer criterion include potential delegation
otherwise function continue by validate signer certificate
api extract field param , revtime , param nextupd
api extract producedat field single response param
datum sign be include structure
account clock skew maxsec field can be set constant api
api check validity param nextupd value which be typically obtain api
ocsp response certificate contain thisupdate nextupdate field
constant flag be set return bio
list protocol available can be limit use , , , constant option api function
possible recipient be try
function first try find signer certificate response cert
client , effect be disable subsequent protocol version
api leave ownership pid pname caller , be responsible freeing
hold output
api be fast replacement normal system api
take param as trust store cert as set untrusted intermediate certificate
api operate input constant bit
be use by pem api read trust certificate object
api create file bio mode param meaning param be as stdio function api
partial structure be output which additional signer capability can be add before finalization
emulate normal constant safe semantic api
responder may have include param
api check basic response message param be correctly sign signer certificate can be validate
mean be
api be similar api but input be expect consist certificate follow by auxiliary trust information
ie least part record be read write
search certificate
end , certificate cert param
be useful application amount datum read be usually meaningful rather buffer size
additional certificate can be supply constant
next , function check signature param fail error
first constant bit come 1st input byte low half second input byte
function use separate private prng instance compromise public prng instance not affect secrecy private value , as describe api
