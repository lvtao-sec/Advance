null
null
null
null
null
null
null
null
null
null
null
null
when sqlite3_snapshot_open_APIName is called
null
null
If any sqlite3_bind__APIName routine is passed a prepared statement that has been finalized
null
When built for other platforms
if an out-of-memory error occurs during a format conversion
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
when the SQLITE_ENABLE_SNAPSHOT compile-time option is used
when the SQLITE_ENABLE_SNAPSHOT compile-time option is used
when the SQLITE_ENABLE_SNAPSHOT compile-time option is used
null
null
null
null
if SQLite is compiled using the SQLITE_ENABLE_PREUPDATE_HOOK compile-time option
if SQLite is compiled with the SQLITE_ENABLE_DESERIALIZE option
if SQLite is compiled with the SQLITE_ENABLE_SNAPSHOT option
if SQLite is compiled with the SQLITE_ENABLE_SNAPSHOT option
if SQLite is compiled with the SQLITE_ENABLE_DESERIALIZE option
null
null
null
If the statement is not a COMMIT and occurs within an explicit transaction
if the default setting is found to be suboptimal for a particular application
null
null
null
null
null
if the library was compiled with the SQLITE_ENABLE_COLUMN_METADATA C-preprocessor symbol
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
If an application uses more than one database connection
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
If an application invokes any sqlite3_xxx API functions from within an unlock-notify callback
If the third parameter is less than -1 or greater than 127
If the same thread tries to enter any mutex other than an SQLITE_MUTEX_RECURSIVE_API_constant more than once
If two different VFSes with the same name are registered
If a VFS is registered with a name that is NULL or an empty string
if it is used by an SQLITE_DELETE_API_constant callback
if it is used by an SQLITE_INSERT_API_constant callback
If the fourth parameter to sqlite3_bind_blob_APIName is negative
null
If this interface is invoked outside the context of an xConnect or xCreate virtual table method
If the 3_APIConstant parameter to sqlite3_open_v2_APIName is not one of the combinations shown above optionally combined with other SQLITE_OPEN _ * bits
If a collating function fails any of the above constraints and that collating function is registered and used
null
If sqlite3_step_APIName or sqlite3_reset_APIName or sqlite3_finalize_APIName are called from a different thread while any of these routines are pending
If two or more threads call one or more of these routines against the same prepared statement and column at the same time
If two or more threads call one or more column metadata interfaces for the same prepared statement and result column at the same time
If these routines are called from within the different thread than the one containing the application-defined function that received the sqlite3_context pointer
If this process generates an invalid UTF-8 encoding
If sqlite3_step_APIName or sqlite3_reset_APIName or sqlite3_finalize_APIName are called from a different thread while any of these routines are pending
If two or more threads call one or more of these routines against the same prepared statement and column at the same time
If two or more threads call one or more column metadata interfaces for the same prepared statement and result column at the same time
If these routines are called from within the different thread than the one containing the application-defined function that received the sqlite3_context pointer
If this process generates an invalid UTF-8 encoding
null
null
When all collating functions having the same name are deleted
null
null
null
If sqlite3_msize_APIParam_1 points to something that is not the beginning of memory allocation , or if it points to a formerly valid memory allocation that has now been freed
If either Z or sqlite3_keyword_name_APIParam_3 are NULL or invalid
if sqlite3_free_APIName is called with a non-NULL pointer that was not obtained from sqlite3_malloc_APIName or sqlite3_realloc_APIName
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
If the URI contains an authority
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
if the database connection sqlite3_snapshot_open_APIParam_1 does not know that the database file for schema sqlite3_snapshot_open_APIParam_2 is in WAL mode
If sqlite3_stmt_busy_APIParam_1 is not a NULL pointer and is not a pointer to a valid prepared statement object
If the table name parameter T in a call to sqlite3_table_column_metadata is NULL
null
null
null
null
null
If the two snapshot handles are not associated with the same database file
null
null
null
If any NUL characters occur in the string at a byte offset that is less than the value of the 3_APIConstant parameter
null
If sqlite3_uri_boolean_APIParam_1 is not a NULL pointer and is not a database file pathname pointer that SQLite passed into the xOpen VFS method
if any of the following are true
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
If the D parameter in sqlite3_str_new_APIName is not NULL
null
null
null
null
null
null
null
if SQLite is compiled with the - DSQLITE_OMIT_VACUUM option
null
null
null
null
null
null
if it does not want to
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
When INSERT OR REPLACE encounters a constraint violation
null
null
null
If an SQL operation is very nearly finished at the time when sqlite3_interrupt_APIName is called
null
null
while evaluating user-entered SQL
null
null
null
null
null
null
null
null
null
null
null
null
null
null
If the statement is a COMMIT or occurs outside of an explicit transaction
null
null
null
if speed is of utmost importance
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
when the metadata is discarded
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
null
If the 4_APIConstant parameter to the sqlite3_result_text * interfaces or to sqlite3_result_blob is the special constant SQLITE_STATIC_API_constant
null
null
null
null
null
null
null
when preparing SQL statements from an untrusted source
null
null
