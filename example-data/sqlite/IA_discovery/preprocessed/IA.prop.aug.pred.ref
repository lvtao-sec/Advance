['The sqlite3_table_column_metadata_APIName interface returns SQLITE_ERROR_API_constant if the specified column does not exist', 'api return constant']
['sqlite3_collation_needed_APIParam_2 and sqlite3_collation_needed16_APIParam_2 are one of SQLITE_UTF8_API_constant, SQLITE_UTF16_API_constantBE or SQLITE_UTF16_API_constantLE, indicating the most ideal form of the required collation sequence function', 'param be one constantbe constantle , indicate ideal form require sequence function']
['SQLITE_RANGE_API_constant is returned by sqlite3_bind_text_APIName', 'constant be return by api']
['Type conversion and pointer failure may occur in the following situations', 'type conversion pointer failure may occur follow situation']
['The sqlite3_mprintf_APIName and sqlite3_vmprintf_APIName routines return NULL pointers', 'api return null pointer']
['The sqlite3_stmt_busy_APIName interface returns false', 'api return constant']
['The safest strategy is to call these routines in one of the following ways', 'safe strategy be call api one follow way']
['The string returned by sqlite3_expanded_sql_APIName must be released by the application by passing it to sqlite3_free_APIName', 'string return by api must be release by application by pass api']
['Call of pointer to sqlite3_keyword_name_APIName causes undefined behavior', 'call pointer api undefined behavior']
['These APIs are only available', 'apis be only available']
['The sqlite3_uri_boolean_APIName routine returns false', 'api return constant']
['This method is disabled on MacOS X 10.7 and iOS version 5.0 and will always return SQLITE_MISUSE_API_constant', 'api be disabled maco constant ios version constant always return constant']
['sqlite3_complete_APIName and sqlite3_complete16_APIName return 0', 'api return constant']
['The sqlite3_expanded_sql_APIName interface returns NULL', 'api return null']
['The application should complete all prepared statements, close all BLOB handles, and complete all sqlite3_backup objects associated with the sqlite3 object before attempting to close the object.', 'application should complete prepared , close handle , complete param associate object before attempt close object']
['File names containing international characters must be converted to UTF-8 before being passed to sqlite3_open_APIName or sqlite3_open_v2_APIName', 'file name contain international character must be param before pass api']
['Transaction control statements such as BEGIN, COMMIT, ROLLBACK, SAVEPOINT, and RELEASE make sqlite3_stmt_readonly_APIName return true', 'control as begin , commit , rollback , , release make api return constant']
['This attribute can only be used in SQLITE_UPDATE_API_constant and SQLITE_DELETE_API_constant pre-update callbacks', 'attribute can only be use constant param callback']
['sqlite3_strlike_APIName interface returns zero', 'api return constant']
['sqlite3_db_filename_APIName will return NULL pointer or empty string', 'api return null pointer empty string']
['But for maximum security, mutex locks should be enabled', 'but maximum security , mutex lock should be enable']
['The sqlite3_update_hook_APIName function returns the P parameter from the last call to D on the same database connection, or NULL to the first call to D.', 'api function return param last call database connection , null first call']
['sqlite3_open16_APIName returns an error to the caller', 'api return error caller']
['Call sqlite3_close_APIName and sqlite3_close_v2_APIName return SQLITE_OK_API_constant', 'call api return constant']
['The application does not need to worry about the release result', 'application do not need worry release result']
['The interrupted SQL operation will return SQLITE_INTERRUPT_API_constant', 'interrupt operation return constant']
['The strings returned by sqlite3_column_text_APIName and sqlite3_column_text16_APIName, even if they are empty strings, always end with zero', 'string return by api , even if be empty string , always end constant']
['SQLITE_ERROR_API_constant is returned by sqlite3_snapshot_open_APIName', 'constant be return by api']
['For maximum portability, it is recommended that applications always always call sqlite3_initialize_APIName directly before using any other SQLite interface.', 'maximum , be recommend application always always call api directly before use api']
['SQLITE_BUSY_API_constant is returned by sqlite3_wal_checkpoint_v2_APIName', 'constant be return by api']
['For the INSERT operation on the rowid table or any operation on the WITHOUT ROWID table, the value of the sixth parameter is undefined', 'insert operation table operation without table , value sixth param be undefined']
['sqlite3_msize_APIName returns zero', 'api return constant']
['The sqlite3_free_table_APIParam_1 table should be released using sqlite3_free_table_APIName', 'param table should be release use api']
['Applications using SQLite mutexes should only use the dynamic mutexes returned by SQLITE_MUTEX_FAST_API_constant or SQLITE_MUTEX_RECURSIVE_API_constant', 'application use should only use dynamic return by constant']
['sqlite3_value_type_APIParam_0 is one of SQLITE_INTEGER_API_constant, SQLITE_FLOAT_API_constant, SQLITE_TEXT_API_constant, SQLITE_BLOB_API_constant or SQLITE_NULL_API_constant', 'param be one constant']
['The result may be an infinite loop', 'result may be infinite loop']
['The SQLite query planner can perform other optimizations on deterministic functions, so it is recommended to use the SQLITE_DETERMINISTIC_API_constant flag whenever possible', 'query can perform optimization deterministic function , be recommend use constant flag']
['Incremental Blob I/O routines can only read or overwrite existing Blob content', 'incremental api can only read overwrite exist content']
['You must call sqlite3_reset_APIName or sqlite3_finalize_APIName', 'PRON- must call api']
['These routines should return true', 'api should return constant']
['The callback function should normally return SQLITE_OK_API_constant', 'callback function should normally return constant']
['This interface sqlite3_snapshot_recover_APIName is only available', 'api be only available']
['sqlite3_test_control_APIName does not apply to applications', 'api do not apply application']
['sqlite3_initialize_APIName returns error codes other than SQLITE_OK_API_constant', 'api return error code constant']
['sqlite3_compileoption_get_APIName returns a NULL pointer', 'api return null pointer']
['The values \u200b\u200breturned by sqlite3_column_bytes_APIName and sqlite3_column_bytes16_APIName do not contain a zero terminator at the end of the string', 'value return by api not contain constant end string']
['sqlite3_uri_parameter_APIName returns NULL, and sqlite3_uri_boolean_APIName returns B', 'api return null , api return']
['sqlite3_blob_reopen_APIName returns a SQLite error code, and the blob handle is considered aborted', 'api return error code , handle be consider abort']
['sqlite3_realloc_APIName returns NULL', 'api return null']
['sqlite3_data_count_APIName returns 0', 'api return constant']
['These routines must be called from the same thread running the SQL function', 'api must be call thread run function']
['sqlite3_bind_parameter_name_APIParam_0 always uses UTF-8 encoding', 'param always use param']
['Passing any other pointers to this routine will result in undefined behavior and may be bad behavior', 'pass pointer api result undefined behavior may be bad behavior']
['Only external mutex implementation is needed to provide these routines', 'only external mutex implementation be need provide api']
['SQLITE_NOMEM_API_constant is returned by sqlite3_complete16_APIName', 'constant be return by api']
['It is recommended that you add a path name (such as "./") before sqlite3_open_v2_APIParam_1 to avoid ambiguity.', 'be recommend -PRON- add path name as . . before param avoid']
['The operation is still attempted on all remaining additional databases, and SQLite_BUSY_API_constant is finally returned by sqlite3_wal_checkpoint_v2_APIName', 'operation be still attempt remain additional database , constant be finally return by api']
['sqlite3_column_decltype16_APIParam_0 is always UTF-8 encoded', 'param be always param encode']
['These routines sqlite3_column_database_name_APIName sqlite3_column_database_name16_APIName sqlite3_column_table_name_APIName sqlite3_column_table_name16_APIName sqlite3_column_origin_name_APIName sqlite3_column_origin_name16_APIName may also return', 'api may return']
['Please note that the name length limit is in UTF-8 bytes, not characters or UTF-16 bytes', 'please name length limit be param byte , not character param byte']
['To avoid memory leaks, the object returned by sqlite3_str_new_APIName must be released by subsequent calls to sqlite3_str_finish_APIName.', 'avoid memory leak , object return by api must be release by subsequent call api']
['sqlite3_config_APIName returns SQLITE_OK_API_constant', 'api return constant']
['Otherwise, sqlite3_open_APIName returns an error code', 'otherwise , api return error code']
['For sqlite3_snapshot_get_APIName to succeed, the following conditions must be met', 'api succeed , follow condition must be meet']
['This attribute can only be used in SQLITE_INSERT_API_constant and SQLITE_UPDATE_API_constant pre-update callbacks', 'attribute can only be use constant param callback']
['The application must always be prepared to encounter a NULL pointer in any of the third to sixth parameters of the authorization callback', 'application must always be prepare null pointer third sixth param authorization callback']
['This is considered the wrong form', 'be consider wrong form']
['On these systems, the shared cache mode for each database connection should be enabled via sqlite3_open_v2_APIName with SQLITE_OPEN_SHAREDCACHE_API_constant', 'system , share cache mode database connection should be enable via api constant']
['These routines sqlite3_trace_APIName and sqlite3_profile_APIName are deprecated', 'api be deprecate']
['Subsequent calls to sqlite3_value_type_APIName may return SQLITE_TEXT_API_constant', 'subsequent call api may return constant']
['Any attempt to create a function with a longer name will result in SQLITE_MISUSE_API_constant being returned', 'attempt create function long name result constant return']
['sqlite3_stmt_busy_APIName interface returns true', 'api return constant']
['The collation function must always return the same answer given the same input', 'function must always return give input']
['sqlite3_close_v2_APIName returns SQLITE_OK_API_constant, and the release of resources is postponed until all prepared statements, BLOB handles, and sqlite3_backup objects are also destroyed', 'api return constant , release resource be postpone until prepared , handle , param be destroy']
['In the old interface, the return value will be SQLITE_BUSY_API_constant, SQLITE_DONE_API_constant, SQLITE_ROW_API_constant, SQLITE_ERROR_API_constant or SQLITE_MISUSE_API_constant', 'old api , return value be constant']
['However, it is not safe to call this routine in a database connection that is closed or may be closed before sqlite3_interrupt_APIName returns', 'however , be not safe call api database connection close may be close before api return']
['These routines only apply to protected sqlite3_value objects', 'api only apply protect param']
['Call sqlite3_serialize_APIName may return NULL', 'call api may return null']
[' This parameter must be a byte offset that assumes that the string appears with a NUL terminator.', 'param must be byte assume string appear nul']
['The sqlite3_str_errcode_APIName method will return the appropriate error code', 'api return appropriate error code']
['In the "v2" interface, more specific error codes are returned directly by sqlite3_step_APIName', 'api , specific error code be return directly by api']
['But sometimes they are impossible, in this case, the previous pointer will be invalid', 'but sometimes be impossible , case , previous pointer be invalid']
['However, such a call cannot close the database connection, nor can it finalize or reset the prepared statement in which the function runs.', 'however , call can not close database connection , nor can finalize reset prepared which function run']
['Functions with non-negative nArg parameters achieve better matching than functions with negative nArg', 'function param achieve well match function negative']
['When using sqlite3_prepare_v2_APIName, sqlite3_prepare_v3_APIName, sqlite3_prepare16_v2_APIName or sqlite3_prepare16_v3_APIName or any one of the traditional interfaces sqlite3_prepare_APIName or sqlite3_prepare_step or must be called once, you must use preliteestep_step or must be evaluated long', 'use api one traditional api param must be call , -PRON- must use param must be evaluate long']
['Therefore, sqlite3_set_auxdata_APIName should be called at the end of the function implementation, and after calling sqlite3_set_auxdata_APIName, the function implementation should not use P', 'therefore , api should be call end function implementation , after call api , function implementation should not use']
['For "X LIKE P" without ESCAPE clause, set the sqlite3_strlike_APIParam_3 parameter of sqlite3_strlike_APIName to 0', 'like without , set param api constant']
['The resource associated with the database connection handle should be released by passing it to sqlite3_close_APIName', 'resource associate database connection handle should be release by pass api']
['After success, sqlite3_blob_open_APIName returns SQLITE_OK_API_constant, and the new BLOB handle is stored in ppBlob', 'after success , api return constant , handle be store']
['Currently, there is only one option that can be configured using sqlite3_vtab_config_APIName', 'currently , be only one option can be configure use api']
['The collation function must follow the following attributes for all strings A, B and C', 'function must follow follow attribute string']
['The application must provide a custom mutex implementation using the SQLITE_CONFIG_MUTEX_API_constant option of the sqlite3_config_APIName function before calling sqlite3_initialize_APIName or any other public sqlite3_function calling sqlite3_initialize_APIName.', 'application must provide custom mutex implementation use constant option api function before call api public param call api']
['Only need to use this interface', 'only need use api']
['Behavior is uncertain and may be undesirable', 'behavior be uncertain may be undesirable']
['To avoid memory leaks, the application should call sqlite3_free_APIName on the error message string returned by the fifth parameter of sqlite3_exec_APIName after the error message string is no longer needed.', 'avoid memory leak , application should call api error message string return by fifth param api after error message string be no longer need']
['Developers may also want to use the sqlite3_set_authorizer_APIName interface to further control untrusted SQL', 'developer may want use api control untrusted']
['Older interfaces are retained for backward compatibility, but they are not recommended', 'old api be retain backward compatibility , but be not recommend']
['The sqlite3_stmt_isexplain_APIName interface returns 1', 'api return constant']
['sqlite3_blob_write_APIName returns SQLITE_READ_API_constantONLY', 'api return constantonly']
['Assuming that after registering an unlock notification callback, the database waits for the callback to be issued before performing any further operations, using this API may cause the application to deadlock', 'assume after register callback , database wait callback be issue before perform operation , use api may application']
['Only one authorizer can be connected to the database at a time', 'only one can be connect database time']
['May cause memory corruption, segmentation faults or other serious errors', 'may memory , serious error']
['sqlite3_wal_checkpoint_v2_APIName returns SQLITE_ERROR_API_constant to the caller', 'api return constant caller']
['Parameter name must be given in UTF-8', 'paramet name must be give param']
['Database connection must not be closed', 'database connection must not be close']
['On these systems, sqlite3_mutex_try_APIName will always return SQLITE_BUSY_API_constant', 'system , api always return constant']
['sqlite3_close_APIName will keep the database connection open and return SQLITE_BUSY_API_constant', 'api keep database connection open return constant']
['The parameter of sqlite3_mutex_alloc_APIName must be one of these integer constants', 'param api must be one integer constant']
['The returned value is unpredictable and meaningless', 'return value be unpredictable meaningless']
['To avoid resource leakage, you should eventually release each open BLOB handle by calling sqlite3_blob_close_APIName.', 'avoid resource leakage , -PRON- should eventually release open handle by call api']
['The application should only call sqlite3_initialize_APIName and sqlite3_shutdown_APIName', 'application should only call api']
['The UTF-8 interface is preferred because SQLite currently uses UTF-8 for all parsing', 'param api be prefer because currently use param parsing']
[' The result is uncertain', 'result be uncertain']
['The sqlite3_prepare_APIName interface is an old interface and should be avoided', 'api be old api should be avoid']
['These routines must be called from the same thread as the SQL function that provides the sqlite3_value parameter', 'api must be call thread as function provide param']
['It is recommended to use the SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION_API_constant method instead of this interface to disable extension loading, so the load_extension_APIName SQL function remains disabled', 'be recommend use constant api instead api disable extension loading , api function remain disabled']
['Tests show that most applications do not need to use SQLITE_ENABLE_MEMORY_MANAGEMENT to achieve sufficient soft heap limit implementation', 'test show application not need use constant achieve sufficient soft limit implementation']
['The pointer parameters of sqlite3_free_APIName and sqlite3_realloc_APIName must be NULL, otherwise the pointer obtained from the sqlite3_malloc_APIName or sqlite3_realloc_APIName call previously called has not been released', 'pointer param api must be null , otherwise pointer obtain api call previously call have not be release']
['In the xUpdate method of the virtual table, the sqlite3_value_nochange_APIName interface will return true if and only if the column corresponding to sqlite3_value_nochange_APIParam_1 corresponding to the call sqUpdate3_value_nochange_APIParam_1 has not changed and the xUpdate method is called to call the UPDATE operation to be implemented and the value has not been changed. Extract the value of the returned column without setting the result', 'api virtual table , api return constant']
['SQLite3_aggregate_context_APIName must be called from the same thread running the aggregate SQL function', 'api must be call thread run function']
['The authorizer callback should return SQLITE_OK_API_constant to allow operations, SQLITE_IGNORE_API_constant to prohibit specific operations but allow to continue compiling SQL statements, or SQLITE_DENY_API_constant to cause the entire SQL statement to be wrongly rejected.', 'callback should return constant allow operation , constant prohibit specific operation but allow continue compile , constant entire be wrongly reject']
['It will continue to execute and return SQLITE_BUSY_API_constant to the application instead of calling the busy handler', 'continue execute return constant application instead call busy handler']
['The sqlite3_shutdown_APIName interface can only be called from a single thread', 'api can only be call single thread']
['In the old interface, after any errors other than SQLITE_BUSY_API_constant and SQLITE_MISUSE_API_constant, the sqlite3_step_APIName API always returns the common error code SQLITE_ERROR_API_constant.', 'old api , after error constant , api always return common error code constant']
['You should roll back the transaction before continuing', 'PRON- should roll back before continue']
['sqlite3_sql_APIName will return the original string "SELECT $ abc,: xyz", but sqlite3_expanded_sql_APIName will return" SELECT 2345, NULL".', 'api return original string select abc , : , but api return select 2345 , null']
['Otherwise, sqlite3_db_cacheflush_APIName returns SQLITE_OK_API_constant', 'otherwise , api return constant']
['The sqlite3_win32_set_directory_APIParam_2 parameter should be NULL to release the previous value through sqlite3_free', 'param should be null release previous value api']
['Therefore, the application should ensure that the correct authorizer callback is retained during sqlite3_step_APIName.', 'therefore , application should ensure correct callback be retain during api']
['SQLITE_LOCKED_API_constant is returned by sqlite3_unlock_notify_APIName', 'constant be return by api']
['The value returned by sqlite3_status_APIName is undefined', 'value return by api be undefined']
['The sqlite3_stmt_isexplain_APIName interface returns 0', 'api return constant']
['The sqlite3_column_name_APIParam_0 pointer is valid until the prepared statement is destroyed with sqlite3_finalize_APIName or until the first call to sqlite3_step_APIName for a specific run automatically prepares the statement, or until the next call to sqlite3_column_name_APIName or sqlite3_column_name16_APIName on the same object', 'param pointer be valid until prepared be destroy api until first call api specific run automatically prepare , until next call api object']
['The calling application should pass sqlite3_str_finish_APIParam_0 to sqlite3_free_APIName to avoid memory leaks', 'call application should pass param api avoid memory leak']
['After the application uses the result of sqlite3_get_table_APIName, it must pass the result table pointer to sqlite3_free_table_APIName', 'after application us result api , must pass result table pointer api']
['The sqlite3_compileoption_used_APIName function returns 0 or 1, indicating whether the specified option was defined at compile time', 'api function return constant , indicate whether specified option be api compile time']
['The sqlite3_str_finish_APIName interface will also return a NULL pointer', 'api return null pointer']
['Only sqlite3_free_table_APIName can correctly and safely release memory', 'only api can correctly safely release memory']
['The result is uncertain and may be harmful', 'result be uncertain may be harmful']
['The result of an expression involving a string with embedded NUL is undefined', 'result involve string embed nul be undefined']
['Attempt to write expired BLOB handle failed with error code SQLITE_ABORT_API_constant', 'attempt write expire handle fail error code constant']
['In this case, for the same column in the xUpdate method, sqlite3_value_nochange_APIName will return true', 'case , api return constant']
['SQLITE_OK_API_constant is returned by sqlite3_wal_checkpoint_v2_APIName', 'constant be return by api']
["``iScanStatusOp'' must be one of the scanstatus options, otherwise the behavior of this interface is undefined", 'must be one option , otherwise behavior api be undefined']
['SQLITE_ERROR_API_constant_SNAPSHOT is returned by sqlite3_snapshot_open_APIName', 'param be return by api']
['In a multi-threaded environment, unprotected sqlite3_value objects can only be used safely with sqlite3_bind_value_APIName and sqlite3_result_value_APIName', 'param environment , unprotected param can only be use safely api']
['Upon success, sqlite3_blob_read_APIName returns SQLITE_OK_API_constant', 'upon success , api return constant']
['sqlite3_stmt_scanstatus_APIName is only available', 'api be only available']
['SQLITE_OMIT_TRACE compile time option makes sqlite3_expanded_sql_APIName always return NULL', 'constant compile time option make api always return null']
['No mutex lock, it is not safe to use SQLite from multiple threads at the same time', 'no mutex lock , be not safe use multiple thread time']
['The result is uncertain', 'result be uncertain']
['If sqlite3_uri_parameter_APIName exists, the value of sqlite3_uri_parameter_APIParam_2 is returned; if sqlite3_uri_parameter_APIParam_2 does not appear as a query parameter of sqlite3_uri_parameter_APIParam_1, a NULL pointer is returned.', 'if api exist , value param be return ; if param do not appear as query param null pointer be return']
['The result is undefined behavior', 'result be undefined behavior']
['However, after opening the BLOB handle, you cannot change the column, table, or database of the BLOB handle', 'however , after open handle , -PRON- can not change , table , database handle']
['The sqlite3_libversion_number_APIName function returns an integer equal to SQLITE_VERSION_API_constant_NUMBER', 'api function return integer equal param']
[' sqlite3_value_pointer_APIName will return the pointer P. Otherwise, sqlite3_value_pointer_APIName will return NULL', 'api return pointer p. otherwise , api return null']
['Sqlite3_step_APIName should not be called again on the VM', 'api should not be call']
['The sqlite3_snapshot_free_APIName interface is only available', 'api be only available']
['The length of the name is limited to 255 bytes in UTF-8 representation, excluding zero terminator', 'length name be limit constant byte param representation , exclude constant']
['sqlite3_uri_boolean_APIName is returned (B! = 0).', 'api be return constant']
['The sqlite3_commit_hook_APIName and sqlite3_rollback_hook_APIName functions return P parameters from previous calls to the same function on the same database connection D, and return NULL for the first call of each function on D.', 'api function return param previous call function database connection , return null first call function']
['The zero-length BLOB return value of sqlite3_column_blob_APIName is a NULL pointer', 'param return value api be null pointer']
['sqlite3_log_APIParam_2 string cannot be NULL', 'param string can not be null']
['sqlite3_column_bytes_APIName returns zero', 'api return constant']
['Only valid calls to sqlite3_shutdown_APIName can perform any de-initialization', 'only valid call api can perform param']
['This routine is only applicable to the BLOB handle, which was created by a previous successful call to sqlite3_blob_open_APIName and has not been closed by sqlite3_blob_close_APIName', 'api be only applicable handle , which be create by previous successful call api have not be close by api']
['The sqlite3_errcode_APIName interface returns the numeric result code or extended result code of the API call', 'api return numeric result code extend result code api call']
['Failure to reset prepared statements using sqlite3_reset_APIName will result in SQLITE_MISUSE_API_constant being returned from sqlite3_step_APIName', 'failure reset prepared use api result constant return api']
['sqlite3_preupdate_depth_APIName interface returns 1', 'api return constant']
['The sqlite3_table_column_metadata_APIName interface returns SQLITE_OK_API_constant and fills the appropriate value in the non-NULL pointer in the last five parameters (if the specified column exists)', 'api return constant fill appropriate value param pointer last five param specify exist']
['sqlite3_column_type_APIParam_0 is one of SQLITE_INTEGER_API_constant, SQLITE_FLOAT_API_constant, SQLITE_TEXT_API_constant, SQLITE_BLOB_API_constant or SQLITE_NULL_API_constant', 'param be one constant']
['The only exception is if SQLite cannot allocate memory to hold the sqlite3 object, then write a NULL to *ppDb instead of a pointer to the sqlite3 object.', 'only exception be  , write null instead pointer object']
['The sqlite3_release_memory_APIName routine is no operation and returns zero', 'api be no operation return constant']
['Calling sqlite3_blob_bytes_APIName on an abnormally terminated Blob handle always returns zero', 'call api abnormally terminate handle always return constant']
['The sqlite3_status_APIName and sqlite3_status64_APIName routines return SQLITE_OK_API_constant on success and non-zero error codes on failure', 'api return constant success param error code failure']
['Applications that need to use untrusted sources to process SQL can use SQLite3_limit_APIName to reduce resource limits and max_page_count PRAGMA to limit the database size in addition to the authorizer.', 'application need use untrusted source process can use api reduce resource limit param limit database size addition']
['Only one busy handler can be defined per database connection', 'only one busy handler can be api per database connection']
['The calling function must not attempt to call sqlite3_free_APIName directly', 'call function must not attempt call api directly']
['Calling sqlite3_snapshot_open_APIName will fail', 'call api fail']
['The sqlite3_win32_set_directory8 and sqlite3_win32_set_directory16 interfaces behave exactly the same as the sqlite3_win32_set_directory interface, except that the string parameters must be UTF-8 or UTF-16, respectively.', 'param api behave exactly as api , except string param must be param respectively']
['The sqlite3_config_APIName interface is not thread safe', 'api be not thread safe']
['After encountering a lock, sqlite3_busy_handler_APIName immediately returns SQLITE_BUSY_API_constant', 'after lock , api immediately return constant']
['Then the behavior is uncertain.', 'behavior be uncertain']
['Can only change rows', 'can only change']
['Calling sqlite3_blob_close_APIName with parameters that are not NULL pointers or open Blob handles will cause undefined behavior', 'call api param be not null pointer open handle undefined behavior']
['SQLite behavior is undefined', 'behavior be undefined']
['The sqlite3_data_count_APIName routine also returns 0', 'api return constant']
['The behavior of sqlite3_msize_APIName is undefined and may be harmful', 'behavior api be undefined may be harmful']
['This routine returns a non-zero error code', 'api return param error code']
['sqlite3_reset_APIName returns the appropriate error code', 'api return appropriate error code']
['This routine only checks if the table exists and returns SQLITE_OK_API_constant', 'api only check']
['This interface is not recommended', 'api be not recommend']
['When a NULL pointer is given, the sqlite3_mutex_notheld_APIName interface should also return 1', 'null pointer be give , api should return constant']
['Processing was abandoned, sqlite3_wal_checkpoint_v2_APIName immediately returned the error code to the caller', 'processing be abandon , api immediately return error code caller']
['The sqlite3_load_extension_APIName interface returns SQLITE_OK_API_constant successfully, or SQLITE_ERROR_API_constant if there is a problem', 'api return constant successfully , constant']
['The sqlite3_mutex_alloc_APIName routine returns NULL', 'api return null']
['The callback implementation must not do anything that would modify the database connection that called the callback', 'callback implementation must not anything would modify database connection call callback']
['Using any prepared statement after the end may lead to undefined bad behavior, such as segfaults and heap damage', 'use prepared after end may undefined bad behavior , as damage']
['The API sqlite3_unlock_notify_APIName is only available', 'api be only available']
['sqlite3_keyword_check_APIName returns zero', 'api return constant']
['The update hook implementation must not do anything that would modify the database connection that called the update hook', 'implementation must not anything would modify database connection call']
['The callback implementation should return zero to ensure future compatibility', 'callback implementation should return constant ensure future compatibility']
['The sqlite3_trace_v2_APIName interface is designed to replace the old interfaces sqlite3_trace_APIName and sqlite3_profile_APIName are deprecated', 'api be design replace old api be deprecate']
['One way to solve this problem is to check the extended error code returned by the sqlite3_step_APIName call', 'one way solve problem be check extended error code return by api call']
['SQLITE_ERROR_API_constant was returned by sqlite3_blob_write_APIName, and no data was written', 'constant be return by api , no datum be write']
['Any attempt to use these routines on unprotected sqlite3_value is not thread safe', 'attempt use api unprotected param be not thread safe']
['The sqlite3_get_autocommit_APIName interface returns non-zero or zero', 'api return param constant']
['Attempting to deallocate static mutex will cause undefined behavior', 'attempt deallocate static mutex undefined behavior']
['The third to sixth parameters of the callback are NULL pointers or zero-terminated strings, which contain additional details about the operation to be authorized', 'third sixth param callback be null pointer param string , which contain additional detail operation be authorize']
['Some systems do not support operations implemented by sqlite3_mutex_try_APIName', 'system not support operation implement by api']
['The sqlite3_snapshot_get_APIName interface is only available', 'api be only available']
['The M parameter should be zero or more bitwise OR combinations of SQLITE_TRACE_API_constant constants', 'param should be constant bitwise combination constant']
['The sqlite3_data_count_APIName routine returns 0', 'api return constant']
['The implementation of new functions always causes an exception to be thrown', 'implementation function always exception be throw']
['sqlite3_table_column_metadata_APIName returned an error', 'api return error']
[' The return value is arbitrary and meaningless', 'return value be arbitrary meaningless']
[' No other attempt to access the database, sqlite3_busy_handler_APIName returns SQLITE_BUSY_API_constant to the application', 'no attempt access database , api return constant application']
['If sqlite3_keyword_name_APIParam_1 is in range, the sqlite3_keyword_name_APIName routine returns SQLITE_OK_API_constant, otherwise it returns SQLITE_ERROR_API_constant', 'if param be range , api return constant , otherwise return constant']
['The database handle must have no active statements', 'database handle must have no active']
['After successful input, the sqlite3_mutex_try_APIName interface returns SQLITE_OK_API_constant', 'after successful input , api return constant']
['At any given moment, there can only be one busy handler for a particular database connection', 'give moment , can only be one busy handler particular database connection']
['All operations that modify the database connection must be delayed until the sqlite3_step_APIName call that triggers the update hook is completed', 'operation modify database connection must be delay until api call be complete']
['The sqlite3_cancel_auto_extension_APIName routine returns 1', 'api return constant']
['Call the sqlite3_next_stmt_APIName database connection pointer sqlite3_next_stmt_APIParam_1 must refer to the open database connection, and cannot be a NULL pointer', 'call api database connection pointer param must refer open database connection , can not be null pointer']
['sqlite3_blob_close_APIName returns an error code and the transaction is rolled back', 'api return error code be roll back']
['After release, it should not read or write to memory', 'after release , should not read write memory']
['Aggregate SQL functions require the implementation of xStep and xFinal, and must pass a NULL pointer for xFunc', 'function require implementation , must pass null pointer']
['Any such action will result in undefined behavior', 'action result undefined behavior']
['sqlite3_value_frombind_APIName returns zero', 'api return constant']
['After at least "ms" milliseconds of sleep, the handler returns 0, which causes sqlite3_step_APIName to return SQLITE_BUSY_API_constant', 'after least ms millisecond , handler return , which api return constant']
['The result is uncertain', 'result be uncertain']
['The sqlite3_stmt_readonly_APIName interface returns true for BEGIN, but the BEGIN IMMEDIATE and BEGIN EXCLUSIVE commands do touch the database, so sqlite3_stmt_readonly_APIName returns false for these commands', 'api return constant begin , but begin immediate begin exclusive command touch database , api return constant command']
['Calls to sqlite3_blob_read_APIName and sqlite3_blob_write_APIName on the expired BLOB handle failed with return code SQLITE_ABORT_API_constant', 'call api expire handle fail return code constant']
['The input of sqlite3_complete_APIName must be a zero-terminated UTF-8 string', 'input api must be param string']
['sqlite3_prepare_v3_APIName differs from sqlite3_prepare_v2_APIName only in that it has an additional sqlite3_prepare_v3_APIParam_4, which is a bit array consisting of zero or more SQLITE_PREPARE_PERSISTENT, SQLITE_PREPARE_NORMALIZE and SQLITE_PREPARE_NO_VT', 'api differ api only have additional param which be bit array consist constant']
['Use the sqlite3_trace_v2_APIName interface instead of the routine described here', 'use api instead api describe']
['The sqlite3_result_text64_APIName interface sets the return value of the application-defined function to the text string in the encoding specified by the fifth parameter, which must be SQLITE_UTF8_API_constant, SQLITE_UTF16_API_constant, SQLITE_UTF16_API_constantBE or SQLITE_UTF16_API_constantLE', 'api set return value param function text string specify by fifth param , which must be constantbe constantle']
['The sqlite3_initialize_APIName interface is thread safe, but sqlite3_shutdown_APIName is not', 'api be thread safe , but api be not']
['It is recommended that when the database sqlite3_open_v2_APIParam_1 actually starts with the ":" character, a path name (eg "./") should be added in front of sqlite3_open_v2_APIParam_1 to avoid ambiguity.', 'be recommend database param actually start : character , path name . . should be add front param avoid']
['The third and fourth parameters of sqlite3_table_column_metadata_APIName are the table name and column name of the required column, respectively', 'third fourth param api be table name name require , respectively']
['sqlite3_unlock_notify_APIName always returns SQLITE_OK_API_constant', 'api always return constant']
['Before calling sqlite3_shutdown_APIName, all open database connections must be closed, and all other SQLite resources must be released.', 'before call api , open database connection must be close , resource must be release']
['The application must provide suitable implementations for sqlite3_os_init_APIName and sqlite3_os_end_APIName', 'application must provide suitable implementation api']
['sqlite3_mutex_enter_APIName will be blocked, and sqlite3_mutex_try_APIName will return SQLITE_BUSY_API_constant', 'api be block , api return constant']
['The sqlite3_win32_set_directory interface returns SQLITE_OK_API_constant to indicate success, if sqlite3_win32_set_directory_APIParam_1 does not support SQLITE_ERROR_API_constant, if it cannot allocate memory it returns SQLITE_NOMEM_API_constant', 'api return constant indicate success']
['sqlite3_malloc_APIName returns a NULL pointer', 'api return null pointer']
['sqlite3_blob_write_APIName returns SQLITE_OK_API_constant', 'api return constant']
['sqlite3_bind_parameter_name_APIName returns NULL', 'api return null']
['You should first call sqlite3_column_text_APIName, sqlite3_column_blob_APIName or sqlite3_column_text16_APIName to force the result to the required format, call sqlite3_column_bytes_APIName or sqlite3_column_bytes16_APIName to find the size of the result', 'PRON- should first call api force result require format , call api find size result']
['If sqlite3_value_dup_APIParam_1 is NULL or memory allocation fails, the sqlite3_value_dup_APIName interface returns NULL.', 'if param be null memory allocation fail , api return null']
['You can call the sqlite3_finalize_APIName routine at any time during the prepared statement S: before evaluating the statement sqlite3_finalize_APIParam_1, after making one or more calls to sqlite3_reset_APIName, or after making any calls to sqlite3_step_APIName, regardless of whether the statement has been executed .', 'PRON- can call api time during prepared : before evaluate param after make one call api , after make call api']
['sqlite3_vtab_nochange_APIName returns true, during which the column value will remain unchanged', 'api return constant , during which value remain unchanged']
['Unlock notification notification callback is not reentrant', 'callback be not reentrant']
['sqlite3_blob_open_APIName failed with SQLITE_ERROR_API_constant', 'api fail constant']
['The returned pointer is valid until type conversion occurs as described above, or until sqlite3_step_APIName or sqlite3_reset_APIName or sqlite3_finalize_APIName is called', 'return pointer be valid until type conversion occur as describe , until api be call']
['NULL pointer must be passed as sqlite3_create_function_APIParam_7 and sqlite3_create_function_APIParam_8', 'null pointer must be pass as param']
['However, the application must call sqlite3_initialize_APIName directly before using any other SQLite interface.', 'however , application must call api directly before use api']
['Soft heap limits are for reference only', 'soft limit be reference only']
['sqlite3_finalize_APIName returns SQLITE_OK_API_constant', 'api return constant']
['The busy handler must not close the database connection or prepared statement that called the busy handler', 'busy handler must not close database connection prepare call busy handler']
['Only the following subset of interfaces will have out of memory errors', 'only follow api have memory error']
['The new row must meet the same conditions as sqlite3_blob_open_APIName-the new row must exist and the blob or text value must be stored in the nominated column', 'must meet condition as param must exist text value must be store nominate']
['sqlite3_column_bytes16_APIName returns zero', 'api return constant']
['It is recommended to use SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION_API_constant method to enable this interface only', 'be recommend use constant api enable api only']
['sqlite3_wal_checkpoint_v2_APIName cannot obtain the lock and returns SQLITE_BUSY_API_constant', 'api can not obtain lock return constant']
['sqlite3_snapshot_get_APIName may also return SQLITE_NOMEM_API_constant', 'api may return constant']
['sqlite3_next_stmt_APIName returns NULL', 'api return null']
['Therefore, applications usually do not need to call sqlite3_initialize_APIName directly', 'therefore , application usually not need call api directly']
['Applications that care about shared cache settings should set it explicitly', 'application care share cache setting should set explicitly']
['The sqlite3_preupdate_depth_APIName interface returns 0', 'api return constant']
['Passing sqlite3_prepare16_v2_APIParam_3 parameter has a small performance advantage, the parameter is the number of bytes including nul-terminator in the input string', 'pass param have small performance , param be number byte include param input string']
['After running an INSERT, UPDATE or DELETE statement on the view, the value returned by sqlite3_changes_APIName is always zero', 'after run insert , , value return by api be always constant']
['If sqlite3_uri_parameter_APIParam_2 is a query parameter of sqlite3_uri_parameter_APIParam_1 without an explicit value, then sqlite3_uri_parameter_APIName returns a pointer to an empty string', 'if param be query param without explicit value , api return pointer empty string']
['sqlite3_create_collation_APIParam_3 sqlite3_create_collation_v2_APIParam_3 sqlite3_create_collation16_APIParam_3 must be one of SQLITE_UTF8, SQLITE_UTF16LE, SQLITE_UTF16BE, SQLITE_UTF16, SQLITE_UTF16_ALIGNED.', 'param must be one constant']
['It will return SQLITE_MISUSE_API_constant', 'return constant']
['The sqlite3_strglob_APIName interface returns zero', 'api return constant']
['The application must ensure that other threads will not call other SQLite interfaces', 'application must ensure thread not call api']
['The value returned by sqlite3_snapshot_cmp_APIName is undefined', 'value return by api be undefined']
['The second callback parameter is one of SQLITE_INSERT_API_constant, SQLITE_DELETE_API_constant or SQLITE_UPDATE_API_constant, depending on the operation that caused the callback to be called', 'second callback param be one constant , depend operation callback be call']
['sqlite3_finalize_APIName returns the appropriate error code or extended error code', 'api return appropriate error code extend error code']
['sqlite3_preupdate_depth_APIName interface returns 2', 'api return constant']
['The SQLite core will never use these routines unless inside the assert_APIName, and it is recommended that the application follow the core', 'never use api unless inside api , be recommend application follow']
['Then call sqlite3_get_auxdata_APIName to return NULL', 'call api return null']
['To execute an SQL statement, it must first be compiled into a bytecode program using one of the following routines', 'execute , must first be compile bytecode program use one follow api']
['As long as the input parameters are correct, these routines will only fail', 'as long as input param be correct , api only fail']
['For all new programs, it is recommended to use sqlite3_prepare_v2_APIName, sqlite3_prepare_v3_APIName, sqlite3_prepare16_v2_APIName and sqlite3_prepare16_v3_APIName interfaces', 'program , be recommend use api']
['sqlite3_vfs_find_APIName returns a NULL pointer', 'api return null pointer']
['sqlite3_column_database_name_APIName sqlite3_column_database_name16_APIName sqlite3_column_table_name_APIName sqlite3_column_table_name16_APIName sqlite3_column_origin_name_APIName sqlite3_column_origin_name16_APIName returns NULL', 'api return null']
['The flags parameter of sqlite3_open_v2_APIName can take one of the following three values \u200b\u200band can be combined with SQLITE_OPEN_NOMUTEX_API_constant, SQLITE_OPEN_FULLMUTEX_API_constant, SQLITE_OPEN_SHAREDCACHE_API_constant, SQLITE_OPEN_PRIVATECACHE_API_constant and/or SQLITE_OPEN_URI', 'flag param api can take one follow three value can be combine constant']
['sqlite3_column_decltype_APIName and sqlite3_column_decltype16_APIName will return the string "VARIANT" for the second result column and a NULL pointer for the first result column', 'api return stre variant second result null pointer first result']
['The callback function should use the sqlite3_create_collation_APIName, sqlite3_create_collation16_APIName or sqlite3_create_collation_v2_APIName to register the required collation', 'callback function should use api register require']
['If the value of the query parameter sqlite3_uri_boolean_APIParam_2 is in any case one of "yes", "true" or "on", or if the value starts with a non-zero, the sqlite3_uri_boolean_APIName routine returns true.', 'constant ,  start param api return constant']
['sqlite3_create_function_APIParam_7 and sqlite3_create_function_APIParam_8 must both be non-NULL', 'param must be param']
['xBestInde_APIParam_0 must be a sqlite3_index_info object, which is the first parameter of the xBestIndex_APIName method', 'param must be param , which be first param api']
['The value returned by sqlite3_column_type_APIName is only meaningful', 'value return by api be only meaningful']
['It is not safe to pass the sqlite3_free_table_APIParam_1 table directly to sqlite3_free_APIName', 'be not safe pass param table directly api']
['This interface is only available', 'api be only available']
["It must be an empty string or the string ``localhost''", 'must be empty string string localhost']
['You should not call sqlite3_step_APIName on this virtual machine again before calling sqlite3_reset_APIName to reset the virtual machine back to its initial state', 'PRON- should not call api virtual machine before call api reset virtual machine back initial state']
['May cause crashes or deadlocks', 'may crash']
['If malloc_APIName fails, sqlite3_bind_value_APIName returns SQLITE_NOMEM_API_constant', 'if api fail , api return constant']
['SQLITE_ERROR_API_constant is returned by sqlite3_snapshot_get_APIName', 'constant be return by api']
['Call sqlite3_db_config_APIName returns SQLITE_OK_API_constant', 'call api return constant']
['sqlite3_column_name_APIName returns a NULL pointer', 'api return null pointer']
['The index of the first host parameter is 1, not 0', 'index first host param be , not constant']
['sqlite3_bind_parameter_index_APIName returns zero', 'api return constant']
['The sqlite3_str_errcode_APIName method returns SQLITE_NOMEM_API_constant after any out-of-memory errors; if the size of the dynamic string exceeds SQLITE_MAX_LENGTH, then SQLITE_TOOBIG_API_constant; if there are no errors, SQLITE_OK_API_constant', 'api return constant after param error']
['sqlite3_bind_pointer_APIParam_5 is a NULL pointer or a pointer to the destructor of sqlite3_bind_pointer_APIParam_3', 'param be null pointer pointer param']
['sqlite3_db_mutex_APIName returns a NULL pointer', 'api return null pointer']
['Busy handler is not reentrant', 'busy handler be not reentrant']
['The name of the database or table or column can be returned as a UTF-8 or UTF-16 string', 'name database table can be return as param string']
['The sqlite3_bind_ routine returns SQLITE_OK_API_constant on success, and returns an error code if any errors occur', 'param api return constant success , return error code']
['If sqlite3_aggregate_context_APIParam_2 is less than or equal to zero, or a memory allocation error occurs, the sqlite3_aggregate_context_APIName routine will return a NULL pointer on the first call.', 'memory allocation error occur , api return null pointer first call']
['The routine returns SQLITE_OK_API_constant', 'api return constant']
['The resulting string will contain embedded NUL, and the result of the expression that operates on the string with embedded NUL is undefined', 'result string contain embed nul , result operate stre embed nul be undefined']
['Do not mix calls to sqlite3_column_text_APIName or sqlite3_column_blob_APIName with calls to sqlite3_column_bytes16_APIName, and do not mix calls to sqlite3_column_text16_APIName with calls to sqlite3_column_bytes_APIName', 'not mix call api call api , not mix call api call api']
['After making any subsequent method calls on the same object, the application must not use the pointer returned by sqlite3_str_value_APIName', 'after make subsequent api call object , application must not use pointer return by api']
['This interface sqlite3_deserialize_APIName is only available', 'api be only available']
['The application tries to use the prepared statement after completion, which is a serious error', 'application try use prepared after , which be serious error']
['The behavior of this routine is undefined and may be undesirable', 'behavior api be undefined may be undesirable']
['According to the calling method of the SQL CONFIGICT mode of the ON CONFLICT mode of the virtual table call method that triggered the SQL table update, the values \u200b\u200breturned by sqlite3_vtab_on_conflict_APIName are SQLITE_ROLLBACK_API_constant, SQLITE_IGNORE_API_constant, SQLITE_FAIL_API_constant, one of SQLITE_ABORT_API_constant or SQLITE_REPL.', 'accord call api configict mode mode virtual table call api table , value return by api be constant , one constant']
['Therefore, the sqlite3_column_value_APIName interface is usually only useful in the implementation of application-defined SQL functions or virtual tables, but not in top-level application code', 'therefore , api be usually only useful implementation param function virtual table , but not param application code']
['The input of sqlite3_complete16_APIName must be a zero-terminated UTF-16 string in local byte order', 'input api must be param stre local byte order']
['sqlite3_column_decltype16_APIName returns a NULL pointer', 'api return null pointer']
['The only way to find out if SQLite automatically rolls back a transaction after an error is to use sqlite3_get_autocommit_APIName', 'only way find']
['The calling function should free this memory by calling sqlite3_free_APIName', 'call function should free memory by call api']
['NNN value must be between 1 and sqlite3_limit_APIName parameter SQLITE_LIMIT_VARIABLE_NUMBER_API_constant', 'value must be constant api param constant']
['The sqlite3_exec_APIName routine returns SQLITE_ABORT_API_constant without calling the callback again or running any subsequent SQL statements', 'api return constant without call callback run subsequent']
['Whenever the caller is ready to process a new data row, it will return SQLITE_ROW_API_constant', 'whenever caller be ready process datum , return constant']
['The sqlite3_db_status_APIName routine returns SQLITE_OK_API_constant on success and non-zero error code on failure', 'api return constant success param error code failure']
['The caller is responsible for releasing sqlite3_serialize_APIParam_0 to avoid memory leak', 'caller be responsible releasing param avoid memory leak']
['Processing was abandoned, sqlite3_db_cacheflush_APIName immediately returned the SQLite error code to the caller', 'processing be abandon , api immediately return error code caller']
['The sqlite3_realloc64_APIName interface is the same as sqlite3_realloc_APIName, except that sqlite3_realloc_APIParam_2 is a 64-bit unsigned integer, not a 32-bit signed integer', 'api be as api , except param be param unsigned integer , not param sign integer']
['SQLITE_OK_API_constant is returned by sqlite3_open_APIName', 'constant be return by api']
['The sqlite3_get_auxdata_APIName interface returns a NULL pointer', 'api return null pointer']
['The default encoding for databases created with sqlite3_open16_APIName is UTF-16 (native byte order)', 'default encode database create api be param byte order']
['sqlite3_str_append_APIParam_2 must contain at least non-zero bytes of sqlite3_str_append_APIParam_3', 'param must contain least param byte param']
['These routines return 1', 'api return constant']
['The second parameter must be the index of the aConstraint array, which belongs to the sqlite3_index_info structure passed to xBestIndex', 'second param must be index array , which belong param pass']
['Database connection must not be in auto-commit mode', 'database connection must not be param mode']
['Moving an existing BLOB handle to a new line is faster than closing the existing handle and opening the new handle.', 'move exist handle line be faster close exist handle opening handle']
['sqlite3_reset_APIName returns SQLITE_OK_API_constant', 'api return constant']
['For security reasons, it is recommended to use the SQLITE_DIRECTONLY_API_constant flag for any application-defined SQL function with side effects', 'security reason , be recommend use constant flag param function side effect']
['This routine only checks if the table exists and returns SQLITE_ERROR_API_constant', 'api only check']
['Only use the built-in memory allocator', 'only use param memory']
['Even reading previously freed memory may cause segmentation faults or other serious errors', 'even read previously free memory may serious error']
['All subsequent calls to sqlite3_blob_read_APIName, sqlite3_blob_write_APIName or sqlite3_blob_reopen_APIName on the interrupted Blob handle will immediately return SQLITE_ABORT_API_constant', 'subsequent call api interrupt handle immediately return constant']
['Before another thread can enter, the mutex must exit the same number of times', 'before another thread can enter , mutex must exit number time']
['Collation is no longer available', 'be no longer available']
['The progress handler callback must not do anything that would modify the database connection that called the progress handler', 'progress handler callback must not anything would modify database connection call progress handler']
['Applications that call sqlite3_create_collation_v2_APIName with non-NULL xDestroy parameters should check the return code and handle the application data pointers themselves, instead of expecting SQLite to handle them for them', 'application call api param should check return code handle application datum pointer , instead expect handle']
['However, the best practice is to avoid using keywords as identifiers', 'however , good practice be avoid use as identifier']
['After releasing an application using sqlite3_free_APIName or sqlite3_realloc_APIName, the application must not read or write to any part of the memory block', 'after release application use api , application must not read write part memory block']
['All operations that modify the database connection must be delayed until after the sqlite3_step_APIName call that first triggers the commit or rollback hook is completed', 'operation modify database connection must be delay until after api call first commit rollback be complete']
['The sqlite3_snapshot_open_APIName interface returns SQLITE_OK_API_constant when successful, and returns an appropriate error code if it fails', 'api return constant successful , return appropriate error code']
['For all SQLite versions 3.6.23.1 and below, before sqlite3_step_APIName is subsequently called, after sqlite3_step_APIName returns a value other than SQLITE_ROW_API_constant, sqlite3_reset_APIName needs to be called.', 'version constant , before api be subsequently call , after api return value constant , api need be call']
['The value returned by sqlite3_last_insert_rowid_APIName is unpredictable and may not be equal to the old or new last inserted row ID', 'value return by api be unpredictable may not be equal old last insert -PRON- would']
['The implementation of sqlite3_os_init_APIName or sqlite3_os_end_APIName provided by the application must return SQLITE_OK_API_constant when successful, and some other error codes should be returned when it fails', 'implementation api provide by application must return constant successful , error code should be return fail']
['The application must complete all prepared statements', 'application must complete prepared']
['sqlite3_stmt_readonly_APIName interface returns true', 'api return constant']
['Busy callbacks should not take any measures to modify the database connection that calls the busy handler', 'busy callback should not take measure modify database connection call busy handler']
['SQLITE_LOCKED_API_constant is returned by sqlite3_unlock_notify_APIName, and no unlock notification callback is registered', 'constant be return by api , no callback be register']
['SQLITE_ERROR_API_constant is returned by sqlite3_blob_read_APIName, and no data is read', 'constant be return by api , no data be read']
['The first parameter must be a copy of the SQL function context, the copy is the first parameter of the xStep or xFinal callback routine that implements the aggregate function', 'first param must be copy function context , copy be first param callback api implement function']
['The result of the comparison is uncertain', 'result comparison be uncertain']
['Static mutex is for internal use of SQLite only', 'static mutex be internal use only']
['The underlying xFileControl method may also return SQLITE_ERROR_API_constant', 'underlie api may return constant']
['If the string ends with NULL, it must be the byte offset in the string where the NULL terminator appears', 'if string end null , must be byte stre null appear']
['The sqlite3_enable_load_extension_APIName interface should be avoided', 'api should be avoid']
['The authorizer callback must not do anything that would modify the database connection that called the authorizer callback', 'callback must not anything would modify database connection call callback']
['If the database sqlite3_db_readonly_APIParam_2 connected to sqlite3_db_readonly_APIParam_1 is read-only, the sqlite3_db_readonly_APIName interface returns 1, if it is readable/writeable, it returns 0, if sqlite3_db_readonly_APIParam_2 is not the name of the database connected to sqlite3_db_readonly_APIParam_2, it returns -1.', 'if database param connect param be param api return , if is , return , if param be not name database connected param return constant']
['Then the call will return SQLITE_MISUSE_API_constant.', 'call return constant']
["The module name must be registered before using the module to create a new virtual table and before using the module's existing virtual table", 'module name must be register before use module create virtual table before use module exist virtual table']
['The return value is uncertain', 'return value be uncertain']
['Otherwise, sqlite3_blob_read_APIName returns an error code or extended error code', 'otherwise , api return error code extend error code']
['Otherwise, sqlite3_blob_open_APIName returns an error code', 'otherwise , api return error code']
['There is no memory allocation, and the sqlite3_serialize_APIName function will return a pointer to the continuous memory representation of the database that SQLite is currently using for the database; if there is no continuous memory representation of the database, NULL is returned', 'be no memory allocation , api function return pointer continuous memory representation database be currently use database ;  , null be return']
['The SQL functions defined by the application must be added to each database connection separately', 'function api by application must be add database connection separately']
['The sqlite3_snapshot_open_APIName interface is only available', 'api be only available']
['The sqlite3_cancel_auto_extension_APIName routine returns 0', 'api return constant']
['sqlite3_column_origin_name_APIParam_0 remains in effect until the prepared statement is destroyed using sqlite3_finalize_APIName, or until the first call to sqlite3_step_APIName for a specific run and the statement is automatically prepared again, or until the same information is requested again with a different encoding', 'param remain effect until prepared be destroy use api , until first call api specific run be automatically prepare , until information be request different']
['To delete an existing SQL function or aggregate, pass a NULL pointer for all three function callbacks', 'exist function , pass null pointer three function callback']
['The temporary directory must be set before calling sqlite3_open_APIName or sqlite3_open_v2_APIName', 'temporary directory must be set before call api']
['It returns a NULL pointer', 'return null pointer']
['These interfaces are only available', 'api be only available']
['The sqlite3_open_APIName and sqlite3_open_v2_APIName sqlite3_open_APIParam_1 parameters must use UTF-8 instead of any code page currently defined', 'api param must use param instead code page currently api']
['These interfaces are only available on Windows', 'api be only available window']
['Do not pass pointers returned from sqlite3_column_blob_APIName, sqlite3_column_text_APIName, etc.', 'not pass pointer return api , etc']
['The pointer returned by the previous call to sqlite3_column_blob_APIName, sqlite3_column_text_APIName and/or sqlite3_column_text16_APIName may be invalid', 'pointer return by previous call api may be invalid']
['Otherwise, sqlite3_blob_write_APIName returns an error code or extended error code', 'otherwise , api return error code extend error code']
['Then SQLlite_ERROR_API_constant is returned by sqlite3_file_control_APIName', 'constant be return by api']
['Otherwise, if the snapshot referenced by P1 is earlier than P2, this API returns a negative value; if two handles refer to the same database snapshot, this API returns zero; if P1 is a higher snapshot than P2, the API returns a positive value .', 'otherwise , if snapshot reference by be early , api return negative value ; if two handle refer database snapshot , api return constant ; if be high snapshot , api return positive value']
['The strings returned by these two routines should be released by sqlite3_free_APIName', 'string return by two api should be release by api']
['No longer provide this feature', 'no longer provide feature']
['The sqlite3_initialize_APIName routine returns SQLITE_OK_API_constant on success', 'api return constant success']
['sqlite3_last_insert_rowid_APIName returns zero', 'api return constant']
['This routine must be called from the same thread running the application-defined function sqlite3_user_data_APIName', 'api must be call thread run param function api']
['If any errors are encountered during the construction of the string, the sqlite3_str_finish_APIName interface may return a NULL pointer', 'api may return null pointer']
['The collation function must return a negative, zero or positive integer', 'function must return negative , constant positive integer']
['You can distinguish valid SQL NULL returns from out-of-memory errors by calling sqlite3_errcode_APIName immediately after obtaining the suspicious return value and before calling any other SQLite interface on the same database connection', 'PRON- can distinguish valid null return param error by call api immediately after obtain suspicious return value before call api database connection']
['The routine should return 1', 'api should return constant']
['SQLITE_OK_API_constant is returned by sqlite3_wal_checkpoint_v2_APIName, and both pnLog and pnCkpt are set to -1', 'constant be return by api , be set constant']
['The memory containing the error message string is managed internally, and the application must not release the memory', 'memory contain error message string be manage internally , application must not release memory']
['The third parameter of the preupdate callback is one of the constants SQLITE_INSERT_API_constant, SQLITE_DELETE_API_constant or SQLITE_UPDATE_API_constant, which is used to identify the type of update operation that is about to occur', 'third param callback be one constant , which be use identify type operation occur']
['sqlite3_str_append_APIParam_3 must be non-negative', 'param must be param']
['Behavior is uncertain', 'behavior be uncertain']
['If the value sqlite3_value_frombind_APIParam_1 originates from one of the sqlite3_bind_APIName interfaces, the sqlite3_value_frombind_APIName interface returns non-zero.', 'if value param originate one api return param']
['Both sqlite3_create_window_function_APIParam_8 and sqlite3_create_window_function_APIParam_9 can be NULL (in this case, create a regular aggregate function), or both must be non-NULL, in which case, the new function can be used as an aggregate or aggregate window function', 'param can be null case , create regular function . , must be param which case , function can be use as window function']
['The N parameter must be between 0 and 1 less than the number of columns, otherwise the behavior will be undefined', 'param must be constant less number , otherwise behavior be undefined']
['However, sqlite3_stmt_readonly_APIName will still return true', 'however , api still return constant']
['Please note that when sqlite3_strglob_APIName matches, it returns zero, non-zero, the same as sqlite3_stricmp_APIName and sqlite3_strnicmp_APIName', 'please api match , return constant , param as api']
['The sqlite3_malloc64_APIName routine is the same as sqlite3_malloc_APIName, except that sqlite3_malloc_APIParam_1 is an unsigned 64-bit integer, not a signed 32-bit integer', 'api be as api , except param be unsigned param integer , not sign param integer']
['The value of the sqlite3_get_auxdata_APIParam_2 parameter of these interfaces should be non-negative', 'value param api should be param']
['This API sqlite3_stmt_scanstatus_reset_APIName is only available', 'api be only available']
['The sqlite3_uri_boolean_APIName routine assumes that sqlite3_uri_boolean_APIParam_2 is a boolean parameter and returns true or false based on the value of sqlite3_uri_boolean_APIParam_2.', 'api assume param be boolean param return constant base value param']
['sqlite3_bind_text64_APIParam_6 must be one of SQLITE_UTF8_API_constant, SQLITE_UTF16_API_constant, SQLITE_UTF16_API_constantBE or SQLITE_UTF16_API_constantLE to specify the encoding of the text in the third parameter', 'param must be one constantbe constantle specify encode text third param']
['Applications should never call sqlite3_os_init_APIName or sqlite3_os_end_APIName directly', 'application should never call api directly']
['sqlite3_uri_int64_APIName returns zero', 'api return constant']
['The memory pointed to by the character pointer returned for the declaration type and collation sequence remains valid until the next call to any SQLite API function', 'memory point by character pointer return declaration type sequence remain valid until next call api function']
['The sqlite3_close_v2_APIParam_1 parameter of sqlite3_close_APIName and sqlite3_close_v2_APIName must be a NULL pointer or a sqlite3 object pointer obtained from sqlite3_open_APIName, sqlite3_open16_APIName or sqlite3_open_v2_APIName, and has not been closed before', 'param api must be null pointer object pointer obtain api , have not be close before']
['The sqlite3_snapshot object returned by a successful call to sqlite3_snapshot_get_APIName must be released using sqlite3_snapshot_free_APIName to avoid memory leaks', 'param return by successful call api must be release use api avoid memory leak']
