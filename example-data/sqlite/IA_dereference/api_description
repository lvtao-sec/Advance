sqlite3 unk interface be convenience wrapper
bind sqlite3_stmt sql statement text input sqlite3_prepare_v2_apiname variant , literal be replace by paramet match one follow template : template above , nnn represent integer literal , vvv represent alphanumeric identifier
use sqlite3_compileoption_used_apiname function return # or # indicate whether specified option be define compile time
sqlite3 sqlite3_db_config_apiname interface be use make configuration change database connection
sqlite3_str sqlite3 sqlite3_str_new_apiname interface allocate initialize sqlite3_str object
sqlite3 sqlite3_table_column_metadata routine return information about column c table t database d database connection x
sqlite3_stmt sqlite3_reset_apiname function be call reset prepared statement object back initial state , ready be re_execut
sqlite3_strglob_apiname interface return zero if only if string x match glob pattern p. definition glob pattern matching use sqlite3_strglob_apiname be as x glob p operator sql dialect understand by sqlite
extended sqlite3 sqlite3_extended_result_codes_apiname routine enable or disable extended result code feature sqlite
sqlite3_context implementation aggregate sql function routine allocate memory store first time sqlite3_aggregate_context_apiname routine be call particular aggregate function , sqlite allocate n memory , zero out memory , return pointer memory
sqlite contain high_quality pseudo_random number generator use select random rowid when insert record into table already use large possible rowid
use sqlite provide two interface report status sqlite3_malloc_apiname , sqlite3_free_apiname , sqlite3_realloc_apiname routine , which form built_in memory allocation sqlite3_memory_used_apiname routine return number byte memory currently outstanding malloce but free
sqlite3_stmt interface return information about predict measured performance sqlite3_stmt_scanstatus_apiparam_1
routine be useful during command_line input determine if currently enter text seem form complete sql statement or if additional input be need before send text into sqlite parsing
sqlite3 interface allow size various construct be limit connection by connection basis
sqlite3_mutex sqlite3 interface return pointer sqlite3_mutex object serialize access database connection give argument when thread mode be serialize
sqlite3_stmt sqlite3_sql_apiname interface return pointer copy utf_8 sql text use create prepare statement p if p be create by sqlite3_prepare_v2_apiname , sqlite3_prepare_v3_apiname , sqlite3_prepare16_v2_apiname , or sqlite3_prepare16_v3_apiname
sqlite3_test_control_apiname interface be use read out internal state sqlite inject fault into sqlite testing purpose
sqlite3_stmt each prepared statement maintain various sqlite_stmtstatus counter measure number time have perform specific operation
sqlite core use three routine internal memory allocation need
sqlite3_soft_heap_limit64_apiname interface set query soft limit amount heap memory be allocate by sqlite
sqlite3_value sqlite3_value_dup_apiname interface make copy sqlite3_value object d return pointer copy
sqlite3_stmt zero sqlite3_stmt_scanstatus_apiname related event api be only available if library be build pre_processor symbol sqlite_enable_stmt_scanstatus define
sqlite3 interface be only available if sqlite be compile use sqlite_enable_preupdate_hook compile_time sqlite3_preupdate_hook_apiname interface register callback function be invoke prior each insert , update , delete operation database table
register sqlite3_vfs virtual filesystem be sqlite3_vf object sqlite us interact underlie operating system
get sqlite3_context function be use by sql function associate metadata argument value
interface be use retrieve runtime status information about performance sqlite , optionally reset various highwater mark
sqlite3_stmt sqlite3_data_count_apiname interface return number column current row result set prepared statement p. if prepare statement p do have result ready return then sqlite3_data_count_apiname return #
sqlite3_index_info sqlite3_vtab_collation_apiname only be call within call xbestindex method virtual first argument must be sqlite3_index_info object be sqlite3_vtab_collation_apiparam_1 xbestindex_apiname method
sqlite3 sqlite3_changes_apiname return number row modify , insert or delete by most recently complete insert , update or delete statement database connection specify by only parameter
sqlite3_config_apiname interface be use make global configuration change sqlite order tune sqlite specific need application
write unk sqlite3_blob_write_apiname be use write datum into open blob handle caller_supplied buffer
be utility routine , useful vfs implementation , check see if database file be uri contain specific query paramet , if so obtain value query f be database filename pointer pass into xopen_apiname method vfs implementation when flag paramet xopen_apiname have one or more sqlite_open_uri or sqlite_open_main_db bit set p be name query paramet , then sqlite3_uri_parameter_apiname return value p parameter if exist or null pointer if p do appear as query parameter f. if p be query paramet f have no explicit value , then sqlite3_uri_parameter_apiname return pointer empty sqlite3_uri_boolean_apiname routine assume p be boolean paramet return true or false accord value p. sqlite3_uri_boolean_apiname routine return true if value query paramet p be one yes , true , or case or if value begin non_zero number
interface disable automatic extension previously register use sqlite3_auto_extension_apiname
sqlite3_value sqlite3_value_subtype_apiname function return subtype unk sql function argument v. subtype information can be use pass limited amount context one sql function another
sqlite3_stmt return number column result set return by prepared statement
unk sqlite3_stmt sqlite3_stmt_readonly_apiname interface return true if only if prepare statement x make no direct change content database unk sql function or virtual table may change database indirectly as side effect
sqlite3_stmt sqlite3_stmt_busy_apiname interface return true if prepared statement s have step least once use sqlite3_step_apiname but have neither run completion nor reset use sqlite3_reset_apiname
bind sqlite3_stmt routine can be use find number sql parameter prepare statement
sqlite3 sqlite3_drop_modules_apiname interface remove virtual table module database connection d except name list l. l parameter must be either null or pointer array pointer string where array be terminate by single null pointer
routine be work_alikes printf_apiname family function standard c library
sqlite3 sqlite3_wal_checkpoint_v2_apiname interface run checkpoint operation database x database connection d mode m. status information be write back into integer point by l c. m parameter must be valid checkpoint mode : if sqlite3_wal_checkpoint_v2_apiparam_4 be null , then pnlog be set total number frame log file or # if checkpoint could run because error or because database be wal mode
sqlite3_sleep_apiname function cause current thread suspend execution least number millisecond specify operating system do support sleep request millisecond time resolution , then time be round up nearest second
serialize sqlite3 sqlite3_serialize_apiname interface return pointer memory be serialization s database database connection d. if p be null pointer , then size database byte be write into p ordinary on_disk database file , serialization be just copy disk file
get sqlite3 be legacy interface be preserve backwards compatibility
hold sqlite3_mutex sqlite3_mutex_held_apiname sqlite3_mutex_notheld_apiname routine be intend inside assert_apiname statement
sqlite3 virtual table can provide alternative implementation function use xfindfunction method virtual table module
sqlite3 interface load sqlite extension library name sqlite3_load_extension_apiname interface attempt load sqlite extension library contain file sqlite3_load_extension_apiparam_2
sqlite3 sqlite3_wal_autocheckpoint_apiname be wrapper around sqlite3_wal_hook_apiname cause database database connection d automatically checkpoint after commit transaction if be sqlite3_wal_autocheckpoint_apiparam_2 or more frame write_ahead log file
reopen unk sqlite3_blob_reopen_apiname be use move exist blob handle so point different row database table
sqlite3 interface be use retrieve runtime status information about single database connection
sqlite3 sqlite3_total_changes_apiname return total number row insert , modify or delete by insert , update or delete statement complete since database connection be open , include execute as part trigger program
unk return size byte blob accessible via successfully open blob handle only argument
set sqlite3 sqlite3_set_last_insert_rowid method allow application set value return by call sqlite3_last_insert_rowid_apiname r without insert row into database
sqlite3 sqlite3_db_filename_apiname interface return pointer filename associate database n connection d. main database file have name main
sqlite3_str sqlite3_str_finish_apiname interface destroy sqlite3_str object x return pointer memory buffer obtain sqlite3_malloc64_apiname contain construct string
sqlite3_stmt routine return name assign particular column result set select statement
result unsigned sqlite3_context sqlite3_result_subtype_apiname function cause subtype result unk sql function sqlite3_context c be value t. only low # bit subtype t be preserve current version sqlite ; high order bit be discard
close sqlite3 sqlite3_close_apiname sqlite3_close_v2_apiname routine be destructor sqlite3 object
get sqlite3_snapshot sqlite3 sqlite3_snapshot_get_apiname interface attempt make sqlite3_snapshot object record current state schema s database connection d. success , sqlite3_snapshot_get_apiname interface write pointer newly create sqlite3_snapshot object into p return sqlite_ok
sqlite3 sqlite3_vtab_config_apiname be call by either xconnect or xcreate method virtual table implementation configure various facet virtual table interface be invoke outside context xconnect or xcreate virtual table method then behavior be present , be only one option be configure use sqlite3_vtab_config_apiname
sqlite3_str interface add content sqlite3_str object previously obtain sqlite3_str_appendf sqlite3_str_vappendf_apiname interface use built_in printf functionality sqlite append format text onto end sqlite3_str object x sqlite3_str_append_apiname method append exactly n byte stre s onto end sqlite3_str object x. n must be non_negative
initialize sqlite3_initialize_apiname routine initialize sqlite library
sqlite3_stmt sqlite3_stmt_isexplain_apiname interface return # if prepare statement s be explain statement , or # if statement s be explain query plan
unk sqlite3 sqlite3_db_readonly_apiname interface return # if database n connection d be read_only , # if be , or # if n be name database connection d
routine provide access set sql language keyword recognize by sqlite
handle sqlite3 sqlite3_stmt sqlite3_db_handle interface return database connection handle which prepare statement belong
unk sqlite3 interface open handle blob locate row sqlite3_blob_open_apiparam_5 , column sqlite3_blob_open_apiparam_4 , table sqlite3_blob_open_apiparam_3 database sqlite3_blob_open_apiparam_2 ; other word , blob would be select by : paramet sqlite3_blob_open_apiparam_2 be filename contain database , but rather symbolic name database
bind sqlite3_stmt return index sql paramet give name
finalize sqlite3_stmt sqlite3_finalize_apiname function be call delete prepared statement
set unsigned long interface be available only window
handle sqlite3 sqlite3_context sqlite3_context_db_handle_apiname interface return copy pointer database connection sqlite3_create_function_apiname sqlite3_create_function16_apiname routine originally register application define function
sqlite3_context if sqlite3_vtab_nochange_apiname routine be call within xcolumn method virtual table , then return true if only if column be fetch as part update operation during which column value change
create unk unk sqlite3 routine be use register virtual table module name
bind sqlite3_stmt sqlite3_bind_parameter_name_apiname interface return name n_th sql paramet prepare statement p. sql parameter form nnn or : aaa or aaa or aaa have name which be stre nnn or : aaa or aaa or aaa respectively
sqlite3_stmt after prepared statement have prepare use sqlite3_prepare_v2_apiname , sqlite3_prepare_v3_apiname , sqlite3_prepare16_v2_apiname , or sqlite3_prepare16_v3_apiname or one legacy interface sqlite3_prepare_apiname or sqlite3_prepare16_apiname , sqlite3_step_apiname must be call one or more time evaluate detail behavior sqlite3_step_apiname interface depend whether statement be prepare use new vx interface sqlite3_prepare_v3_apiname , sqlite3_prepare_v2_apiname , sqlite3_prepare16_v3_apiname , sqlite3_prepare16_v2_apiname or old legacy interface sqlite3_prepare_apiname sqlite3_prepare16_apiname
sqlite3_snapshot sqlite3_snapshot sqlite3_snapshot_cmp interface be use compare age two valid snapshot two snapshot handle be associate database file , result comparison be , result comparison be only valid if both snapshot handle be obtain by call sqlite3_snapshot_get_apiname since last time wal file be delete
sqlite3 each entry most sqlite table have unique 64_bit sign integer key call rowid
close unk sqlite3_blob_close_apiname close open blob handle
sqlite3_stmt every case first argument be pointer prepare statement be evaluate second argument be index column which information should be return
get sqlite3 sqlite3_get_autocommit_apiname interface return non_zero or zero if give database connection be or be autocommit mode , respectively
sqlite3_stmt contrary intuition many , sqlite3_reset_apiname do reset binding prepare statement
declare sqlite3 xcreate xconnect method virtual table module call interface declare format virtual table implement
sqlite3_release_memory_apiname interface attempt free n byte heap memory by deallocate non_essential memory allocation hold by database library
sqlite3_context sqlite3_user_data_apiname interface return copy pointer be puserdata paramet sqlite3_create_function_apiname sqlite3_create_function16_apiname routine originally register application define routine must be call thread which application_defined function be run
enable sqlite3 so as open security hole old application be unprepared deal extension loading , as mean disable extension loading while evaluate user_entered sql , follow api be provide turn sqlite3_load_extension_apiname mechanism loading be off by default
sqlite3_snapshot sqlite3 sqlite3_snapshot_open_apiname interface either start read transaction or upgrade exist one schema s database connection d such read transaction refer historical snapshot p , rather than most recent change database
sqlite3_stricmp_apiname sqlite3_strnicmp_apiname api allow application extension compare content two buffer contain utf_8 string case_independent fashion , use definition case independence sqlite us internally when compare identifier
enter sqlite3_mutex sqlite core use routine thread synchronization
sqlite3_str interface return current status sqlite3_str prior error have occur while construct dynamic string sqlite3_str x , then sqlite3_str_errcode_apiname method return appropriate error code
interface provide information as sqlite_version , sqlite_version_number , sqlite_source_id c preprocessor macro but be associate library instead header file
sqlite3 routine open sqlite database file as specify by filename argument
sqlite3_stmt routine provide mean determine database , table , table column be origin particular result column select statement
sqlite3 sqlite3_file_control_apiname interface make direct call xfilecontrol method sqlite3_io_method object associate particular database identify by sqlite3_file_control_apiparam_2
sqlite3 attempt return underlie operating system error code or error number cause most recent error or failure open file
sqlite3 if write_transaction be open database connection d when sqlite3_db_cacheflush_apiname interface invoke , dirty page pager_cache be currently be write out disk
sqlite3_stmt sqlite3 execute sql statement , must first be compile into byte_code program use one routine
sqlite3_strlike_apiname interface return zero if only if string x match like pattern p escape character e. definition like pattern matching use sqlite3_strlike_apiname be as x like p escape e operator sql dialect understand by sqlite
read unk sqlite3_blob_read_apiname be use read datum open blob handle into caller_supplied buffer
sqlite3 routine set busy handler sleep specify amount time when table be lock
sqlite3 sqlite3_db_release_memory_apiname interface attempt free as much heap memory as possible database connection d. unlike sqlite3_release_memory_apiname interface , interface be effect even when sqlite_enable_memory_management compile_time option be : sqlite3_release_memory_apiname
recover sqlite3 if wal file remain disk after database connection close connection be subsequently open database wal file , sqlite3_snapshot_open_apiname interface only be able open last transaction add wal file even though wal file contain other valid attempt scan wal file associate database sqlite3_snapshot_recover_apiparam_2 database handle sqlite3_snapshot_recover_apiparam_1 make valid snapshot available sqlite3_snapshot_open_apiname
sqlite3_snapshot sqlite3_snapshot_free_apiname interface destroy sqlite3_snapshot p. application must eventually free every sqlite3_snapshot object use routine avoid memory sqlite3_snapshot_free_apiname interface be only available when sqlite_enable_snapshot compile_time option be use
sqlite3 sqlite3_wal_checkpoint_apiname be equivalent sqlite3_wal_checkpoint_v2 brief , sqlite3_wal_checkpoint_apiname cause content write_ahead log database x database connection d be transfer into database file write_ahead log be reset
sqlite3_value protect sqlite3_value object be use pass paramet information into implementation unk sql function virtual routine work only protect sqlite3_value object
unsigned sqlite3 sqlite3_deserialize_apiname interface cause database connection d disconnect database s then reopen s as in_memory database base serialization contain p. serialize database p be n byte size
threadsafe sqlite3_threadsafe_apiname function return zero if only if sqlite be compile mutexe code omit due sqlite_threadsafe compile_time option set 0 can be compile or without mutexe
sqlite3 sqlite3_vtab_on_conflict_apiname only be call within call xupdate method virtual table implementation insert or update operation
sqlite3 if most recent sqlite3 api call associated database connection d fail , then sqlite3_errcode_apiname interface return numeric result code or extended result code api call
result sqlite3_context routine be use by xfunc or xfinal callback implement sql function aggregate
sqlite3_stmt sqlite3_stmt sqlite3 interface return pointer next prepared statement after sqlite3_next_stmt_apiparam_2 associated database connection sqlite3_next_stmt_apiparam_1
sqlite3_stmt first parameter be prepare statement
sqlite3_log_apiname interface write message into error log establish by sqlite_config_log option sqlite3_config_apiname
enable share routine enable or disable share database cache schema datum structure between connection database
sqlite3 sqlite3_interrupt_apiname cause pende database operation abort return early opportunity
