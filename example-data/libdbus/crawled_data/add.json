{"sent": "that is, you recurse into the array, and then you call dbus_message_iter_get_fixed_array_APIName_APIName on the \"sub-iterator\" created by dbus_message_iter_recurse_APIName", "key": "dbus_message_iter_get_fixed_array", "cond": "null", "paraph": "Reads a block of fixed-length values from the message iterator. Fixed-length values are those basic types that are not string-like, such as integers, bool, double. dbus_message_iter_get_fixed_array_APIParam_0 will be from the current position in the array until the end of the array. There is one exception here: although DBUS_TYPE_UNIX_FD is considered a 'fixed' type arrays of this type may not be read with this function. The message dbus_message_iter_get_fixed_array_APIParam_1 should be \"in\" the array (that is, you recurse into the array, and then you call dbus_message_iter_get_fixed_array_APIName_APIName on the \"sub-iterator\" created by dbus_message_iter_recurse_APIName ). The dbus_message_iter_get_fixed_array_APIParam_2 argument should be the address of a location to store dbus_message_iter_get_fixed_array_APIParam_0. So for int32 it should be a \"const dbus_int32_t**\" dbus_message_iter_get_fixed_array_APIParam_0 dbus_message_iter_get_fixed_array_APIParam_2 is by reference and should not be freed. dbus_message_iter_get_fixed_array_APIName should only be used if dbus_type_is_fixed_APIName returns TRUE for the element type. If an array elements are not fixed in size, you have to recurse into the array with dbus_message_iter_recurse_APIName and read the elements one by one. Because the array is not copied, dbus_message_iter_get_fixed_array_APIName runs in constant time and is fast; it is much preferred over walking the entire array with an iterator. (However, you can always use dbus_message_iter_recurse_APIName , even for fixed-length types; dbus_message_iter_get_fixed_array_APIName_APIName is just an optimization.) dbus_message_iter_get_fixed_array_APIParam_1 is the iterator. dbus_message_iter_get_fixed_array_APIParam_2 is location to store the block. dbus_message_iter_get_fixed_array_APIParam_3 is number of elements in the block", "prop": "dbus_message_iter_get_fixed_array_APIParam_1 is the iterator", "API_info": {"var_type": ["DBusMessageIter *", "void *", "int *"], "ret_type": "void", "desc": "Reads a block of fixed-length values from the message iterator.", "var": ["iter", "value", "n_elements"]}}

