null,null,dbus_message_iter_get_signature_APIParam_0 must be freed with dbus_free_APIName,dbus_message_iter_get_signature_APIParam_0 must be freed with dbus_free_APIName,libdbus
If dbus_message_iter_open_container_APIName fails,If dbus_message_iter_open_container_APIName fails,"the sub-iterator remains invalid , and must not be closed with dbus_message_iter_close_container_APIName or abandoned with dbus_message_iter_abandon_container_APIName","the dbus_message_iter_open_container_APIParam_4 remains invalid , and must not be closed with dbus_message_iter_close_container_APIName or abandoned with dbus_message_iter_abandon_container_APIName",libdbus
null,null,dbus_message_iter_get_array_len_APIName is deprecated on the grounds that it is stupid,dbus_message_iter_get_array_len_APIName is deprecated on the grounds that it is stupid,libdbus
null,null,"that is , you recurse into the array , and you call dbus_message_iter_get_fixed_array_APIName on the `` sub-iterator '' created by dbus_message_iter_recurse_APIName","that is , you recurse into the array , and you call dbus_message_iter_get_fixed_array_APIName on the  dbus_message_iter_recurse_APIParam_2  created by dbus_message_iter_recurse_APIName",libdbus
null,null,dbus_message_get_sender_APIName return the unique name of the sender or NULL,dbus_message_get_sender_APIName return the unique name of the sender or NULL,libdbus
null,null,dbus_malloc_APIParam_0 must be released with dbus_free_APIName,dbus_malloc_APIParam_0 must be released with dbus_free_APIName,libdbus
null,null,dbus_error_has_name_APIName return TRUE if the given named dbus_error_has_name_APIParam_1 occurred,dbus_error_has_name_APIName return TRUE if the given named dbus_error_has_name_APIParam_1 occurred,libdbus
null,null,dbus_error_is_set_APIName return TRUE if an dbus_error_is_set_APIParam_1 occurred,dbus_error_is_set_APIName return TRUE if an dbus_error_is_set_APIParam_1 occurred,libdbus
null,null,dbus_pending_call_get_completed_APIName return TRUE if a reply has been received,dbus_pending_call_get_completed_APIName return TRUE if a reply has been received,libdbus
null,null,dbus_pending_call_set_data_APIName return TRUE if there was enough memory to store the dbus_pending_call_set_data_APIParam_3,dbus_pending_call_set_data_APIName return TRUE if there was enough memory to store the dbus_pending_call_set_data_APIParam_3,libdbus
null,null,dbus_message_contains_unix_fds_APIName return TRUE if the dbus_message_contains_unix_fds_APIParam_1 contains unix fds,dbus_message_contains_unix_fds_APIName return TRUE if the dbus_message_contains_unix_fds_APIParam_1 contains unix fds,libdbus
null,null,"dbus_message_demarshal_bytes_needed_APIName return -1 if there was no valid data to be demarshalled, 0 if there wasn't enough data to determine how much should be demarshalled","dbus_message_demarshal_bytes_needed_APIName return _1 if there was no valid data to be demarshalled, 0 if there wasn't enough data to determine how much should be demarshalled",libdbus
null,null,dbus_message_get_args_APIName return FALSE if the dbus_message_get_args_APIParam_2 was set,dbus_message_get_args_APIName return FALSE if the dbus_message_get_args_APIParam_2 was set,libdbus
null,null,dbus_message_get_args_valist_APIName return FALSE if dbus_message_get_args_valist_APIParam_2 was set,dbus_message_get_args_valist_APIName return FALSE if dbus_message_get_args_valist_APIParam_2 was set,libdbus
null,null,dbus_message_get_auto_start_APIName return TRUE if the dbus_message_get_auto_start_APIParam_1 will use auto-start,dbus_message_get_auto_start_APIName return TRUE if the dbus_message_get_auto_start_APIParam_1 will use auto_start,libdbus
null,null,dbus_message_get_no_reply_APIName return TRUE if the dbus_message_get_no_reply_APIParam_1 sender is not waiting for a reply,dbus_message_get_no_reply_APIName return TRUE if the dbus_message_get_no_reply_APIParam_1 sender is not waiting for a reply,libdbus
null,null,dbus_message_get_path_decomposed_APIName return FALSE if no memory to allocate the array,dbus_message_get_path_decomposed_APIName return FALSE if no memory to allocate the array,libdbus
null,null,dbus_message_has_destination_APIName return TRUE if the dbus_message_has_destination_APIParam_1 has the given destination dbus_message_has_destination_APIParam_2,dbus_message_has_destination_APIName return TRUE if the dbus_message_has_destination_APIParam_1 has the given destination dbus_message_has_destination_APIParam_2,libdbus
null,null,dbus_message_has_member_APIName return TRUE if there is a dbus_message_has_member_APIParam_2 field in the header,dbus_message_has_member_APIName return TRUE if there is a dbus_message_has_member_APIParam_2 field in the header,libdbus
null,null,dbus_message_has_path_APIName return TRUE if there is a dbus_message_has_path_APIParam_2 field in the header,dbus_message_has_path_APIName return TRUE if there is a dbus_message_has_path_APIParam_2 field in the header,libdbus
null,null,dbus_message_has_sender_APIName return TRUE if the dbus_message_has_sender_APIParam_1 has the given sender,dbus_message_has_sender_APIName return TRUE if the dbus_message_has_sender_APIParam_1 has the given sender,libdbus
null,null,dbus_message_has_signature_APIName return TRUE if dbus_message_has_signature_APIParam_1 has the given dbus_message_has_signature_APIParam_2,dbus_message_has_signature_APIName return TRUE if dbus_message_has_signature_APIParam_1 has the given dbus_message_has_signature_APIParam_2,libdbus
null,null,dbus_message_is_error_APIName return TRUE if the dbus_message_is_error_APIParam_1 is the specified error,dbus_message_is_error_APIName return TRUE if the dbus_message_is_error_APIParam_1 is the specified error,libdbus
null,null,dbus_message_is_method_call_APIName return TRUE if the dbus_message_is_method_call_APIParam_1 is the specified dbus_message_is_method_call_APIParam_3 call,dbus_message_is_method_call_APIName return TRUE if the dbus_message_is_method_call_APIParam_1 is the specified dbus_message_is_method_call_APIParam_3 call,libdbus
null,null,dbus_message_is_signal_APIName return TRUE if the dbus_message_is_signal_APIParam_1 is the specified signal,dbus_message_is_signal_APIName return TRUE if the dbus_message_is_signal_APIParam_1 is the specified signal,libdbus
null,null,dbus_message_iter_has_next_APIName return TRUE if there are more fields following,dbus_message_iter_has_next_APIName return TRUE if there are more fields following,libdbus
null,null,dbus_message_iter_init_APIName return FALSE if the dbus_message_iter_init_APIParam_1 has no arguments,dbus_message_iter_init_APIName return FALSE if the dbus_message_iter_init_APIParam_1 has no arguments,libdbus
null,null,dbus_message_iter_next_APIName return TRUE if the iterator was moved to the next field,dbus_message_iter_next_APIName return TRUE if the dbus_message_iter_next_APIParam_1 was moved to the next field,libdbus
null,null,dbus_message_marshal_APIName return FALSE if there was not enough memory,dbus_message_marshal_APIName return FALSE if there was not enough memory,libdbus
null,null,dbus_message_set_data_APIName return TRUE if there was enough memory to store the dbus_message_set_data_APIParam_3,dbus_message_set_data_APIName return TRUE if there was enough memory to store the dbus_message_set_data_APIParam_3,libdbus
null,null,dbus_set_error_from_message_APIName return TRUE if the dbus_set_error_from_message_APIParam_2 had type DBUS_MESSAGE_TYPE_ERROR,dbus_set_error_from_message_APIName return TRUE if the dbus_set_error_from_message_APIParam_2 had dbus_set_error_from_message_APIParam_2,libdbus
null,null,dbus_signature_iter_next_APIName return FALSE if nothing more to read at or below this level,dbus_signature_iter_next_APIName return FALSE if nothing more to read at or below this level,libdbus
null,null,dbus_signature_validate_APIName return TRUE if dbus_signature_validate_APIParam_1 is valid or FALSE if an dbus_signature_validate_APIParam_2 is set,dbus_signature_validate_APIName return TRUE if dbus_signature_validate_APIParam_1 is valid or FALSE if an dbus_signature_validate_APIParam_2 is set,libdbus
null,null,dbus_signature_validate_single_APIName return TRUE if dbus_signature_validate_single_APIParam_1 is valid and has exactly one complete type,dbus_signature_validate_single_APIName return TRUE if dbus_signature_validate_single_APIParam_1 is valid and has exactly one complete type,libdbus
null,null,dbus_type_is_basic_APIName return TRUE if type is basic,dbus_type_is_basic_APIName return TRUE if dbus_type_is_basic_APIParam_1 is basic,libdbus
null,null,dbus_type_is_container_APIName return TRUE if type is a container,dbus_type_is_container_APIName return TRUE if dbus_type_is_container_APIParam_1 is a container,libdbus
null,null,dbus_type_is_fixed_APIName return FALSE if the type can occupy different lengths,dbus_type_is_fixed_APIName return FALSE if the dbus_type_is_fixed_APIParam_1 can occupy different lengths,libdbus
null,null,dbus_server_set_auth_mechanisms_APIName return FALSE if no memory,dbus_server_set_auth_mechanisms_APIName return FALSE if no memory,libdbus
null,null,dbus_server_set_data_APIName return TRUE if there was enough memory to store the dbus_server_set_data_APIParam_3,dbus_server_set_data_APIName return TRUE if there was enough memory to store the dbus_server_set_data_APIParam_3,libdbus
null,null,dbus_validate_bus_name_APIName return TRUE if dbus_validate_bus_name_APIParam_1 is valid,dbus_validate_bus_name_APIName return TRUE if dbus_validate_bus_name_APIParam_1 is valid,libdbus
null,null,dbus_validate_error_name_APIName return TRUE if dbus_validate_error_name_APIParam_1 is valid,dbus_validate_error_name_APIName return TRUE if dbus_validate_error_name_APIParam_1 is valid,libdbus
null,null,dbus_validate_interface_APIName return TRUE if dbus_validate_interface_APIParam_1 is valid,dbus_validate_interface_APIName return TRUE if dbus_validate_interface_APIParam_1 is valid,libdbus
null,null,dbus_validate_member_APIName return TRUE if dbus_validate_member_APIParam_1 is valid,dbus_validate_member_APIName return TRUE if dbus_validate_member_APIParam_1 is valid,libdbus
null,null,dbus_validate_path_APIName return TRUE if dbus_validate_path_APIParam_1 is valid,dbus_validate_path_APIName return TRUE if dbus_validate_path_APIParam_1 is valid,libdbus
null,null,dbus_validate_utf8_APIName return TRUE if dbus_validate_utf8_APIParam_1 is valid UTF-8,dbus_validate_utf8_APIName return TRUE if dbus_validate_utf8_APIParam_1 is valid UTF_8,libdbus
null,null,dbus_connection_can_send_type_APIName return TRUE if the dbus_connection_can_send_type_APIParam_2 may be send via the dbus_connection_can_send_type_APIParam_1,dbus_connection_can_send_type_APIName return TRUE if the dbus_connection_can_send_type_APIParam_2 may be send via the dbus_connection_can_send_type_APIParam_1,libdbus
null,null,dbus_connection_get_adt_audit_session_data_APIName return TRUE if audit dbus_connection_get_adt_audit_session_data_APIParam_2 is filled in with a valid ucred pointer,dbus_connection_get_adt_audit_session_data_APIName return TRUE if audit dbus_connection_get_adt_audit_session_data_APIParam_2 is filled in with a valid ucred pointer,libdbus
null,null,dbus_connection_get_is_anonymous_APIName return TRUE if not authenticated or authenticated as anonymous,dbus_connection_get_is_anonymous_APIName return TRUE if not authenticated or authenticated as anonymous,libdbus
null,null,dbus_connection_get_is_authenticated_APIName return TRUE if the dbus_connection_get_is_authenticated_APIParam_1 was ever authenticated,dbus_connection_get_is_authenticated_APIName return TRUE if the dbus_connection_get_is_authenticated_APIParam_1 was ever authenticated,libdbus
null,null,dbus_connection_get_is_connected_APIName return TRUE if the dbus_connection_get_is_connected_APIParam_1 is still alive,dbus_connection_get_is_connected_APIName return TRUE if the dbus_connection_get_is_connected_APIParam_1 is still alive,libdbus
null,null,dbus_connection_get_socket_APIName return TRUE if dbus_connection_get_socket_APIParam_2 is successfully obtained,dbus_connection_get_socket_APIName return TRUE if dbus_connection_get_socket_APIParam_2 is successfully obtained,libdbus
null,null,dbus_connection_get_unix_fd_APIName return TRUE if dbus_connection_get_unix_fd_APIParam_2 is successfully obtained,dbus_connection_get_unix_fd_APIName return TRUE if dbus_connection_get_unix_fd_APIParam_2 is successfully obtained,libdbus
null,null,dbus_connection_get_unix_process_id_APIName return TRUE if uid is filled in with a valid process ID,dbus_connection_get_unix_process_id_APIName return TRUE if dbus_connection_get_unix_process_id_APIParam_2 is filled in with a valid dbus_connection_get_unix_process_id_APIParam_2,libdbus
null,null,dbus_connection_get_unix_user_APIName return TRUE if dbus_connection_get_unix_user_APIParam_2 is filled in with a valid user ID,dbus_connection_get_unix_user_APIName return TRUE if dbus_connection_get_unix_user_APIParam_2 is filled in with a valid dbus_connection_get_unix_user_APIParam_2,libdbus
null,null,dbus_connection_has_messages_to_send_APIName return TRUE if the outgoing queue is non-empty,dbus_connection_has_messages_to_send_APIName return TRUE if the outgoing queue is non_empty,libdbus
null,null,dbus_connection_list_registered_APIName return FALSE if no memory to allocate the child entries,dbus_connection_list_registered_APIName return FALSE if no memory to allocate the dbus_connection_list_registered_APIParam_3,libdbus
null,null,dbus_connection_get_windows_user_APIName return TRUE if user is available (returned value may be NULL anyway if no memory,dbus_connection_get_windows_user_APIName return TRUE if user is available (returned value may be NULL anyway if no memory,libdbus
null,null,dbus_connection_read_write_APIName return TRUE if still connected,dbus_connection_read_write_APIName return TRUE if still connected,libdbus
null,null,dbus_connection_read_write_dispatch_APIName return TRUE if the disconnect message has not been processed,dbus_connection_read_write_dispatch_APIName return TRUE if the disconnect message has not been processed,libdbus
null,null,dbus_connection_register_fallback_APIName return FALSE if an error  occured,dbus_connection_register_fallback_APIName return FALSE if an error  occured,libdbus
null,null,dbus_connection_register_object_path_APIName return FALSE if an error  ocurred,dbus_connection_register_object_path_APIName return FALSE if an error  ocurred,libdbus
null,null,dbus_connection_set_data_APIName return TRUE if there was enough memory to store the dbus_connection_set_data_APIParam_3,dbus_connection_set_data_APIName return TRUE if there was enough memory to store the dbus_connection_set_data_APIParam_3,libdbus
null,null,dbus_connection_try_register_fallback_APIName return FALSE if an dbus_connection_try_register_fallback_APIParam_5  is reported,dbus_connection_try_register_fallback_APIName return FALSE if an dbus_connection_try_register_fallback_APIParam_5  is reported,libdbus
null,null,dbus_connection_try_register_object_path_APIName return FALSE if an dbus_connection_try_register_object_path_APIParam_5  is reported,dbus_connection_try_register_object_path_APIName return FALSE if an dbus_connection_try_register_object_path_APIParam_5  is reported,libdbus
null,null,"dbus_bus_name_has_owner_APIName return TRUE if the dbus_bus_name_has_owner_APIParam_2 exists, FALSE if not or on dbus_bus_name_has_owner_APIParam_3","dbus_bus_name_has_owner_APIName return TRUE if the dbus_bus_name_has_owner_APIParam_2 exists, FALSE if not or on dbus_bus_name_has_owner_APIParam_3",libdbus
null,null,"dbus_bus_start_service_by_name_APIName return TRUE if the activation succeeded, FALSE if not","dbus_bus_start_service_by_name_APIName return TRUE if the activation succeeded, FALSE if not",libdbus
null,null,dbus_timeout_get_enabled_APIName return TRUE if the dbus_timeout_get_enabled_APIParam_1 is enabled,dbus_timeout_get_enabled_APIName return TRUE if the dbus_timeout_get_enabled_APIParam_1 is enabled,libdbus
null,null,dbus_timeout_handle_APIName return FALSE if there wasn't enough memory,dbus_timeout_handle_APIName return FALSE if there wasn't enough memory,libdbus
null,null,dbus_watch_get_enabled_APIName return TRUE if the dbus_watch_get_enabled_APIParam_1 is enabled,dbus_watch_get_enabled_APIName return TRUE if the dbus_watch_get_enabled_APIParam_1 is enabled,libdbus
null,null,dbus_watch_handle_APIName return FALSE if there wasn't enough memory,dbus_watch_handle_APIName return FALSE if there wasn't enough memory,libdbus
null,null,dbus_move_error_APIParam_2 may not contain an existing error,dbus_move_error_APIParam_2 may not contain an existing error,libdbus
null,null,Both dbus_move_error_APIParam_1 and dbus_move_error_APIParam_2 must be initialized,Both dbus_move_error_APIParam_1 and dbus_move_error_APIParam_2 must be initialized,libdbus
null,null,dbus_move_error_APIParam_2 is the destination error or NULL,dbus_move_error_APIParam_2 is the dbus_move_error_APIParam_2 or NULL,libdbus
null,null,dbus_move_error_APIParam_1 is the source error,dbus_move_error_APIParam_1 is the dbus_move_error_APIParam_1,libdbus
if it is set at some point,if it is set at some point,the dbus_error_init_APIParam_1 only needs to be freed,the dbus_error_init_APIParam_1 only needs to be freed,libdbus
null,null,It will not hurt you,It will not hurt you,libdbus
null,null,"The dbus_set_error_APIParam_3 may be NULL , which means a default message will be deduced from the dbus_set_error_APIParam_2","The dbus_set_error_APIParam_3 may be NULL , which means a default message will be deduced from the dbus_set_error_APIParam_2",libdbus
null,null,"The dbus_set_error_const_APIParam_3 may be NULL , which means a default dbus_set_error_const_APIParam_3 will be deduced from the dbus_set_error_const_APIParam_2","The dbus_set_error_const_APIParam_3 may be NULL , which means a default dbus_set_error_const_APIParam_3 will be deduced from the dbus_set_error_const_APIParam_2",libdbus
null,null,dbus_set_error_const_APIParam_1 is the dbus_set_error_const_APIParam_1 or NULL,dbus_set_error_const_APIParam_1 is the dbus_set_error_const_APIParam_1 or NULL,libdbus
null,null,"You probably want dbus_set_error_APIName instead , in most cases","You probably want dbus_set_error_APIName instead , in most cases",libdbus
null,null,"The default dbus_set_error_const_APIParam_3 will be totally useless , though , so using a NULL dbus_set_error_const_APIParam_3 is not recommended","The default dbus_set_error_const_APIParam_3 will be totally useless , though , so using a NULL dbus_set_error_const_APIParam_3 is not recommended",libdbus
null,null,you must ensure the dbus_set_error_const_APIParam_2 and dbus_set_error_const_APIParam_3 are global data that will not be freed,you must ensure the dbus_set_error_const_APIParam_2 and dbus_set_error_const_APIParam_3 are global data that will not be freed,libdbus
null,null,Guaranteed to return NULL if dbus_malloc_APIParam_1 is zero on all platforms,Guaranteed to return NULL if dbus_malloc_APIParam_1 is zero on all platforms,libdbus
null,null,Guaranteed to return NULL if dbus_malloc0_APIParam_1 is zero on all platforms,Guaranteed to return NULL if dbus_malloc0_APIParam_1 is zero on all platforms,libdbus
If passed,If passed,"NULL , does nothing","NULL , does nothing",libdbus
If passed,If passed,"NULL , does nothing","NULL , does nothing",libdbus
If passed,If passed,"NULL , does nothing","NULL , does nothing",libdbus
If passed,If passed,"NULL , does nothing","NULL , does nothing",libdbus
null,null,Frees a NULL - terminated array of strings,Frees a NULL _ terminated dbus_free_string_array_APIParam_1 of dbus_free_string_array_APIParam_1,libdbus
null,null,"dbus_malloc_APIName return allocated memory, or NULL if the allocation fails","dbus_malloc_APIName return allocated memory, or NULL if the allocation fails",libdbus
null,null,"dbus_malloc0_APIName return allocated memory, or NULL if the allocation fails","dbus_malloc0_APIName return allocated memory, or NULL if the allocation fails",libdbus
null,null,dbus_malloc_APIName memory is NOT safe to free with regular free_APIName from the C library,dbus_malloc_APIName memory is NOT safe to free with regular free_APIName from the C library,libdbus
null,null,dbus_malloc0_APIName memory is NOT safe to free with regular free_APIName from the C library,dbus_malloc0_APIName memory is NOT safe to free with regular free_APIName from the C library,libdbus
null,null,Free it with dbus_free_APIName only,Free it with dbus_free_APIName only,libdbus
if the allocation fails,if the allocation fails,Returns NULL,Returns NULL,libdbus
if the allocation fails.dbus_malloc0_APIParam_0 must be released with dbus_free_APIName,if the allocation fails.dbus_malloc0_APIParam_0 must be released with dbus_free_APIName,Returns NULL,Returns NULL,libdbus
if the resize fails,if the dbus_realloc_APIParam_2 fails,Returns NULL,Returns NULL,libdbus
if none,if none,Returns NULL,Returns NULL,libdbus
if none,if none,Returns NULL,Returns NULL,libdbus
if none,if none,Returns NULL,Returns NULL,libdbus
if memory can not be allocated for the message,if memory can not be allocated for the message,Returns NULL,Returns NULL,libdbus
if memory can not be allocated for the message,if memory can not be allocated for the message,Returns NULL,Returns NULL,libdbus
if memory can not be allocated for the message,if memory can not be allocated for the message,Returns NULL,Returns NULL,libdbus
if the allocation fails,if the allocation fails,Returns NULL,Returns NULL,libdbus
if the allocation fails.dbus_malloc0_APIParam_0 must be released with dbus_free_APIName,if the allocation fails.dbus_malloc0_APIParam_0 must be released with dbus_free_APIName,Returns NULL,Returns NULL,libdbus
if the resize fails,if the dbus_realloc_APIParam_2 fails,Returns NULL,Returns NULL,libdbus
if none,if none,Returns NULL,Returns NULL,libdbus
if none,if none,Returns NULL,Returns NULL,libdbus
if none,if none,Returns NULL,Returns NULL,libdbus
if memory can not be allocated for the message,if memory can not be allocated for the message,Returns NULL,Returns NULL,libdbus
if memory can not be allocated for the message,if memory can not be allocated for the message,Returns NULL,Returns NULL,libdbus
if memory can not be allocated for the message,if memory can not be allocated for the message,Returns NULL,Returns NULL,libdbus
if the allocation fails,if the allocation fails,Returns NULL,Returns NULL,libdbus
if the allocation fails.dbus_malloc0_APIParam_0 must be released with dbus_free_APIName,if the allocation fails.dbus_malloc0_APIParam_0 must be released with dbus_free_APIName,Returns NULL,Returns NULL,libdbus
if the resize fails,if the dbus_realloc_APIParam_2 fails,Returns NULL,Returns NULL,libdbus
if none,if none,Returns NULL,Returns NULL,libdbus
if none,if none,Returns NULL,Returns NULL,libdbus
if none,if none,Returns NULL,Returns NULL,libdbus
if memory can not be allocated for the message,if memory can not be allocated for the message,Returns NULL,Returns NULL,libdbus
if memory can not be allocated for the message,if memory can not be allocated for the message,Returns NULL,Returns NULL,libdbus
if memory can not be allocated for the message,if memory can not be allocated for the message,Returns NULL,Returns NULL,libdbus
if the allocation fails,if the allocation fails,Returns NULL,Returns NULL,libdbus
if the allocation fails.dbus_malloc0_APIParam_0 must be released with dbus_free_APIName,if the allocation fails.dbus_malloc0_APIParam_0 must be released with dbus_free_APIName,Returns NULL,Returns NULL,libdbus
if the resize fails,if the dbus_realloc_APIParam_2 fails,Returns NULL,Returns NULL,libdbus
if none,if none,Returns NULL,Returns NULL,libdbus
if none,if none,Returns NULL,Returns NULL,libdbus
if none,if none,Returns NULL,Returns NULL,libdbus
if memory can not be allocated for the message,if memory can not be allocated for the message,Returns NULL,Returns NULL,libdbus
if memory can not be allocated for the message,if memory can not be allocated for the message,Returns NULL,Returns NULL,libdbus
if memory can not be allocated for the message,if memory can not be allocated for the message,Returns NULL,Returns NULL,libdbus
if the allocation fails,if the allocation fails,Returns NULL,Returns NULL,libdbus
if the allocation fails.dbus_malloc0_APIParam_0 must be released with dbus_free_APIName,if the allocation fails.dbus_malloc0_APIParam_0 must be released with dbus_free_APIName,Returns NULL,Returns NULL,libdbus
if the resize fails,if the dbus_realloc_APIParam_2 fails,Returns NULL,Returns NULL,libdbus
if none,if none,Returns NULL,Returns NULL,libdbus
if none,if none,Returns NULL,Returns NULL,libdbus
if none,if none,Returns NULL,Returns NULL,libdbus
if memory can not be allocated for the message,if memory can not be allocated for the message,Returns NULL,Returns NULL,libdbus
if memory can not be allocated for the message,if memory can not be allocated for the message,Returns NULL,Returns NULL,libdbus
if memory can not be allocated for the message,if memory can not be allocated for the message,Returns NULL,Returns NULL,libdbus
if the allocation fails,if the allocation fails,Returns NULL,Returns NULL,libdbus
if the allocation fails.dbus_malloc0_APIParam_0 must be released with dbus_free_APIName,if the allocation fails.dbus_malloc0_APIParam_0 must be released with dbus_free_APIName,Returns NULL,Returns NULL,libdbus
if the resize fails,if the dbus_realloc_APIParam_2 fails,Returns NULL,Returns NULL,libdbus
if none,if none,Returns NULL,Returns NULL,libdbus
if none,if none,Returns NULL,Returns NULL,libdbus
if none,if none,Returns NULL,Returns NULL,libdbus
if memory can not be allocated for the message,if memory can not be allocated for the message,Returns NULL,Returns NULL,libdbus
if memory can not be allocated for the message,if memory can not be allocated for the message,Returns NULL,Returns NULL,libdbus
if memory can not be allocated for the message,if memory can not be allocated for the message,Returns NULL,Returns NULL,libdbus
if the allocation fails,if the allocation fails,Returns NULL,Returns NULL,libdbus
if the allocation fails.dbus_malloc0_APIParam_0 must be released with dbus_free_APIName,if the allocation fails.dbus_malloc0_APIParam_0 must be released with dbus_free_APIName,Returns NULL,Returns NULL,libdbus
if the resize fails,if the dbus_realloc_APIParam_2 fails,Returns NULL,Returns NULL,libdbus
if none,if none,Returns NULL,Returns NULL,libdbus
if none,if none,Returns NULL,Returns NULL,libdbus
if none,if none,Returns NULL,Returns NULL,libdbus
if memory can not be allocated for the message,if memory can not be allocated for the message,Returns NULL,Returns NULL,libdbus
if memory can not be allocated for the message,if memory can not be allocated for the message,Returns NULL,Returns NULL,libdbus
if memory can not be allocated for the message,if memory can not be allocated for the message,Returns NULL,Returns NULL,libdbus
if the allocation fails,if the allocation fails,Returns NULL,Returns NULL,libdbus
if the allocation fails.dbus_malloc0_APIParam_0 must be released with dbus_free_APIName,if the allocation fails.dbus_malloc0_APIParam_0 must be released with dbus_free_APIName,Returns NULL,Returns NULL,libdbus
if the resize fails,if the dbus_realloc_APIParam_2 fails,Returns NULL,Returns NULL,libdbus
if none,if none,Returns NULL,Returns NULL,libdbus
if none,if none,Returns NULL,Returns NULL,libdbus
if none,if none,Returns NULL,Returns NULL,libdbus
if memory can not be allocated for the message,if memory can not be allocated for the message,Returns NULL,Returns NULL,libdbus
if memory can not be allocated for the message,if memory can not be allocated for the message,Returns NULL,Returns NULL,libdbus
if memory can not be allocated for the message,if memory can not be allocated for the message,Returns NULL,Returns NULL,libdbus
if the allocation fails,if the allocation fails,Returns NULL,Returns NULL,libdbus
if the allocation fails.dbus_malloc0_APIParam_0 must be released with dbus_free_APIName,if the allocation fails.dbus_malloc0_APIParam_0 must be released with dbus_free_APIName,Returns NULL,Returns NULL,libdbus
if the resize fails,if the dbus_realloc_APIParam_2 fails,Returns NULL,Returns NULL,libdbus
if none,if none,Returns NULL,Returns NULL,libdbus
if none,if none,Returns NULL,Returns NULL,libdbus
if none,if none,Returns NULL,Returns NULL,libdbus
if memory can not be allocated for the message,if memory can not be allocated for the message,Returns NULL,Returns NULL,libdbus
if memory can not be allocated for the message,if memory can not be allocated for the message,Returns NULL,Returns NULL,libdbus
if memory can not be allocated for the message,if memory can not be allocated for the message,Returns NULL,Returns NULL,libdbus
null,null,Guaranteed to free the dbus_realloc_APIParam_1 and return NULL if dbus_realloc_APIParam_2 is zero on all platforms,Guaranteed to free the dbus_realloc_APIParam_1 and return NULL if dbus_realloc_APIParam_2 is zero on all platforms,libdbus
null,null,"dbus_realloc_APIName return allocated dbus_realloc_APIParam_1, or NULL if the resize fails","dbus_realloc_APIName return allocated dbus_realloc_APIParam_1, or NULL if the dbus_realloc_APIParam_2 fails",libdbus
null,null,You MUST free all memory and release all reference counts returned to you by libdbus prior to calling dbus_shutdown_APIName,You MUST free all memory and release all reference counts returned to you by libdbus prior to calling dbus_shutdown_APIName,libdbus
null,null,dbus_get_local_machine_id_APIParam_0 must be freed with dbus_free_APIName,dbus_get_local_machine_id_APIParam_0 must be freed with dbus_free_APIName,libdbus
null,null,dbus_try_get_local_machine_id_APIParam_0 must be freed with dbus_free_APIName,dbus_try_get_local_machine_id_APIParam_0 must be freed with dbus_free_APIName,libdbus
null,null,"You can not continue to use any D-Bus objects , such as connections , that were allocated prior to dbus_shutdown_APIName","You can not continue to use any dbus_shutdown_APIParam_1 , such as connections , that were allocated prior to dbus_shutdown_APIName",libdbus
null,null,The purpose of dbus_shutdown_APIName is to allow applications to get clean output from memory leak checkers,The purpose of dbus_shutdown_APIName is to allow applications to call dbus_timeout_get_interval_APIName with dbus_timeout_get_interval_APIParam_1 from memory leak checkers,libdbus
null,null,"dbus_get_version_APIParam_1 is pointer to return the major version, or NULL","dbus_get_version_APIParam_1 is pointer to return the major version, or NULL",libdbus
while NO other threads are using D-Bus,while NO other threads are using D_Bus,"dbus_shutdown_APIName is NOT thread safe , it must be called","dbus_shutdown_APIName is NOT thread safe , it must be called",libdbus
null,null,"Returns a 32-byte-long hex-encoded UUID string , or NULL on failure","Returns a 32_byte_long hex_encoded UUID string , or NULL on failure",libdbus
null,null,"Returns a 32-byte-long hex-encoded UUID string , or NULL on failure","Returns a 32_byte_long hex_encoded UUID string , or NULL on failure",libdbus
null,null,"Returns a 32-byte-long hex-encoded UUID string , or NULL on failure","Returns a 32_byte_long hex_encoded UUID string , or NULL on failure",libdbus
null,null,"Returns a 32-byte-long hex-encoded UUID string , or NULL on failure","Returns a 32_byte_long hex_encoded UUID string , or NULL on failure",libdbus
null,null,"dbus_get_version_APIParam_3 is pointer to return the micro version, or NULL","dbus_get_version_APIParam_3 is pointer to return the micro version, or NULL",libdbus
null,null,"dbus_get_version_APIParam_2 is pointer to return the minor version, or NULL","dbus_get_version_APIParam_2 is pointer to return the minor version, or NULL",libdbus
null,null,You have to know that nobody is using libdbus in your application process before you can call dbus_shutdown_APIName,You have to know that nobody is using libdbus in your application process before you can call dbus_shutdown_APIName,libdbus
null,null,This is because we can not rely on internal implementation details of the underlying libc library,This is because we can not rely on internal implementation details of the underlying libc library,libdbus
null,null,"There is absolutely no requirement to call dbus_shutdown_APIName - in fact , most applications will not bother and should not feel guilty","There is absolutely no requirement to call dbus_shutdown_APIName _ in fact , most applications will not bother and should not feel guilty",libdbus
null,null,The MINOR is an odd number for development releases and an even number for stable releases,The MINOR is an odd number for development releases and an even number for stable releases,libdbus
null,null,"dbus_get_local_machine_id_APIName returns NULL if there was not enough memory to read the UUID, or if the UUID could not be read because the D-Bus library was installed incorrectly","dbus_get_local_machine_id_APIName returns NULL if there was not enough memory to read the UUID, or if the UUID could not be read because the dbus_get_local_machine_id_APIParam_1 was installed incorrectly",libdbus
null,null,dbus_message_demarshal_APIName return NULL if there was an dbus_message_demarshal_APIParam_3,dbus_message_demarshal_APIName return NULL if there was an dbus_message_demarshal_APIParam_3,libdbus
null,null,"this will result in processing of the special Disconnected signal , which may result in a call to _exit_APIName , unless you have used dbus_connection_set_exit_on_disconnect_APIName to disable that behaviour","this will result in processing of the special Disconnected signal , which may result in a call to _exit_APIName , ",libdbus
null,null,One implication of this is that calling dbus_shutdown_APIName from a library is almost certainly wrong,One implication of this is that calling dbus_shutdown_APIName from a library is almost certainly wrong,libdbus
null,null,"Alternatively , there are macros #DBUS_MAJOR_VERSION , #DBUS_MINOR_VERSION , #DBUS_MICRO_VERSION , and #DBUS_VERSION which allow you to test the VERSION YOU ARE COMPILED AGAINST","Alternatively , there are dbus_get_version_APIParam_1 , #DBUS_MINOR_VERSION , #DBUS_MICRO_VERSION , and #DBUS_VERSION which allow you to test the VERSION YOU ARE COMPILED AGAINST",libdbus
null,null,"dbus_setenv_APIParam_2 is dbus_setenv_APIParam_2 of environment variable , or NULL to unset","dbus_setenv_APIParam_2 is dbus_setenv_APIParam_2 of dbus_setenv_APIParam_1 , or NULL to unset",libdbus
null,null,"dbus_setenv_APIName return TRUE on success, FALSE if not enough memory","dbus_setenv_APIName return TRUE on success, FALSE if not enough memory",libdbus
null,null,"dbus_connection_add_filter_APIName return TRUE on success, FALSE if not enough memory","dbus_connection_add_filter_APIName return TRUE on success, FALSE if not enough memory",libdbus
null,null,The machine ID can also be used to create unique per-machine instances,The machine ID can also be used to call dbus_bus_get_unique_name_APIName with instances,libdbus
null,null,The UUID is not a UUID in the sense of RFC4122,The UUID is not a UUID in the sense of RFC4122,libdbus
null,null,"The machine ID is preferred over the machine hostname , and may also change at runtime","The machine ID is preferred over the machine hostname , and may also change at runtime",libdbus
null,null,The allocated ID may be used with dbus_pending_call_set_data_APIName and dbus_pending_call_get_data_APIName,The call dbus_server_allocate_data_slot_APIName with ID may be used with dbus_pending_call_set_data_APIName and dbus_pending_call_get_data_APIName,libdbus
null,null,The allocated ID may be used with dbus_message_set_data_APIName and dbus_message_get_data_APIName,The call dbus_server_allocate_data_slot_APIName with ID may be used with dbus_message_set_data_APIName and dbus_message_get_data_APIName,libdbus
null,null,The allocated ID may be used with dbus_server_set_data_APIName and dbus_server_get_data_APIName,The call dbus_server_allocate_data_slot_APIName with ID may be used with dbus_server_set_data_APIName and dbus_server_get_data_APIName,libdbus
null,null,The allocated ID may be used with dbus_connection_set_data_APIName and dbus_connection_get_data_APIName,The call dbus_server_allocate_data_slot_APIName with ID may be used with dbus_connection_set_data_APIName and dbus_connection_get_data_APIName,libdbus
null,null,dbus_pending_call_allocate_data_slot_APIName return FALSE on failure (no memory,dbus_pending_call_allocate_data_slot_APIName return FALSE on failure (no memory,libdbus
null,null,dbus_message_allocate_data_slot_APIName return FALSE on failure (no memory,dbus_message_allocate_data_slot_APIName return FALSE on failure (no memory,libdbus
null,null,dbus_server_set_timeout_functions_APIName return FALSE on failure (no memory,dbus_server_set_timeout_functions_APIName return FALSE on failure (no memory,libdbus
null,null,dbus_server_set_watch_functions_APIName return FALSE on failure (no memory,dbus_server_set_watch_functions_APIName return FALSE on failure (no memory,libdbus
null,null,dbus_connection_allocate_data_slot_APIName return FALSE on failure (no memory,dbus_connection_allocate_data_slot_APIName return FALSE on failure (no memory,libdbus
null,null,dbus_connection_set_timeout_functions_APIName return FALSE on failure (no memory,dbus_connection_set_timeout_functions_APIName return FALSE on failure (no memory,libdbus
null,null,dbus_connection_set_watch_functions_APIName return FALSE on failure (no memory,dbus_connection_set_watch_functions_APIName return FALSE on failure (no memory,libdbus
null,null,"The passed-in slot must be initialized to -1 , and is filled in with the slot ID","The dbus_connection_allocate_data_slot_APIParam_1 must be initialized to _1 , and is filled in with the dbus_connection_allocate_data_slot_APIParam_1",libdbus
null,null,"The passed-in slot must be initialized to -1 , and is filled in with the slot ID","The dbus_connection_allocate_data_slot_APIParam_1 must be initialized to _1 , and is filled in with the dbus_connection_allocate_data_slot_APIParam_1",libdbus
null,null,"The passed-in slot must be initialized to -1 , and is filled in with the slot ID","The dbus_connection_allocate_data_slot_APIParam_1 must be initialized to _1 , and is filled in with the dbus_connection_allocate_data_slot_APIParam_1",libdbus
null,null,"The passed-in slot must be initialized to -1 , and is filled in with the slot ID","The dbus_connection_allocate_data_slot_APIParam_1 must be initialized to _1 , and is filled in with the dbus_connection_allocate_data_slot_APIParam_1",libdbus
null,null,"The passed-in slot must be initialized to -1 , and is filled in with the slot ID","The dbus_connection_allocate_data_slot_APIParam_1 must be initialized to _1 , and is filled in with the dbus_connection_allocate_data_slot_APIParam_1",libdbus
null,null,"The passed-in slot must be initialized to -1 , and is filled in with the slot ID","The dbus_connection_allocate_data_slot_APIParam_1 must be initialized to _1 , and is filled in with the dbus_connection_allocate_data_slot_APIParam_1",libdbus
null,null,"The passed-in slot must be initialized to -1 , and is filled in with the slot ID","The dbus_connection_allocate_data_slot_APIParam_1 must be initialized to _1 , and is filled in with the dbus_connection_allocate_data_slot_APIParam_1",libdbus
null,null,"The passed-in slot must be initialized to -1 , and is filled in with the slot ID","The dbus_connection_allocate_data_slot_APIParam_1 must be initialized to _1 , and is filled in with the dbus_connection_allocate_data_slot_APIParam_1",libdbus
null,null,"The passed-in slot must be initialized to -1 , and is filled in with the slot ID","The dbus_connection_allocate_data_slot_APIParam_1 must be initialized to _1 , and is filled in with the dbus_connection_allocate_data_slot_APIParam_1",libdbus
null,null,"If the remote application has the same machine ID as the one returned by this function, the remote application is on the same machine as your application","If the remote application has the same machine ID as the one returned by this function, the remote application is on the same machine as your application",libdbus
null,null,all DBusPendingCall objects will have a slot with the given integer ID reserved,all DBusPendingCall objects will have a dbus_pending_call_allocate_data_slot_APIParam_1 with the given integer ID reserved,libdbus
null,null,all DBusMessage objects will have a slot with the given integer ID reserved,all DBusMessage objects will have a dbus_message_allocate_data_slot_APIParam_1 with the given integer ID reserved,libdbus
null,null,all DBusServer objects will have a slot with the given integer ID reserved,all DBusServer objects will have a dbus_server_allocate_data_slot_APIParam_1 with the given integer ID reserved,libdbus
null,null,all DBusConnection objects will have a slot with the given integer ID reserved,all DBusConnection objects will have a dbus_connection_allocate_data_slot_APIParam_1 with the given integer ID reserved,libdbus
null,null,This requires storing timestamps instead of intervals in the timeout dbus_pending_call_block_APIParam_1 is the dbus_pending_call_block_APIParam_1 call,This requires storing timestamps instead of intervals in the timeout dbus_pending_call_block_APIParam_1 is the dbus_pending_call_block_APIParam_1 call,libdbus
null,null,Block until the dbus_pending_call_block_APIParam_1 call is completed,Block until the dbus_pending_call_block_APIParam_1 call is completed,libdbus
null,null,dbus_pending_call_get_data_APIName and dbus_pending_call_set_data_APIName may no longer be used with this slot,dbus_pending_call_get_data_APIName and dbus_pending_call_set_data_APIName may no longer be used with this dbus_pending_call_free_data_slot_APIParam_1,libdbus
null,null,dbus_message_get_data_APIName and dbus_message_set_data_APIName may no longer be used with this slot,dbus_message_get_data_APIName and dbus_message_set_data_APIName may no longer be used with this dbus_message_free_data_slot_APIParam_1,libdbus
null,null,dbus_server_get_data_APIName and dbus_server_set_data_APIName may no longer be used with this slot,dbus_server_get_data_APIName and dbus_server_set_data_APIName may no longer be used with this dbus_server_free_data_slot_APIParam_1,libdbus
null,null,dbus_connection_get_data_APIName and dbus_connection_set_data_APIName may no longer be used with this slot,dbus_connection_get_data_APIName and dbus_connection_set_data_APIName may no longer be used with this dbus_connection_free_data_slot_APIParam_1,libdbus
null,null,but it should really only use time remaining,but it should really only use time remaining,libdbus
null,null,The dbus_pending_call_get_data_APIParam_2 must still be allocated,The dbus_pending_call_get_data_APIParam_2 must still be allocated,libdbus
null,null,The dbus_message_get_data_APIParam_2 must still be allocated,The dbus_message_get_data_APIParam_2 must still be allocated,libdbus
null,null,The dbus_server_get_data_APIParam_2 must still be allocated,The dbus_server_get_data_APIParam_2 must still be allocated,libdbus
null,null,The dbus_connection_get_data_APIParam_2 must still be allocated,The dbus_connection_get_data_APIParam_2 must still be allocated,libdbus
null,null,"dbus_pending_call_get_data_APIName return the data, or NULL if not found","dbus_pending_call_get_data_APIName return the data, or NULL if not found",libdbus
null,null,"dbus_message_get_data_APIName return the data, or NULL if not found","dbus_message_get_data_APIName return the data, or NULL if not found",libdbus
null,null,"dbus_server_get_data_APIName return the data, or NULL if not found","dbus_server_get_data_APIName return the data, or NULL if not found",libdbus
null,null,"dbus_connection_get_data_APIName return the data, or NULL if not found","dbus_connection_get_data_APIName return the data, or NULL if not found",libdbus
null,null,The dbus_pending_call_set_data_APIParam_2 number must have been allocated with dbus_pending_call_allocate_data_slot_APIName,The dbus_pending_call_set_data_APIParam_2 number must have been allocated with dbus_pending_call_allocate_data_slot_APIName,libdbus
null,null,The dbus_message_set_data_APIParam_2 number must have been allocated with dbus_message_allocate_data_slot_APIName,The dbus_message_set_data_APIParam_2 number must have been allocated with dbus_message_allocate_data_slot_APIName,libdbus
null,null,The dbus_server_set_data_APIParam_2 number must have been allocated with dbus_server_allocate_data_slot_APIName,The dbus_server_set_data_APIParam_2 number must have been allocated with dbus_server_allocate_data_slot_APIName,libdbus
null,null,The dbus_connection_set_data_APIParam_2 number must have been allocated with dbus_connection_allocate_data_slot_APIName,The dbus_connection_set_data_APIParam_2 number must have been allocated with dbus_connection_allocate_data_slot_APIName,libdbus
null,null,dbus_pending_call_set_notify_APIName return FALSE if not enough memory,dbus_pending_call_set_notify_APIName return FALSE if not enough memory,libdbus
null,null,dbus_message_iter_append_basic_APIName return FALSE if not enough memory,dbus_message_iter_append_basic_APIName return FALSE if not enough memory,libdbus
null,null,dbus_message_iter_append_fixed_array_APIName return FALSE if not enough memory,dbus_message_iter_append_fixed_array_APIName return FALSE if not enough memory,libdbus
null,null,dbus_message_iter_close_container_APIName return FALSE if not enough memory,dbus_message_iter_close_container_APIName return FALSE if not enough memory,libdbus
null,null,dbus_message_iter_open_container_APIName return FALSE if not enough memory,dbus_message_iter_open_container_APIName return FALSE if not enough memory,libdbus
null,null,dbus_message_set_container_instance_APIName return FALSE if not enough memory,dbus_message_set_container_instance_APIName return FALSE if not enough memory,libdbus
null,null,dbus_message_set_destination_APIName return FALSE if not enough memory,dbus_message_set_destination_APIName return FALSE if not enough memory,libdbus
null,null,dbus_message_set_error_name_APIName return FALSE if not enough memory,dbus_message_set_error_name_APIName return FALSE if not enough memory,libdbus
null,null,dbus_message_set_interface_APIName return FALSE if not enough memory,dbus_message_set_interface_APIName return FALSE if not enough memory,libdbus
null,null,dbus_message_set_member_APIName return FALSE if not enough memory,dbus_message_set_member_APIName return FALSE if not enough dbus_message_set_member_APIParam_2,libdbus
null,null,dbus_message_set_path_APIName return FALSE if not enough memory,dbus_message_set_path_APIName return FALSE if not enough memory,libdbus
null,null,dbus_message_set_reply_serial_APIName return FALSE if not enough memory,dbus_message_set_reply_serial_APIName return FALSE if not enough memory,libdbus
null,null,dbus_message_set_sender_APIName return FALSE if not enough memory,dbus_message_set_sender_APIName return FALSE if not enough memory,libdbus
null,null,dbus_connection_get_object_path_data_APIName return FALSE if not enough memory,dbus_connection_get_object_path_data_APIName return FALSE if not enough memory,libdbus
null,null,dbus_connection_unregister_object_path_APIName return FALSE if not enough memory,dbus_connection_unregister_object_path_APIName return FALSE if not enough memory,libdbus
null,null,dbus_bus_set_unique_name_APIName return FALSE if not enough memory,dbus_bus_set_unique_name_APIName return FALSE if not enough memory,libdbus
null,null,"Gets the reply, or returns NULL if none has been received yet","Gets the reply, or returns NULL if none has been received yet",libdbus
null,null,"The idea is that two processes with the same machine ID should be able to use shared memory , UNIX domain sockets , process IDs , and other features of the OS that require both processes to be running on the same OS kernel instance","The idea is that two processes with the same machine ID should be able to use shared memory , UNIX domain sockets , process IDs , and other features of the OS that require both processes to be running on the same OS kernel instance",libdbus
null,null,dbus_pending_call_steal_reply_APIName return the reply message or NULL,dbus_pending_call_steal_reply_APIName return the reply message or NULL,libdbus
null,null,dbus_message_new_APIName return new message or NULL if no memory,dbus_message_new_APIName return new dbus_message_new_APIParam_1 or NULL if no memory,libdbus
null,null,dbus_pending_call_steal_reply_APIName can only be called once per dbus_pending_call_steal_reply_APIParam_1 call,dbus_pending_call_steal_reply_APIName can only be called once per dbus_pending_call_steal_reply_APIParam_1 call,libdbus
null,null,The variable argument list should contain the type of each argument followed by the value to append,The variable dbus_message_append_args_APIParam_2 list should call dbus_type_is_container_APIName with dbus_message_append_args_APIParam_2 of each dbus_message_append_args_APIParam_2 followed by the value to append,libdbus
null,null,dbus_message_append_args_APIName does not support arrays of Unix file descriptors,dbus_message_append_args_APIName does not support arrays of Unix file descriptors,libdbus
null,null,"The last argument to dbus_message_append_args_APIName must be DBUS_TYPE_INVALID , marking the end of the argument list","The last dbus_message_append_args_APIParam_2 to dbus_message_append_args_APIName must be DBUS_TYPE_INVALID , marking the end of the dbus_message_append_args_APIParam_2",libdbus
null,null,dbus_message_append_args_APIName return TRUE on success,dbus_message_append_args_APIName return TRUE on success,libdbus
null,null,dbus_message_append_args_valist_APIName return TRUE on success,dbus_message_append_args_valist_APIName return TRUE on success,libdbus
null,null,dbus_connection_send_APIName return TRUE on success,dbus_connection_send_APIName return TRUE on success,libdbus
null,null,dbus_bus_register_APIName return TRUE on success,dbus_bus_register_APIName return TRUE on success,libdbus
If you need those,If you need those,you need to manually recurse into the array,you need to manually recurse into the array,libdbus
If you do not do this libdbus,If you do not do this libdbus,will not know to stop and will read invalid memory,will not know to stop and will read invalid memory,libdbus
null,null,String/signature/path arrays should be passed in as `` const char *** address_of_array '' and `` int n_elements '' Todo,String/signature/path arrays should be passed in as  const char *** address_of_array  and  int n_elements  Todo,libdbus
null,null,support DBUS_TYPE_STRUCT and DBUS_TYPE_VARIANT and complex arrays Todo,dbus_message_append_args_APIParam_2 and DBUS_TYPE_VARIANT and complex arrays Todo,libdbus
null,null,and you have to start over building the whole dbus_message_append_args_APIParam_1,and you have to start over building the whole dbus_message_append_args_APIParam_1,libdbus
null,null,and you have to start over building the whole dbus_message_iter_init_append_APIParam_1,and you have to start over building the whole dbus_message_iter_init_append_APIParam_1,libdbus
null,null,dbus_message_copy_APIName can not be used in programs that try to recover from OOM errors,dbus_message_copy_APIName can not be used in programs that try to recover from OOM errors,libdbus
null,null,dbus_message_copy_APIName return the new dbus_message_copy_APIParam_1.or NULL if not enough memory or Unix file descriptors  can be allocated,dbus_message_copy_APIName return the new dbus_message_copy_APIParam_1.or NULL if not enough memory or Unix file descriptors  can be allocated,libdbus
null,null,dbus_message_demarshal_APIParam_3 is the location to save errors to,dbus_message_demarshal_APIParam_3 is the location to save dbus_message_demarshal_APIParam_3 to,libdbus
null,null,The supported types include those supported by dbus_message_append_args_APIName,The supported dbus_message_get_args_APIParam_3 include those supported by dbus_message_append_args_APIName,libdbus
null,null,Similar to dbus_message_get_fixed_array_APIName dbus_message_get_args_APIName does not support arrays of type DBUS_TYPE_UNIX_FD,Similar to dbus_message_get_fixed_array_APIName dbus_message_get_args_APIName does not support arrays of dbus_message_get_args_APIParam_3,libdbus
null,null,support DBUS_TYPE_STRUCT and DBUS_TYPE_VARIANT and complex arrays dbus_message_get_args_APIParam_1 is the dbus_message_get_args_APIParam_1,dbus_message_get_args_APIParam_3 and DBUS_TYPE_VARIANT and complex arrays dbus_message_get_args_APIParam_1 is the dbus_message_get_args_APIParam_1,libdbus
If you need them without this flag set,If you need them without this flag set,make sure to unset it with fcntl_APIName,make sure to unset it with fcntl_APIName,libdbus
If you need them without this flag set,If you need them without this flag set,make sure to unset it with fcntl_APIName,make sure to unset it with fcntl_APIName,libdbus
If you need them without this flag set,If you need them without this flag set,make sure to unset it with fcntl_APIName,make sure to unset it with fcntl_APIName,libdbus
If you need them without this flag set,If you need them without this flag set,make sure to unset it with fcntl_APIName,make sure to unset it with fcntl_APIName,libdbus
If you need to parse messages with arrays of Unix file descriptors,If you need to parse messages with arrays of Unix file descriptors,you need to recurse into the array manually,you need to recurse into the array manually,libdbus
null,null,The variable argument list should contain the type of the argument followed by a pointer to where the value should be stored,The variable dbus_message_get_args_APIParam_3 list should call dbus_type_is_container_APIName with dbus_message_get_args_APIParam_3 of the dbus_message_get_args_APIParam_3 followed by a pointer to where the value should be stored,libdbus
null,null,"In addition to those types , arrays of string , object path , and signature are supported","In addition to those dbus_message_get_args_APIParam_3 , arrays of string , object path , and signature are supported",libdbus
null,null,"but thesebe returned by dbus_message_get_args_APIName as allocated memory and must be freed with dbus_free_string_array_APIName , while the other typesbe returned by dbus_message_get_args_APIName as const references","but thesebe returned by dbus_message_get_args_APIName as allocated memory and must be freed with dbus_free_string_array_APIName , while the other typesbe returned by dbus_message_get_args_APIName as const references",libdbus
null,null,dbus_message_get_container_instance_APIName return the path  or NULL,dbus_message_get_container_instance_APIName return the path  or NULL,libdbus
null,null,dbus_message_get_path_APIName return the path  or NULL,dbus_message_get_path_APIName return the path  or NULL,libdbus
if the dbus_message_get_auto_start_APIParam_1 will cause an owner for destination name to be auto-started,if the dbus_message_get_auto_start_APIParam_1 will cause an owner for destination name to be auto_started,Returns TRUE,Returns TRUE,libdbus
if the dbus_message_get_no_reply_APIParam_1 does not expect a reply,if the dbus_message_get_no_reply_APIParam_1 does not expect a reply,Returns TRUE,Returns TRUE,libdbus
if the dbus_server_get_is_connected_APIParam_1 is still listening for new connections,if the dbus_server_get_is_connected_APIParam_1 is still listening for new connections,Returns TRUE,Returns TRUE,libdbus
if the dbus_connection_get_unix_process_id_APIParam_2 is filled in,if the dbus_connection_get_unix_process_id_APIParam_2 is filled in,Returns TRUE,Returns TRUE,libdbus
if the dbus_connection_get_unix_user_APIParam_2 is filled in,if the dbus_connection_get_unix_user_APIParam_2 is filled in,Returns TRUE,Returns TRUE,libdbus
if the ID is filled in,if the ID is filled in,Returns TRUE,Returns TRUE,libdbus
if the dbus_message_get_auto_start_APIParam_1 will cause an owner for destination name to be auto-started,if the dbus_message_get_auto_start_APIParam_1 will cause an owner for destination name to be auto_started,Returns TRUE,Returns TRUE,libdbus
if the dbus_message_get_no_reply_APIParam_1 does not expect a reply,if the dbus_message_get_no_reply_APIParam_1 does not expect a reply,Returns TRUE,Returns TRUE,libdbus
if the dbus_server_get_is_connected_APIParam_1 is still listening for new connections,if the dbus_server_get_is_connected_APIParam_1 is still listening for new connections,Returns TRUE,Returns TRUE,libdbus
if the dbus_connection_get_unix_process_id_APIParam_2 is filled in,if the dbus_connection_get_unix_process_id_APIParam_2 is filled in,Returns TRUE,Returns TRUE,libdbus
if the dbus_connection_get_unix_user_APIParam_2 is filled in,if the dbus_connection_get_unix_user_APIParam_2 is filled in,Returns TRUE,Returns TRUE,libdbus
if the ID is filled in,if the ID is filled in,Returns TRUE,Returns TRUE,libdbus
if the argument is a valid dbus_type_is_valid_APIParam_1,if the argument is a valid dbus_type_is_valid_APIParam_1,Return TRUE,Return TRUE,libdbus
if the dbus_message_get_auto_start_APIParam_1 will cause an owner for destination name to be auto-started,if the dbus_message_get_auto_start_APIParam_1 will cause an owner for destination name to be auto_started,Returns TRUE,Returns TRUE,libdbus
if the dbus_message_get_no_reply_APIParam_1 does not expect a reply,if the dbus_message_get_no_reply_APIParam_1 does not expect a reply,Returns TRUE,Returns TRUE,libdbus
if the dbus_server_get_is_connected_APIParam_1 is still listening for new connections,if the dbus_server_get_is_connected_APIParam_1 is still listening for new connections,Returns TRUE,Returns TRUE,libdbus
if the dbus_connection_get_unix_process_id_APIParam_2 is filled in,if the dbus_connection_get_unix_process_id_APIParam_2 is filled in,Returns TRUE,Returns TRUE,libdbus
if the dbus_connection_get_unix_user_APIParam_2 is filled in,if the dbus_connection_get_unix_user_APIParam_2 is filled in,Returns TRUE,Returns TRUE,libdbus
if the ID is filled in,if the ID is filled in,Returns TRUE,Returns TRUE,libdbus
if the dbus_message_get_auto_start_APIParam_1 will cause an owner for destination name to be auto-started,if the dbus_message_get_auto_start_APIParam_1 will cause an owner for destination name to be auto_started,Returns TRUE,Returns TRUE,libdbus
if the dbus_message_get_no_reply_APIParam_1 does not expect a reply,if the dbus_message_get_no_reply_APIParam_1 does not expect a reply,Returns TRUE,Returns TRUE,libdbus
if the dbus_server_get_is_connected_APIParam_1 is still listening for new connections,if the dbus_server_get_is_connected_APIParam_1 is still listening for new connections,Returns TRUE,Returns TRUE,libdbus
if the dbus_connection_get_unix_process_id_APIParam_2 is filled in,if the dbus_connection_get_unix_process_id_APIParam_2 is filled in,Returns TRUE,Returns TRUE,libdbus
if the dbus_connection_get_unix_user_APIParam_2 is filled in,if the dbus_connection_get_unix_user_APIParam_2 is filled in,Returns TRUE,Returns TRUE,libdbus
if the ID is filled in,if the ID is filled in,Returns TRUE,Returns TRUE,libdbus
if the dbus_message_get_auto_start_APIParam_1 will cause an owner for destination name to be auto-started,if the dbus_message_get_auto_start_APIParam_1 will cause an owner for destination name to be auto_started,Returns TRUE,Returns TRUE,libdbus
if the dbus_message_get_no_reply_APIParam_1 does not expect a reply,if the dbus_message_get_no_reply_APIParam_1 does not expect a reply,Returns TRUE,Returns TRUE,libdbus
if the dbus_server_get_is_connected_APIParam_1 is still listening for new connections,if the dbus_server_get_is_connected_APIParam_1 is still listening for new connections,Returns TRUE,Returns TRUE,libdbus
if the dbus_connection_get_unix_process_id_APIParam_2 is filled in,if the dbus_connection_get_unix_process_id_APIParam_2 is filled in,Returns TRUE,Returns TRUE,libdbus
if the dbus_connection_get_unix_user_APIParam_2 is filled in,if the dbus_connection_get_unix_user_APIParam_2 is filled in,Returns TRUE,Returns TRUE,libdbus
if the ID is filled in,if the ID is filled in,Returns TRUE,Returns TRUE,libdbus
if the dbus_message_get_auto_start_APIParam_1 will cause an owner for destination name to be auto-started,if the dbus_message_get_auto_start_APIParam_1 will cause an owner for destination name to be auto_started,Returns TRUE,Returns TRUE,libdbus
if the dbus_message_get_no_reply_APIParam_1 does not expect a reply,if the dbus_message_get_no_reply_APIParam_1 does not expect a reply,Returns TRUE,Returns TRUE,libdbus
if the dbus_server_get_is_connected_APIParam_1 is still listening for new connections,if the dbus_server_get_is_connected_APIParam_1 is still listening for new connections,Returns TRUE,Returns TRUE,libdbus
if the dbus_connection_get_unix_process_id_APIParam_2 is filled in,if the dbus_connection_get_unix_process_id_APIParam_2 is filled in,Returns TRUE,Returns TRUE,libdbus
if the dbus_connection_get_unix_user_APIParam_2 is filled in,if the dbus_connection_get_unix_user_APIParam_2 is filled in,Returns TRUE,Returns TRUE,libdbus
if the ID is filled in,if the ID is filled in,Returns TRUE,Returns TRUE,libdbus
null,null,dbus_message_get_destination_APIName return the dbus_message_get_destination_APIParam_1 destination  or NULL,dbus_message_get_destination_APIName return the dbus_message_get_destination_APIParam_1 destination  or NULL,libdbus
if there is none set,if there is none set,Gets the destination of a dbus_message_get_destination_APIParam_1 or NULL,Gets the destination of a dbus_message_get_destination_APIParam_1 or NULL,libdbus
null,null,dbus_message_get_error_name_APIName return the error name  or NULL,dbus_message_get_error_name_APIName return the error name  or NULL,libdbus
null,null,dbus_message_get_interface_APIName return the dbus_message_get_interface_APIParam_1 interface  or NULL,dbus_message_get_interface_APIName return the dbus_message_get_interface_APIParam_1 interface  or NULL,libdbus
if none,if none,Gets the error name or NULL,Gets the error name or NULL,libdbus
null,null,dbus_message_get_member_APIName return the member name  or NULL,dbus_message_get_member_APIName return the member name  or NULL,libdbus
if no dbus_message_get_path_decomposed_APIParam_2 field exists,if no dbus_message_get_path_decomposed_APIParam_2 field exists,NULL set here,NULL set here,libdbus
if none,if none,Returns the serial that the dbus_message_get_reply_serial_APIParam_1 is a reply to or 0,Returns the serial that the dbus_message_get_reply_serial_APIParam_1 is a reply to or 0,libdbus
null,null,"So the dbus_message_get_path_decomposed_APIParam_2 '' / foo/bar '' becomes -LCB- `` foo '' , `` bar '' , NULL -RCB- and the dbus_message_get_path_decomposed_APIParam_2 '' / '' becomes -LCB- NULL -RCB-","So the dbus_message_get_path_decomposed_APIParam_2  / foo/bar  becomes _LCB_  foo  ,  bar  , NULL _RCB_ and the dbus_message_get_path_decomposed_APIParam_2  /  becomes _LCB_ NULL _RCB",libdbus
null,null,"Note , dbus_message_get_sender_APIParam_0 sender is always the unique bus name","Note , dbus_message_get_sender_APIParam_0 sender is always the unique bus name",libdbus
null,null,dbus_message_get_reply_serial_APIName return the reply serial,dbus_message_get_reply_serial_APIName return the reply serial,libdbus
null,null,dbus_message_get_serial_APIName return the serial,dbus_message_get_serial_APIName return the serial,libdbus
null,null,dbus_bus_get_private_APIName return a DBusConnection with new ref,dbus_bus_get_private_APIName return a dbus_bus_get_private_APIParam_0 with new ref,libdbus
null,null,"Connections may own multiple other bus names , but those are not found in the sender field","Connections may own multiple other bus names , but those are not found in the sender field",libdbus
if none,if none,Returns the serial of a dbus_message_get_serial_APIParam_1 or 0 has been specified,Returns the serial of a dbus_message_get_serial_APIParam_1 or 0 has been specified,libdbus
null,null,DBUS_MESSAGE_TYPE_INVALID will never be returned,DBUS_MESSAGE_TYPE_INVALID will never be returned,libdbus
null,null,"The signature includes only `` in '' arguments for DBUS_MESSAGE_TYPE_METHOD_CALL and only `` out '' arguments for DBUS_MESSAGE_TYPE_METHOD_RETURN , so is slightly different from what you might expect","The signature includes only  in  arguments for DBUS_MESSAGE_TYPE_METHOD_CALL and only  out  arguments for DBUS_MESSAGE_TYPE_METHOD_RETURN , so is slightly different from what you might expect",libdbus
null,null,"If the dbus_message_has_destination_APIParam_1 has no destination specified or has a different destination, returns FALSE","If the dbus_message_has_destination_APIParam_1 has no destination specified or has a different destination, returns FALSE",libdbus
null,null,"Types include DBUS_MESSAGE_TYPE_METHOD_CALL , DBUS_MESSAGE_TYPE_METHOD_RETURN , DBUS_MESSAGE_TYPE_ERROR , DBUS_MESSAGE_TYPE_SIGNAL , but other types are allowed and all code must silently ignore messages of unknown type","Types include DBUS_MESSAGE_TYPE_METHOD_CALL , DBUS_MESSAGE_TYPE_METHOD_RETURN , DBUS_MESSAGE_TYPE_ERROR , DBUS_MESSAGE_TYPE_SIGNAL , but other types are allowed and all code must silently ignore dbus_message_get_type_APIParam_1 of unknown type",libdbus
null,null,"If the dbus_message_has_sender_APIParam_1 has no sender specified or has a different sender, returns FALSE","If the dbus_message_has_sender_APIParam_1 has no sender specified or has a different sender, returns FALSE",libdbus
null,null,So you can not use dbus_message_has_sender_APIName to see,So you can not use dbus_message_has_sender_APIName to see,libdbus
null,null,"If the dbus_message_is_error_APIParam_1 is not DBUS_MESSAGE_TYPE_ERROR , or has a different name, returns FALSE","If the dbus_message_is_error_APIParam_1 is not DBUS_MESSAGE_TYPE_ERROR , or has a different name, returns FALSE",libdbus
null,null,"If the dbus_message_is_method_call_APIParam_1 is not DBUS_MESSAGE_TYPE_METHOD_CALL , or has a different interface or member field, returns FALSE","If the dbus_message_is_method_call_APIParam_1 is not DBUS_MESSAGE_TYPE_METHOD_CALL , or has a different dbus_message_is_method_call_APIParam_2 or member field, returns FALSE",libdbus
null,null,"If the dbus_message_is_signal_APIParam_1 is not DBUS_MESSAGE_TYPE_SIGNAL , or has a different interface or member field, returns FALSE","If the dbus_message_is_signal_APIParam_1 is not DBUS_MESSAGE_TYPE_SIGNAL , or has a different dbus_message_is_signal_APIParam_2 or member field, returns FALSE",libdbus
null,null,The D-Bus protocol allows dbus_message_is_method_call_APIParam_3 callers to leave out the interface name,The dbus_message_is_method_call_APIParam_1 allows dbus_message_is_method_call_APIParam_3 callers to leave out the interface name,libdbus
If the interface field is missing,If the call dbus_message_is_signal_APIName with interface field,it will be assumed equal to the provided interface,it will be assumed equal to the provided dbus_message_is_method_call_APIParam_2,libdbus
when you have open containers,when you have open containers,This should only be used to abandon creation of a message,This should only be used to abandon creation of a dbus_message_iter_abandon_container_APIParam_2,libdbus
null,null,The `` value '' argument should be the address of a basic-typed dbus_message_iter_append_basic_APIParam_3,The  value  argument should be the address of a basic_typed dbus_message_iter_append_basic_APIParam_3,libdbus
null,null,return result,return result,libdbus
null,null,dbus_bool_t result = FALSE,dbus_bool_t result = FALSE,libdbus
null,null,result = TRUE,result = TRUE,libdbus
null,null,You may call dbus_message_iter_append_fixed_array_APIName multiple times for the same array,You may call dbus_message_iter_append_fixed_array_APIName multiple dbus_message_iter_append_fixed_array_APIParam_1 for the same array,libdbus
null,null,You must call dbus_message_iter_open_container_APIName to open an array of values before calling this function,You must call dbus_message_iter_open_container_APIName to open an array of values before calling this function,libdbus
null,null,The `` value '' argument should be the address of the array,The  value  argument should be the address of the array,libdbus
null,null,"It must not be closed again with this function , or abandoned with dbus_message_iter_abandon_container_APIName","It must not be closed again with this function , or abandoned with dbus_message_iter_abandon_container_APIName",libdbus
null,null,"If the iterator is at the end of the message, returns DBUS_TYPE_INVALID","If the dbus_message_iter_get_arg_type_APIParam_1 is at the end of the message, returns DBUS_TYPE_INVALID",libdbus
Even if dbus_message_iter_close_container_APIName fails due to lack of memory,Even if dbus_message_iter_close_container_APIName fails due to lack of memory,the sub-iterator dbus_message_iter_close_container_APIParam_2 has been closed and invalidated,the sub_iterator dbus_message_iter_close_container_APIParam_2 has been closed and invalidated,libdbus
null,null,You can thus write a loop as follows,You can call dbus_connection_read_write_APIName with loop as follows,libdbus
null,null,The iterator must currently be inside an array-typed value,The dbus_message_iter_get_array_len_APIParam_1 must currently be inside an array_typed value,libdbus
null,null,Use dbus_message_iter_get_element_count_APIName instead,Use dbus_message_iter_get_element_count_APIName instead,libdbus
null,null,Why would you want to know how many bytes are in the array as marshaled in the wire protocol ?,Why would you want to know how many bytes are in the array as marshaled in the wire protocol,libdbus
null,null,The dbus_message_iter_get_basic_APIParam_2 argument should be the address of a location to store dbus_message_iter_get_basic_APIParam_0,The dbus_message_iter_get_basic_APIParam_2 argument should be the address of a location to store dbus_message_iter_get_basic_APIParam_0,libdbus
null,null,The dbus_message_iter_get_fixed_array_APIParam_2 argument should be the address of a location to store dbus_message_iter_get_fixed_array_APIParam_0,The dbus_message_iter_get_fixed_array_APIParam_2 argument should be the address of a location to store dbus_message_iter_get_fixed_array_APIParam_0,libdbus
null,null,dbus_message_iter_get_basic_APIParam_0 is by reference and should not be freed,dbus_message_iter_get_basic_APIParam_0 is by reference and should not be freed,libdbus
null,null,So for int32 it should be a `` dbus_int32_t * '' and for string a `` const char ** '',So for int32 it should be a  dbus_int32_t dbus_message_iter_get_basic_APIParam_1  and for string a  const char,libdbus
null,null,To read any container type you will need to recurse into the container with dbus_message_iter_recurse_APIName,To read any container type you will need to call dbus_message_iter_recurse_APIName with recurse container with dbus_message_iter_recurse_APIName,libdbus
when you do not need them anymore,when you do not need them anymore,It is your job to close them,It is your job to close them,libdbus
null,null,Note that you need to check that the iterator points to an array prior to using this function,Note that you need to check that the dbus_message_iter_get_element_type_APIParam_1 to an array prior to using this function,libdbus
null,null,The message dbus_message_iter_get_fixed_array_APIParam_1 should be `` in '' the array,The message dbus_message_iter_get_fixed_array_APIParam_1 should be  in  the array,libdbus
when you try to use an integer as a string or something,when you try to use an integer as a string or something,you 'll crash,you will crash,libdbus
null,null,"Be sure you have somehow checked that dbus_message_iter_get_arg_type_APIName matches the type you are expecting , or","Be sure you have somehow checked that dbus_message_iter_get_arg_type_APIName matches the type you are expecting , or",libdbus
null,null,Be sure you have somehow checked that dbus_message_iter_get_arg_type_APIName matches the type you are expecting to recurse into,Be sure you have somehow checked that dbus_message_iter_get_arg_type_APIName matches the type you are expecting to recurse into,libdbus
null,null,dbus_message_iter_get_fixed_array_APIName should only be used if dbus_type_is_fixed_APIName returns TRUE for the element type,dbus_message_iter_get_fixed_array_APIName should only be used if dbus_type_is_fixed_APIName returns TRUE for the dbus_message_iter_get_fixed_array_APIParam_3,libdbus
if the application was expected to exit before running the main loop,if the application was expected to exit before call dbus_connection_read_write_APIName with loop,dbus_connection_flush_APIName should only be used,dbus_connection_flush_APIName should only be used,libdbus
null,null,So for int32 it should be a `` const dbus_int32_t ** '' dbus_message_iter_get_fixed_array_APIParam_0 dbus_message_iter_get_fixed_array_APIParam_2 is by reference and should not be freed,So for int32 it should be a  dbus_message_iter_get_fixed_array_APIParam_1 **  dbus_message_iter_get_fixed_array_APIParam_0 dbus_message_iter_get_fixed_array_APIParam_2 is by reference and should not be freed,libdbus
null,null,"dbus_message_iter_get_signature_APIName return the contained signature, or NULL if out of memory","dbus_message_iter_get_signature_APIName return the contained signature, or NULL if out of memory",libdbus
null,null,Some types of argument can only be read with DBusMessageIter however,Some types of argument can only be read with dbus_message_iter_init_APIParam_2 however,libdbus
null,null,"it need not be freed , and can be copied by assignment or memcpy_APIName","it need not be freed , and can be copied by assignment or memcpy_APIName",libdbus
null,null,"If there no next field, returns FALSE","If there no next field, returns FALSE",libdbus
null,null,"If the iterator moves forward, returns TRUE","If the dbus_message_iter_next_APIParam_1 moves forward, returns TRUE",libdbus
null,null,"On success , you are required to append the contents of the container using dbus_message_iter_open_container_APIParam_0 sub-iterator , and call dbus_message_iter_close_container_APIName","On success , you are required to call dbus_message_iter_append_basic_APIName with dbus_message_iter_open_container_APIParam_3 of the dbus_message_iter_open_container_APIParam_3 using dbus_message_iter_open_container_APIParam_0 sub_iterator , and call dbus_message_iter_close_container_APIName",libdbus
null,null,"For variants , the dbus_message_iter_open_container_APIParam_3 should be the dbus_message_iter_open_container_APIParam_2 of the single value inside the variant","For variants , the dbus_message_iter_open_container_APIParam_3 should be the dbus_message_iter_open_container_APIParam_2 of the single value inside the variant",libdbus
null,null,"For arrays , dbus_message_iter_open_container_APIParam_3 should be the dbus_message_iter_open_container_APIParam_2 of the array elements","For arrays , dbus_message_iter_open_container_APIParam_3 should be the dbus_message_iter_open_container_APIParam_2 of the array elements",libdbus
null,null,"For structs and dict entries , dbus_message_iter_open_container_APIParam_3 should be NULL","For structs and dbus_message_iter_open_container_APIParam_1 , dbus_message_iter_open_container_APIParam_3 should be NULL",libdbus
null,null,"However , after dbus_message_iter_open_container_APIName has either succeeded or failed , it is valid to call dbus_message_iter_abandon_container_if_open_APIName","However , after dbus_message_iter_open_container_APIName has either succeeded or failed , it is valid to call dbus_message_iter_abandon_container_if_open_APIName",libdbus
null,null,"dbus_message_lock_APIName may also called externally , for applications wrapping D-Bus in another protocol","dbus_message_lock_APIName may also called externally , for applications call dbus_message_demarshal_APIName with dbus_message_lock_APIParam_1 in another protocol",libdbus
if the value exists,if the value exists,you can only recurse,you can only recurse,libdbus
if there is no container to recurse into at the current iterator position,if there is no container to call dbus_signature_iter_recurse_APIName with recurse iterator position,Results of dbus_message_iter_recurse_APIName are undefined,Results of dbus_message_iter_recurse_APIName are undefined,libdbus
null,null,dbus_message_marshal_APIParam_2 is the location to save the marshalled form to,dbus_message_marshal_APIParam_2 is the location to save the marshalled form to,libdbus
null,null,dbus_message_marshal_APIParam_3 is the location to save the length of the marshalled form to,dbus_message_marshal_APIParam_3 is the location to save the dbus_message_marshal_APIParam_3 of the marshalled form to,libdbus
null,null,"Usually you want to use dbus_message_new_method_call_APIName , dbus_message_new_method_return_APIName , dbus_message_new_signal_APIName , or dbus_message_new_error_APIName instead","Usually you want to use dbus_message_new_method_call_APIName , dbus_message_new_method_return_APIName , dbus_message_new_signal_APIName , or dbus_message_new_error_APIName instead",libdbus
null,null,The error name must be a valid error name according to the syntax given in the D-Bus specification,The error name must be a valid error name according to the syntax call dbus_message_demarshal_APIName with dbus_message_new_error_APIParam_1,libdbus
If you do not want to make up an error name,If you do not want to make up an error name,just use DBUS_ERROR_FAILED,just use DBUS_ERROR_FAILED,libdbus
null,null,dbus_message_new_error_printf_APIName return a new error message,dbus_message_new_error_printf_APIName return a new dbus_message_new_error_printf_APIParam_3,libdbus
null,null,The dbus_message_new_method_call_APIParam_2 and dbus_message_new_method_call_APIParam_4 names may not be NULL,The dbus_message_new_method_call_APIParam_2 and dbus_message_new_method_call_APIParam_4 names may not be NULL,libdbus
null,null,The dbus_message_new_method_call_APIParam_1 may be NULL in which case no dbus_message_new_method_call_APIParam_1 is set,The dbus_message_new_method_call_APIParam_1 may be NULL in which case no dbus_message_new_method_call_APIParam_1 is set,libdbus
null,null,"Destination , dbus_message_new_method_call_APIParam_2 , interface , and dbus_message_new_method_call_APIParam_4 name can not contain any invalid characters","dbus_message_new_method_call_APIParam_1 , dbus_message_new_method_call_APIParam_2 , dbus_message_new_method_call_APIParam_3 , and dbus_message_new_method_call_APIParam_4 name can not contain any invalid dbus_message_new_method_call_APIParam_4",libdbus
null,null,dbus_message_new_method_call_APIParam_2 is object dbus_message_new_method_call_APIParam_2 the message should be sent to,dbus_message_new_method_call_APIParam_2 is object dbus_message_new_method_call_APIParam_2 the dbus_message_new_method_call_APIParam_0 should be sent to,libdbus
null,null,dbus_message_new_method_call_APIParam_1 is name that the message should be sent to or NULL,dbus_message_new_method_call_APIParam_1 is name that the dbus_message_new_method_call_APIParam_0 should be sent to or NULL,libdbus
null,null,"dbus_message_new_method_call_APIParam_4 is on , or NULL dbus_message_new_method_call_APIParam_4 method to invoke","dbus_message_new_method_call_APIParam_4 is on , or NULL dbus_message_new_method_call_APIParam_4 method to invoke",libdbus
null,null,"The main implication of this is that , but it will have no values , so you will not be able to recurse further","The main implication of this is that , but it will have no values , so you will not be able to recurse further",libdbus
null,null,"The interface may be NULL , which","The dbus_message_new_method_call_APIParam_3 may be NULL , which",libdbus
null,null,"Path , interface , and signal dbus_message_new_signal_APIParam_3 must all be valid","dbus_message_new_signal_APIParam_1 , dbus_message_new_signal_APIParam_2 , and signal dbus_message_new_signal_APIParam_3 must all be valid",libdbus
null,null,dbus_message_ref_APIName return the dbus_message_ref_APIParam_1 See also dbus_message_unref,dbus_message_ref_APIName return the dbus_message_ref_APIParam_1 See also dbus_message_ref_APIParam_1,libdbus
null,null,"For messages whose type is not DBUS_MESSAGE_TYPE_METHOD_CALL , this flag is meaningless and should not be set","For dbus_message_set_allow_interactive_authorization_APIParam_1 whose type is not DBUS_MESSAGE_TYPE_METHOD_CALL , this flag is meaningless and should not be set",libdbus
if interactive authorization is acceptable,if interactive authorization is acceptable,dbus_message_set_allow_interactive_authorization_APIParam_2 is TRUE,dbus_message_set_allow_interactive_authorization_APIParam_2 is TRUE,libdbus
if auto-starting is desired,if auto_starting is desired,dbus_message_set_auto_start_APIParam_2 is TRUE,dbus_message_set_auto_start_APIParam_2 is TRUE,libdbus
if no reply is desired,if no reply is desired,dbus_message_set_no_reply_APIParam_2 is TRUE,dbus_message_set_no_reply_APIParam_2 is TRUE,libdbus
if _exit_APIName should be called after a disconnect signal,if _exit_APIName should be called after a disconnect signal,dbus_connection_set_exit_on_disconnect_APIParam_2 is TRUE,dbus_connection_set_exit_on_disconnect_APIParam_2 is TRUE,libdbus
null,null,It may use the error DBUS_ERROR_INTERACTIVE_AUTHORIZATION_REQUIRED to signal that,It may use the dbus_message_set_allow_interactive_authorization_APIParam_0 to signal that,libdbus
null,null,dbus_message_set_container_instance_APIParam_2 is the path or NULL to unset,dbus_message_set_container_instance_APIParam_2 is the dbus_message_set_container_instance_APIParam_2 or NULL to unset,libdbus
null,null,dbus_message_set_path_APIParam_2 is the path or NULL to unset,dbus_message_set_path_APIParam_2 is the dbus_message_set_path_APIParam_2 or NULL to unset,libdbus
null,null,The path must contain only valid characters for an object path as defined in the D-Bus specification,The dbus_message_set_container_instance_APIParam_2 must contain only valid dbus_message_set_container_instance_APIParam_2 for an object dbus_message_set_container_instance_APIParam_2 as defined in the dbus_message_set_container_instance_APIParam_1,libdbus
null,null,dbus_message_set_destination_APIParam_2 is the dbus_message_set_destination_APIParam_2 name or NULL to unset,dbus_message_set_destination_APIParam_2 is the dbus_message_set_destination_APIParam_2 name or NULL to unset,libdbus
null,null,The dbus_message_set_destination_APIParam_2 name must contain only valid characters as defined in the D-Bus specification,The dbus_message_set_destination_APIParam_2 name must contain only valid dbus_message_set_destination_APIParam_2 as defined in the dbus_message_set_destination_APIParam_1,libdbus
null,null,The dbus_message_set_member_APIParam_2 name must contain only valid characters as defined in the D-Bus specification,The dbus_message_set_member_APIParam_2 name must contain only valid dbus_message_set_member_APIParam_2 as defined in the dbus_message_set_member_APIParam_1,libdbus
null,null,The error name must contain only valid characters as defined in the D-Bus specification,The error name must contain only valid dbus_message_set_error_name_APIParam_2 as defined in the dbus_message_set_error_name_APIParam_1,libdbus
null,null,dbus_message_set_error_name_APIParam_2 is the name or NULL to unset,dbus_message_set_error_name_APIParam_2 is the name or NULL to unset,libdbus
null,null,dbus_message_set_interface_APIParam_2 is the interface or NULL to unset,dbus_message_set_interface_APIParam_2 is the dbus_message_set_interface_APIParam_2 or NULL to unset,libdbus
null,null,The interface name must contain only valid characters as defined in the D-Bus specification,The interface name must contain only valid dbus_message_set_interface_APIParam_2 as defined in the dbus_message_set_interface_APIParam_1,libdbus
null,null,dbus_message_set_member_APIParam_2 is the dbus_message_set_member_APIParam_2 or NULL to unset,dbus_message_set_member_APIParam_2 is the dbus_message_set_member_APIParam_2 or NULL to unset,libdbus
null,null,dbus_message_set_sender_APIParam_2 is the dbus_message_set_sender_APIParam_2 or NULL to unset,dbus_message_set_sender_APIParam_2 is the dbus_message_set_sender_APIParam_2 or NULL to unset,libdbus
null,null,The path must contain only valid characters as defined in the D-Bus specification,The dbus_message_set_path_APIParam_2 must contain only valid dbus_message_set_path_APIParam_2 as defined in the dbus_message_set_path_APIParam_1,libdbus
null,null,The dbus_message_set_sender_APIParam_2 must be a valid bus name as defined in the D-Bus specification,The dbus_message_set_sender_APIParam_2 must be a valid bus name as defined in the dbus_message_set_sender_APIParam_1,libdbus
null,null,Usually you do not want to call this,Usually you do not want to call this,libdbus
null,null,This can only be done once on a dbus_message_set_serial_APIParam_1,This can only be done once on a dbus_message_set_serial_APIParam_1,libdbus
If you are not implementing a dbus_message_set_sender_APIParam_1 bus,If you are not implementing a dbus_message_set_sender_APIParam_1 bus,daemon you should not need to set the dbus_message_set_sender_APIParam_2,daemon you should not need to set the dbus_message_set_sender_APIParam_2,libdbus
null,null,"If the iterator is pointing at a type code such as ', the iterator will be returned directly","If the dbus_signature_iter_get_current_type_APIParam_1 is call dbus_signature_iter_recurse_APIName with type code such as ', the dbus_signature_iter_get_current_type_APIParam_1 will be returned directly",libdbus
null,null,"DBUS_TYPE_STRUCT , not ' -LRB- '","DBUS_TYPE_STRUCT , not ' _LRB",libdbus
"when encapsulating messages in another protocol , or otherwise bypassing DBusConnection","when encapsulating messages in another protocol , or call dbus_connection_ref_APIName with DBusConnection",dbus_message_set_serial_APIName is only needed,dbus_message_set_serial_APIName is only needed,libdbus
if the dbus_set_error_from_message_APIParam_2 is an dbus_set_error_from_message_APIParam_1 dbus_set_error_from_message_APIParam_2,if the dbus_set_error_from_message_APIParam_2 is an dbus_set_error_from_message_APIParam_1 dbus_set_error_from_message_APIParam_2,"The dbus_set_error_from_message_APIParam_1 is only set , as in DBUS_MESSAGE_TYPE_ERROR","The dbus_set_error_from_message_APIParam_1 is only set , as in DBUS_MESSAGE_TYPE_ERROR",libdbus
null,null,you should initialize a sub-iterator with dbus_signature_iter_recurse_APIName to parse the container type,you should initialize a dbus_signature_iter_get_current_type_APIParam_1 with dbus_signature_iter_recurse_APIName to call dbus_type_is_container_APIName with dbus_signature_iter_get_current_type_APIParam_1,libdbus
null,null,Returns the signature of the single complete type starting at the given iterator,Returns the dbus_signature_iter_get_signature_APIParam_1 of the single complete type starting at the given dbus_signature_iter_get_signature_APIParam_1,libdbus
null,null,"If the iterator is pointing at one of the ""i"" just that ""i"" would be returned","If the dbus_signature_iter_get_signature_APIParam_1 is pointing at one of the ""i"" just that ""i"" would be returned",libdbus
null,null,Should be freed with dbus_free_APIName,Should be freed with dbus_free_APIName,libdbus
if you invoke dbus_signature_iter_get_element_type_APIName when the current type of the iterator is not DBUS_TYPE_ARRAY,if you invoke dbus_signature_iter_get_element_type_APIName when the current type of the iterator is not DBUS_TYPE_ARRAY,Undefined behavior results,Undefined behavior results,libdbus
null,null,dbus_signature_iter_init_APIName is not safe to use on invalid signatures,dbus_signature_iter_init_APIName is not safe to use on invalid dbus_signature_iter_init_APIParam_2,libdbus
null,null,Returns FALSE at the end of the current container,Returns FALSE at the end of the current container,libdbus
null,null,be sure to validate potentially invalid signatures with dbus_signature_validate before using this function,be sure to validate potentially invalid dbus_signature_iter_init_APIParam_2 with dbus_signature_iter_init_APIParam_2 before using this function,libdbus
null,null,if dbus_type_is_container_APIName returns FALSE for the result of dbus_signature_iter_get_current_type_APIName ),if dbus_type_is_container_APIName returns FALSE for the result of dbus_signature_iter_get_current_type_APIName,libdbus
null,null,"if the iterator is pointing at the start of ""ii"" , """" would be returned","if the dbus_signature_iter_get_signature_APIParam_1 is pointing at the dbus_signature_iter_get_signature_APIParam_1 of ""ii"" , """" would be returned",libdbus
if you do not care about having an dbus_signature_validate_APIParam_2 name and message,if you do not care about having an dbus_signature_validate_APIParam_2 name and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_bus_name_APIParam_2 dbus_validate_bus_name_APIParam_1 and message,if you do not care about having an dbus_validate_bus_name_APIParam_2 dbus_validate_bus_name_APIParam_1 and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_error_name_APIParam_2 dbus_validate_error_name_APIParam_1 and message,if you do not care about having an dbus_validate_error_name_APIParam_2 dbus_validate_error_name_APIParam_1 and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_interface_APIParam_2 dbus_validate_interface_APIParam_1 and message,if you do not care about having an dbus_validate_interface_APIParam_2 dbus_validate_interface_APIParam_1 and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_member_APIParam_2 dbus_validate_member_APIParam_1 and message,if you do not care about having an dbus_validate_member_APIParam_2 dbus_validate_member_APIParam_1 and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_path_APIParam_2 name and message,if you do not care about having an dbus_validate_path_APIParam_2 name and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_utf8_APIParam_2 name and message,if you do not care about having an dbus_validate_utf8_APIParam_2 name and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_signature_validate_APIParam_2 name and message,if you do not care about having an dbus_signature_validate_APIParam_2 name and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_bus_name_APIParam_2 dbus_validate_bus_name_APIParam_1 and message,if you do not care about having an dbus_validate_bus_name_APIParam_2 dbus_validate_bus_name_APIParam_1 and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_error_name_APIParam_2 dbus_validate_error_name_APIParam_1 and message,if you do not care about having an dbus_validate_error_name_APIParam_2 dbus_validate_error_name_APIParam_1 and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_interface_APIParam_2 dbus_validate_interface_APIParam_1 and message,if you do not care about having an dbus_validate_interface_APIParam_2 dbus_validate_interface_APIParam_1 and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_member_APIParam_2 dbus_validate_member_APIParam_1 and message,if you do not care about having an dbus_validate_member_APIParam_2 dbus_validate_member_APIParam_1 and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_path_APIParam_2 name and message,if you do not care about having an dbus_validate_path_APIParam_2 name and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_utf8_APIParam_2 name and message,if you do not care about having an dbus_validate_utf8_APIParam_2 name and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_signature_validate_APIParam_2 name and message,if you do not care about having an dbus_signature_validate_APIParam_2 name and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_bus_name_APIParam_2 dbus_validate_bus_name_APIParam_1 and message,if you do not care about having an dbus_validate_bus_name_APIParam_2 dbus_validate_bus_name_APIParam_1 and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_error_name_APIParam_2 dbus_validate_error_name_APIParam_1 and message,if you do not care about having an dbus_validate_error_name_APIParam_2 dbus_validate_error_name_APIParam_1 and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_interface_APIParam_2 dbus_validate_interface_APIParam_1 and message,if you do not care about having an dbus_validate_interface_APIParam_2 dbus_validate_interface_APIParam_1 and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_member_APIParam_2 dbus_validate_member_APIParam_1 and message,if you do not care about having an dbus_validate_member_APIParam_2 dbus_validate_member_APIParam_1 and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_path_APIParam_2 name and message,if you do not care about having an dbus_validate_path_APIParam_2 name and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_utf8_APIParam_2 name and message,if you do not care about having an dbus_validate_utf8_APIParam_2 name and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_signature_validate_APIParam_2 name and message,if you do not care about having an dbus_signature_validate_APIParam_2 name and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_bus_name_APIParam_2 dbus_validate_bus_name_APIParam_1 and message,if you do not care about having an dbus_validate_bus_name_APIParam_2 dbus_validate_bus_name_APIParam_1 and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_error_name_APIParam_2 dbus_validate_error_name_APIParam_1 and message,if you do not care about having an dbus_validate_error_name_APIParam_2 dbus_validate_error_name_APIParam_1 and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_interface_APIParam_2 dbus_validate_interface_APIParam_1 and message,if you do not care about having an dbus_validate_interface_APIParam_2 dbus_validate_interface_APIParam_1 and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_member_APIParam_2 dbus_validate_member_APIParam_1 and message,if you do not care about having an dbus_validate_member_APIParam_2 dbus_validate_member_APIParam_1 and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_path_APIParam_2 name and message,if you do not care about having an dbus_validate_path_APIParam_2 name and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_utf8_APIParam_2 name and message,if you do not care about having an dbus_validate_utf8_APIParam_2 name and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_signature_validate_APIParam_2 name and message,if you do not care about having an dbus_signature_validate_APIParam_2 name and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_bus_name_APIParam_2 dbus_validate_bus_name_APIParam_1 and message,if you do not care about having an dbus_validate_bus_name_APIParam_2 dbus_validate_bus_name_APIParam_1 and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_error_name_APIParam_2 dbus_validate_error_name_APIParam_1 and message,if you do not care about having an dbus_validate_error_name_APIParam_2 dbus_validate_error_name_APIParam_1 and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_interface_APIParam_2 dbus_validate_interface_APIParam_1 and message,if you do not care about having an dbus_validate_interface_APIParam_2 dbus_validate_interface_APIParam_1 and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_member_APIParam_2 dbus_validate_member_APIParam_1 and message,if you do not care about having an dbus_validate_member_APIParam_2 dbus_validate_member_APIParam_1 and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_path_APIParam_2 name and message,if you do not care about having an dbus_validate_path_APIParam_2 name and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_utf8_APIParam_2 name and message,if you do not care about having an dbus_validate_utf8_APIParam_2 name and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_signature_validate_APIParam_2 name and message,if you do not care about having an dbus_signature_validate_APIParam_2 name and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_bus_name_APIParam_2 dbus_validate_bus_name_APIParam_1 and message,if you do not care about having an dbus_validate_bus_name_APIParam_2 dbus_validate_bus_name_APIParam_1 and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_error_name_APIParam_2 dbus_validate_error_name_APIParam_1 and message,if you do not care about having an dbus_validate_error_name_APIParam_2 dbus_validate_error_name_APIParam_1 and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_interface_APIParam_2 dbus_validate_interface_APIParam_1 and message,if you do not care about having an dbus_validate_interface_APIParam_2 dbus_validate_interface_APIParam_1 and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_member_APIParam_2 dbus_validate_member_APIParam_1 and message,if you do not care about having an dbus_validate_member_APIParam_2 dbus_validate_member_APIParam_1 and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_path_APIParam_2 name and message,if you do not care about having an dbus_validate_path_APIParam_2 name and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_utf8_APIParam_2 name and message,if you do not care about having an dbus_validate_utf8_APIParam_2 name and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_signature_validate_APIParam_2 name and message,if you do not care about having an dbus_signature_validate_APIParam_2 name and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_bus_name_APIParam_2 dbus_validate_bus_name_APIParam_1 and message,if you do not care about having an dbus_validate_bus_name_APIParam_2 dbus_validate_bus_name_APIParam_1 and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_error_name_APIParam_2 dbus_validate_error_name_APIParam_1 and message,if you do not care about having an dbus_validate_error_name_APIParam_2 dbus_validate_error_name_APIParam_1 and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_interface_APIParam_2 dbus_validate_interface_APIParam_1 and message,if you do not care about having an dbus_validate_interface_APIParam_2 dbus_validate_interface_APIParam_1 and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_member_APIParam_2 dbus_validate_member_APIParam_1 and message,if you do not care about having an dbus_validate_member_APIParam_2 dbus_validate_member_APIParam_1 and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_path_APIParam_2 name and message,if you do not care about having an dbus_validate_path_APIParam_2 name and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
if you do not care about having an dbus_validate_utf8_APIParam_2 name and message,if you do not care about having an dbus_validate_utf8_APIParam_2 name and message,NULL can always be passed instead of a DBusError *,NULL can always be passed instead of a dbus_validate_utf8_APIParam_2,libdbus
when calling this,when calling this,The results are undefined if the current type is a non-container -LRB- i.e,The results are undefined if the current type is a dbus_signature_iter_recurse_APIParam_1 _LRB_ dbus_signature_iter_recurse_APIParam_1,libdbus
If you dbus_connection_unref_APIName for the last time without closing the dbus_connection_close_APIParam_1,If you dbus_connection_unref_APIName for the last time without closing the dbus_connection_close_APIParam_1,the results are undefined,the results are undefined,libdbus
null,null,DBUS_TYPE_INVALID is not a basic type,DBUS_TYPE_INVALID is not a basic dbus_type_is_basic_APIParam_1,libdbus
null,null,dbus_type_is_basic_APIParam_1 is either a valid type-code or DBUS_TYPE_INVALID,dbus_type_is_basic_APIParam_1 is either a valid dbus_type_is_basic_APIParam_1 or DBUS_TYPE_INVALID,libdbus
null,null,dbus_type_is_container_APIParam_1 is either a valid type-code or DBUS_TYPE_INVALID,dbus_type_is_container_APIParam_1 is either a valid dbus_type_is_container_APIParam_1 or DBUS_TYPE_INVALID,libdbus
null,null,dbus_type_is_fixed_APIParam_1 is either a valid type-code or DBUS_TYPE_INVALID,dbus_type_is_fixed_APIParam_1 is either a valid dbus_type_is_fixed_APIParam_1 or DBUS_TYPE_INVALID,libdbus
null,null,"It is an error to pass an invalid type-code , other than DBUS_TYPE_INVALID , to this function","It is an error to pass an invalid dbus_type_is_fixed_APIParam_1 , other than DBUS_TYPE_INVALID , to this function",libdbus
null,null,"It is an error to pass an invalid type-code , other than DBUS_TYPE_INVALID , to this function","It is an error to pass an invalid dbus_type_is_fixed_APIParam_1 , other than DBUS_TYPE_INVALID , to this function",libdbus
null,null,"It is an error to pass an invalid type-code , other than DBUS_TYPE_INVALID , to this function","It is an error to pass an invalid dbus_type_is_fixed_APIParam_1 , other than DBUS_TYPE_INVALID , to this function",libdbus
null,null,"It is an error to pass an invalid type-code , other than DBUS_TYPE_INVALID , to this function","It is an error to pass an invalid dbus_type_is_fixed_APIParam_1 , other than DBUS_TYPE_INVALID , to this function",libdbus
null,null,"It is an error to pass an invalid type-code , other than DBUS_TYPE_INVALID , to this function","It is an error to pass an invalid dbus_type_is_fixed_APIParam_1 , other than DBUS_TYPE_INVALID , to this function",libdbus
null,null,"It is an error to pass an invalid type-code , other than DBUS_TYPE_INVALID , to this function","It is an error to pass an invalid dbus_type_is_fixed_APIParam_1 , other than DBUS_TYPE_INVALID , to this function",libdbus
null,null,"It is an error to pass an invalid type-code , other than DBUS_TYPE_INVALID , to this function","It is an error to pass an invalid dbus_type_is_fixed_APIParam_1 , other than DBUS_TYPE_INVALID , to this function",libdbus
null,null,"It is an error to pass an invalid type-code , other than DBUS_TYPE_INVALID , to this function","It is an error to pass an invalid dbus_type_is_fixed_APIParam_1 , other than DBUS_TYPE_INVALID , to this function",libdbus
null,null,"It is an error to pass an invalid type-code , other than DBUS_TYPE_INVALID , to this function","It is an error to pass an invalid dbus_type_is_fixed_APIParam_1 , other than DBUS_TYPE_INVALID , to this function",libdbus
null,null,DBUS_TYPE_INVALID is not a container type,DBUS_TYPE_INVALID is not a dbus_type_is_container_APIParam_1,libdbus
null,null,dbus_type_is_valid_APIName is safe with untrusted data,dbus_type_is_valid_APIName is safe with untrusted data,libdbus
null,null,dbus_type_is_valid_APIName return TRUE if valid,dbus_type_is_valid_APIName return TRUE if valid,libdbus
null,null,"DBUS_TYPE_INVALID surprisingly enough is not considered valid , and random unknown bytes are not either","DBUS_TYPE_INVALID surprisingly enough is not considered valid , and random unknown bytes are not either",libdbus
null,null,The slot must be initialized with -1,The dbus_server_allocate_data_slot_APIParam_1 must be initialized with _1,libdbus
null,null,"For this purpose , you assume that the first byte of the old and new value would be in the same location , so alignment padding is not a factor","For this purpose , you assume that the first byte of the old and new value would be in the same location , so alignment padding is not a factor",libdbus
null,null,dbus_server_allocate_data_slot_APIName return FALSE on no memory,dbus_server_allocate_data_slot_APIName return FALSE on no memory,libdbus
If called more than once,If called more than once,only the first call has an effect,only the first call has an effect,libdbus
null,null,dbus_server_get_address_APIName return the address or NULL if no memory,dbus_server_get_address_APIName return the address or NULL if no memory,libdbus
null,null,"Returns the address of the dbus_server_get_address_APIParam_1 , as a newly-allocated string which must be freed by the caller","Returns the address of the dbus_server_get_address_APIParam_1 , as a newly_allocated dbus_server_get_address_APIParam_0 which must be freed by the caller",libdbus
null,null,dbus_connection_open_APIName can re-use an existing connection with the same ID instead of opening a new connection,dbus_connection_open_APIName can re_use an existing dbus_connection_open_APIParam_1 with the same ID instead of call dbus_connection_open_private_APIName with connection,libdbus
null,null,This is an ID unique to each DBusServer,This is an ID unique to each dbus_server_get_id_APIParam_1,libdbus
null,null,"Returns the unique ID of the dbus_server_get_id_APIParam_1 , as a newly-allocated string which must be freed by the caller","Returns the unique ID of the dbus_server_get_id_APIParam_1 , as a newly_allocated dbus_server_get_id_APIParam_0 which must be freed by the caller",libdbus
null,null,"Remember that a DBusServer represents only one mode of connecting , so e.g","Remember that a dbus_server_get_id_APIParam_1 represents only one mode of connecting , so e.g",libdbus
null,null,dbus_server_get_id_APIName return the id of the dbus_server_get_id_APIParam_1 or NULL if no memory,dbus_server_get_id_APIName return the id of the dbus_server_get_id_APIParam_1 or NULL if no memory,libdbus
null,null,a bus daemon can listen on multiple addresses which will mean it has multiple DBusServer each with their own ID,a dbus_server_get_id_APIParam_1 can listen on multiple addresses which will mean it has multiple dbus_server_get_id_APIParam_1 each with their own ID,libdbus
null,null,The ID is not a UUID in the sense of RFC4122,The ID is not a UUID in the sense of RFC4122,libdbus
null,null,Otherwise returns a new DBusServer,Otherwise returns a new dbus_server_listen_APIParam_0,libdbus
null,null,"To free the server , applications must call first dbus_server_disconnect_APIName and dbus_server_unref_APIName","To free the dbus_server_listen_APIParam_0 , applications must call first dbus_server_disconnect_APIName and dbus_server_unref_APIName",libdbus
null,null,"dbus_server_set_new_connection_function_APIName , dbus_server_set_watch_functions_APIName , and dbus_server_set_timeout_functions_APIName should be called immediately to render the server fully functional","dbus_server_set_new_connection_function_APIName , dbus_server_set_watch_functions_APIName , and dbus_server_set_timeout_functions_APIName should be called immediately to call dbus_server_disconnect_APIName with dbus_server_listen_APIParam_0 fully functional",libdbus
null,null,"dbus_server_listen_APIName return a new DBusServer , or NULL on failure","dbus_server_listen_APIName return a new dbus_server_listen_APIParam_0 , or NULL on failure",libdbus
if listening fails for any reason,if listening fails for any reason,Returns NULL and sets dbus_server_listen_APIParam_2,Returns NULL and sets dbus_server_listen_APIParam_2,libdbus
null,null,dbus_server_set_auth_mechanisms_APIName only affects connections created after it is called,dbus_server_set_auth_mechanisms_APIName only affects dbus_server_set_auth_mechanisms_APIParam_2 created after it is called,libdbus
null,null,Pass NULL instead of an array to use all available dbus_server_set_auth_mechanisms_APIParam_2,Pass NULL instead of an array to use all available dbus_server_set_auth_mechanisms_APIParam_2,libdbus
null,null,These functions are responsible for making the application main loop aware of timeouts,These dbus_connection_set_timeout_functions_APIParam_6 are responsible for making the application main loop aware of dbus_connection_set_timeout_functions_APIParam_4,libdbus
null,null,These functions are responsible for making the application main loop aware of timeouts,These dbus_connection_set_timeout_functions_APIParam_6 are responsible for making the application main loop aware of dbus_connection_set_timeout_functions_APIParam_4,libdbus
null,null,These functions are responsible for making the application main loop aware of timeouts,These dbus_connection_set_timeout_functions_APIParam_6 are responsible for making the application main loop aware of dbus_connection_set_timeout_functions_APIParam_4,libdbus
null,null,These functions are responsible for making the application main loop aware of timeouts,These dbus_connection_set_timeout_functions_APIParam_6 are responsible for making the application main loop aware of dbus_connection_set_timeout_functions_APIParam_4,libdbus
null,null,These functions are responsible for making the application main loop aware of file descriptors that need to be monitored for events,These dbus_connection_set_watch_functions_APIParam_6 are responsible for making the application main loop aware of file descriptors that need to be monitored for events,libdbus
null,null,The dbus_server_unref_APIParam_1 must be disconnected before the refcount reaches zero,The dbus_server_unref_APIParam_1 must be disconnected before the refcount reaches zero,libdbus
null,null,"dbus_validate_bus_name_APIParam_1 is a potentially invalid bus dbus_validate_bus_name_APIParam_1 , which must not be NULL","dbus_validate_bus_name_APIParam_1 is a potentially invalid bus dbus_validate_bus_name_APIParam_1 , which must not be NULL",libdbus
null,null,"dbus_validate_error_name_APIParam_2 is dbus_validate_error_name_APIParam_1, which must not be NULL dbus_validate_error_name_APIParam_2 error return","dbus_validate_error_name_APIParam_2 is dbus_validate_error_name_APIParam_1, which must not be NULL dbus_validate_error_name_APIParam_2 error return",libdbus
null,null,dbus_validate_error_name_APIParam_1 is a potentially invalid,dbus_validate_error_name_APIParam_1 is a potentially invalid,libdbus
null,null,"dbus_validate_interface_APIParam_1 is a potentially invalid interface dbus_validate_interface_APIParam_1 , which must not be NULL","dbus_validate_interface_APIParam_1 is a potentially invalid interface dbus_validate_interface_APIParam_1 , which must not be NULL",libdbus
null,null,"dbus_validate_member_APIParam_1 is a potentially invalid member dbus_validate_member_APIParam_1 , which must not be NULL","dbus_validate_member_APIParam_1 is a potentially invalid member dbus_validate_member_APIParam_1 , which must not be NULL",libdbus
null,null,Strings on D-Bus must be valid UTF-8,Strings on dbus_validate_utf8_APIParam_2 must be valid UTF_8,libdbus
null,null,"dbus_validate_path_APIParam_1 is a potentially invalid object dbus_validate_path_APIParam_1 , which must not be NULL","dbus_validate_path_APIParam_1 is a potentially invalid object dbus_validate_path_APIParam_1 , which must not be NULL",libdbus
null,null,"dbus_validate_utf8_APIParam_1 is a string to be checked , which must not be NULL","dbus_validate_utf8_APIParam_1 is a dbus_validate_utf8_APIParam_1 to be checked , which must not be NULL",libdbus
null,null,"This is probably a feature , as filters could create arbitrary reentrancy","This is probably a feature , as filters could create arbitrary dbus_connection_add_filter_APIParam_4",libdbus
null,null,"The caller does not own a reference to dbus_connection_borrow_message_APIParam_0, and must either return it using dbus_connection_return_message_APIName or keep it after calling dbus_connection_steal_borrowed_message_APIName","The caller does not own a reference to dbus_connection_borrow_message_APIParam_0, and must either return it using dbus_connection_return_message_APIName or keep it after calling dbus_connection_steal_borrowed_message_APIName",libdbus
null,null,"If the queue is empty, returns NULL","If the queue is empty, returns NULL",libdbus
null,null,"If the queue is empty, returns NULL","If the queue is empty, returns NULL",libdbus
null,null,"If the queue is empty, returns NULL","If the queue is empty, returns NULL",libdbus
null,null,"If the queue is empty, returns NULL","If the queue is empty, returns NULL",libdbus
null,null,"This will always return TRUE for all types, with the exception of DBUS_TYPE_UNIX_FD","This will always return TRUE for all types, with the exception of DBUS_TYPE_UNIX_FD",libdbus
null,null,The function will return TRUE for DBUS_TYPE_UNIX_FD only on systems that know Unix file descriptors and can send them via the chosen transport and when the remote side supports this,The function will return TRUE for DBUS_TYPE_UNIX_FD only on systems that know Unix file descriptors and can send them via the chosen transport and when the remote side supports this,libdbus
null,null,"it will return FALSE for all types this implementation does not know, including invalid or reserved types","it will return FALSE for all dbus_connection_can_send_type_APIParam_2 this implementation does not know, including invalid or reserved dbus_connection_can_send_type_APIParam_2",libdbus
null,null,it is safe to close a dbus_connection_close_APIParam_1 more than once,it is safe to close a dbus_connection_close_APIParam_1 more than once,libdbus
null,null,all calls after the first do nothing,all calls after the first do nothing,libdbus
null,null,"it is impossible to `` reopen '' a dbus_connection_close_APIParam_1 , a new dbus_connection_close_APIParam_1 must be created","it is impossible to  reopen  a dbus_connection_close_APIParam_1 , a new dbus_connection_close_APIParam_1 must be created",libdbus
null,null,You must close a dbus_connection_close_APIParam_1 prior to releasing the last reference to the dbus_connection_close_APIParam_1,You must close a dbus_connection_close_APIParam_1 prior to call dbus_server_unref_APIName with reference to the dbus_connection_close_APIParam_1,libdbus
null,null,You may not close a shared dbus_connection_close_APIParam_1,You may not close a shared dbus_connection_close_APIParam_1,libdbus
null,null,"These connections are owned by libdbus , and applications should only unref them , never close them","These dbus_connection_close_APIParam_1 are owned by libdbus , and applications should only unref them , never close them",libdbus
null,null,Applications can know it is safe to unref these connections as the dbus_connection_close_APIParam_1 is open,Applications can know it is safe to unref these dbus_connection_close_APIParam_1 as the dbus_connection_close_APIParam_1 is open,libdbus
if the dbus_connection_close_APIParam_1 is not already disconnected,if the dbus_connection_close_APIParam_1 is not already disconnected,The creator of these connections is responsible for calling dbus_connection_close_APIName prior to releasing the last reference,The creator of these dbus_connection_close_APIParam_1 is responsible for calling dbus_connection_close_APIName prior to call dbus_server_unref_APIName with reference,libdbus
If threads have been initialized with a recursive mutex function,If call dbus_threads_init_default_APIName with threads with a recursive mutex function,this will not deadlock,this will not deadlock,libdbus
null,null,Always returns FALSE prior to authenticating the dbus_connection_get_adt_audit_session_data_APIParam_1,Always returns FALSE prior to authenticating the dbus_connection_get_adt_audit_session_data_APIParam_1,libdbus
null,null,Always returns FALSE prior to authenticating the dbus_connection_get_unix_process_id_APIParam_1,Always returns FALSE prior to authenticating the dbus_connection_get_unix_process_id_APIParam_1,libdbus
null,null,Always returns FALSE prior to authenticating the dbus_connection_get_unix_user_APIParam_1,Always returns FALSE prior to authenticating the dbus_connection_get_unix_user_APIParam_1,libdbus
null,null,Always returns FALSE prior to authenticating the dbus_connection_get_windows_user_APIParam_1,Always returns FALSE prior to authenticating the dbus_connection_get_windows_user_APIParam_1,libdbus
if the dbus_connection_free_preallocated_send_APIParam_2 resources are not used to send a message,if the dbus_connection_free_preallocated_send_APIParam_2 resources are not used to send a message,Should only be called,Should only be called,libdbus
null,null,"DBUS_DISPATCH_NEED_MEMORY indicates that there could be data , but we can not know for sure without more memory","DBUS_DISPATCH_NEED_MEMORY indicates that there could be dbus_connection_get_dispatch_status_APIParam_0 , but we can not know for sure without more memory",libdbus
null,null,"If it is authenticated as a specific user, this returns FALSE","If it is authenticated as a specific user, this returns FALSE",libdbus
When these bytes are parsed,When these bytes are parsed,they may not add up to an entire message,they may not add up to an entire message,libdbus
while invoking dbus_connection_get_data_APIName,while invoking dbus_connection_get_data_APIName,you need to know there a reference held on the dbus_connection_get_data_APIParam_1,you need to know there a reference held on the dbus_connection_get_data_APIParam_1,libdbus
while invoking dbus_connection_set_data_APIName,while invoking dbus_connection_set_data_APIName,you need to know there a reference held on the dbus_connection_set_data_APIParam_1,you need to know there a reference held on the dbus_connection_set_data_APIParam_1,libdbus
null,null,"If the dbus_connection_get_is_anonymous_APIParam_1 is not authenticated, dbus_connection_get_is_anonymous_APIName returns TRUE , and if it is authenticated but as an anonymous user, it returns TRUE","If the dbus_connection_get_is_anonymous_APIParam_1 is not authenticated, dbus_connection_get_is_anonymous_APIName returns TRUE , and if it is authenticated but as an anonymous user, it returns TRUE",libdbus
If the dbus_connection_get_is_anonymous_APIParam_1 is not anonymous,If the dbus_connection_get_is_anonymous_APIParam_1 is not anonymous,you can use dbus_connection_get_unix_user_APIName and dbus_connection_get_windows_user_APIName to see who it is authorized as,you can use dbus_connection_get_unix_user_APIName and dbus_connection_get_windows_user_APIName to see who it is authorized as,libdbus
null,null,dbus_connection_get_is_connected_APIName should really be called get_is_open_APIName but for historical reasons is not,dbus_connection_get_is_connected_APIName should really be called get_is_open_APIName but for historical reasons is not,libdbus
If nothing was registered at this dbus_connection_get_object_path_data_APIParam_2,If nothing was registered at this dbus_connection_get_object_path_data_APIParam_2,the data is filled in with NULL,the dbus_connection_get_object_path_data_APIParam_3 is filled in with NULL,libdbus
null,null,The only way to be sure the server ID is available is to wait for authentication to complete,The only way to be sure the server ID is available is to wait for authentication to complete,libdbus
null,null,"If the dbus_connection_get_server_id_APIParam_1 is on the server side, this will always return NULL - use dbus_server_get_id_APIName to get the ID of your own server, if you are the server side","If the dbus_connection_get_server_id_APIParam_1 is on the dbus_server_get_id_APIParam_1 side, this will always return NULL _ use dbus_server_get_id_APIName to get the ID of your own server, if you are the dbus_server_get_id_APIParam_1 side",libdbus
null,null,dbus_connection_get_server_id_APIName return the server ID or NULL if no memory or the dbus_connection_get_server_id_APIParam_1 is server-side,dbus_connection_get_server_id_APIName return the server ID or NULL if no memory or the dbus_connection_get_server_id_APIParam_1 is server_side,libdbus
If a client-side dbus_connection_get_server_id_APIParam_1 is not authenticated yet,If a client_side dbus_connection_get_server_id_APIParam_1 is not authenticated yet,"the ID may be available if it was included in the server address , but may not be available","the ID may be available if it was included in the server address , but may not be available",libdbus
null,null,"The size is approximate in that you should not use it to decide how many bytes to read off the network or anything of that nature , as optimizations may choose to tell small white lies to avoid performance overhead","The size is approximate in that you should not use it to decide how many bytes to read off the network or anything of that nature , as optimizations may choose to tell small white lies to avoid performance overhead",libdbus
null,null,"If the dbus_connection_get_socket_APIParam_1 is not socket-based , dbus_connection_get_socket_APIName will return FALSE","If the dbus_connection_get_socket_APIParam_1 is not socket_based , dbus_connection_get_socket_APIName will return FALSE",libdbus
null,null,dbus_connection_get_socket_APIParam_2 is return location for the file descriptor,dbus_connection_get_socket_APIParam_2 is return location for the dbus_connection_get_socket_APIParam_2,libdbus
null,null,dbus_connection_get_unix_fd_APIParam_2 is return location for the file descriptor,dbus_connection_get_unix_fd_APIParam_2 is return location for the dbus_connection_get_unix_fd_APIParam_2,libdbus
null,null,dbus_connection_get_unix_fd_APIName always fails on Windows,dbus_connection_get_unix_fd_APIName always fails on Windows,libdbus
null,null,"Right now dbus_connection_get_unix_fd_APIParam_0 is always a socket , but that is not guaranteed","Right now dbus_connection_get_unix_fd_APIParam_0 is always a socket , but that is not guaranteed",libdbus
null,null,dbus_connection_get_unix_process_id_APIParam_2 is return location for the process ID,dbus_connection_get_unix_process_id_APIParam_2 is return location for the dbus_connection_get_unix_process_id_APIParam_2,libdbus
null,null,Always returns FALSE on non-UNIX platforms for now,Always returns FALSE on non_UNIX platforms for now,libdbus
null,null,Always returns FALSE on non-Windows platforms for now,Always returns FALSE on dbus_connection_get_windows_user_APIParam_2 for now,libdbus
If the dbus_connection_get_unix_fd_APIParam_1 is socket-based,If the dbus_connection_get_unix_fd_APIParam_1 is socket_based,"you can also use dbus_connection_get_socket_APIName , which will work on Windows too","you can also use dbus_connection_get_socket_APIName , which will work on Windows too",libdbus
null,null,clients can not usually get the UID of servers,clients can not usually get the UID of servers,libdbus
null,null,You can ask the bus to tell you the UID of another dbus_connection_get_unix_user_APIParam_1 like,You can ask the dbus_connection_get_unix_user_APIParam_1 to tell you the UID of another dbus_connection_get_unix_user_APIParam_1 like,libdbus
null,null,"dbus_connection_get_windows_user_APIParam_2 is return location for an allocated copy of the user ID, or NULL if no memory","dbus_connection_get_windows_user_APIParam_2 is return location for an allocated copy of the user ID, or NULL if no memory",libdbus
null,null,clients can not usually get the user of servers,clients can not usually get the user of servers,libdbus
null,null,dbus_connection_list_registered_APIParam_0 should be freed with dbus_free_string_array_APIName,dbus_connection_list_registered_APIParam_0 should be freed with dbus_free_string_array_APIName,libdbus
null,null,We would like to be able to say `` You can ask the bus to tell you the user of another dbus_connection_get_windows_user_APIParam_1 like,We would like to be able to say  You can ask the dbus_connection_get_windows_user_APIParam_1 to tell you the user of another dbus_connection_get_windows_user_APIParam_1 like,libdbus
null,null,dbus_connection_list_registered_APIParam_3 is returns NULL -terminated array of children,dbus_connection_list_registered_APIParam_3 is returns NULL _terminated array of dbus_connection_list_registered_APIParam_3,libdbus
null,null,"if it is available but we do not have the memory to copy it , the return value is TRUE and NULL is given as the SID","if it is available but we do not have the memory to copy it , the return value is TRUE and NULL is given as the SID",libdbus
null,null,"If the open fails, the function returns NULL , and provides a reason for the failure in the dbus_connection_open_APIParam_2 parameter","If the open fails, the function returns NULL , and provides a reason for the failure in the dbus_connection_open_APIParam_2 parameter",libdbus
null,null,"If the open fails, the function returns NULL , and provides a reason for the failure in the dbus_connection_open_private_APIParam_2 parameter","If the open fails, the function returns NULL , and provides a reason for the failure in the dbus_connection_open_private_APIParam_2 parameter",libdbus
null,null,"Otherwise, returns a new connection and saves the new connection for possible re-use if a future call to dbus_connection_open_APIName asks to connect to the same server","Otherwise, returns a new dbus_connection_open_APIParam_0 and saves the new dbus_connection_open_APIParam_0 for possible dbus_connection_open_APIParam_1 if a future call to dbus_connection_open_APIName asks to connect to the same server",libdbus
null,null,"dbus_connection_open_APIName return new connection, or NULL on failure","dbus_connection_open_APIName return new connection, or NULL on failure",libdbus
null,null,"dbus_connection_open_private_APIName return new connection, or NULL on failure","dbus_connection_open_private_APIName return new connection, or NULL on failure",libdbus
null,null,dbus_connection_open_APIParam_2 is dbus_connection_open_APIParam_1 where an dbus_connection_open_APIParam_2 can be returned,dbus_connection_open_APIParam_2 is dbus_connection_open_APIParam_1 where an dbus_connection_open_APIParam_2 can be returned,libdbus
null,null,dbus_connection_open_private_APIParam_2 is dbus_connection_open_private_APIParam_1 where an dbus_connection_open_private_APIParam_2 can be returned,dbus_connection_open_private_APIParam_2 is dbus_connection_open_private_APIParam_1 where an dbus_connection_open_private_APIParam_2 can be returned,libdbus
null,null,dbus_parse_address_APIParam_4 is dbus_parse_address_APIParam_1 where an dbus_parse_address_APIParam_4 can be returned,dbus_parse_address_APIParam_4 is dbus_parse_address_APIParam_1 where an dbus_parse_address_APIParam_4 can be returned,libdbus
null,null,Note Prefer dbus_connection_open_APIName to dbus_connection_open_private_APIName unless you have good reason,Note Prefer dbus_connection_open_APIName to dbus_connection_open_private_APIName ,libdbus
null,null,Note Prefer dbus_connection_open_APIName to dbus_connection_open_private_APIName unless you have good reason,Note Prefer dbus_connection_open_APIName to dbus_connection_open_private_APIName ,libdbus
null,null,Note Prefer dbus_connection_open_APIName to dbus_connection_open_private_APIName unless you have good reason,Note Prefer dbus_connection_open_APIName to dbus_connection_open_private_APIName ,libdbus
null,null,Note Prefer dbus_connection_open_APIName to dbus_connection_open_private_APIName unless you have good reason,Note Prefer dbus_connection_open_APIName to dbus_connection_open_private_APIName ,libdbus
if you are not interested in the reason for failure,if you are not interested in the reason for failure,Pass NULL for the dbus_connection_open_APIParam_2 parameter,Pass NULL for the dbus_connection_open_APIParam_2 parameter,libdbus
if you are not interested in the reason for failure,if you are not interested in the reason for failure,Pass NULL for the dbus_connection_open_private_APIParam_2 parameter,Pass NULL for the dbus_connection_open_private_APIParam_2 parameter,libdbus
null,null,This connection will not be saved or recycled by libdbus,This dbus_bus_get_private_APIParam_0 will not be saved or recycled by libdbus,libdbus
null,null,This connection will not be saved or recycled by libdbus,This dbus_bus_get_private_APIParam_0 will not be saved or recycled by libdbus,libdbus
null,null,This connection will not be saved or recycled by libdbus,This dbus_bus_get_private_APIParam_0 will not be saved or recycled by libdbus,libdbus
null,null,This connection will not be saved or recycled by libdbus,This dbus_bus_get_private_APIParam_0 will not be saved or recycled by libdbus,libdbus
when you are done with the connection,when you are done with the connection,"However , you should call dbus_connection_unref_APIName","However , you should call dbus_connection_unref_APIName",libdbus
null,null,"Instead , let the main loop invoke dbus_connection_dispatch_APIName","Instead , call dbus_connection_read_write_APIName with loop invoke dbus_connection_dispatch_APIName",libdbus
When you are done with this connection,When you are done with this connection,"you must dbus_connection_close_APIName to disconnect it , and dbus_connection_unref_APIName to free the connection object","you must dbus_connection_close_APIName to disconnect it , and dbus_connection_unref_APIName to free the dbus_connection_open_private_APIParam_1",libdbus
null,null,"dbus_connection_preallocate_send_APIName return the preallocated resources, or NULL","dbus_connection_preallocate_send_APIName return the preallocated resources, or NULL",libdbus
null,null,"If the dbus_connection_read_write_APIParam_1 is closed, the function returns FALSE","If the dbus_connection_read_write_APIParam_1 is closed, the function returns FALSE",libdbus
null,null,"As long as the dbus_connection_read_write_APIParam_1 is open, dbus_connection_read_write_APIName will block until it can read or write, read or write, return TRUE","As long as the dbus_connection_read_write_APIParam_1 is open, dbus_connection_read_write_APIName will block until it can read or write, read or write, return TRUE",libdbus
null,null,"Note that even after disconnection , messages may remain in the incoming queue that need to be processed","Note that even after dbus_connection_read_write_APIParam_1 , messages may call dbus_connection_borrow_message_APIName with queue that need to be processed",libdbus
null,null,This is important,This is important,libdbus
while it is blocked on I/O,while it is blocked on I/O,"it can not be interrupted , which makes dbus_connection_read_write_dispatch_APIName unsuitable for applications that do more than just","it can not be interrupted , which makes dbus_connection_read_write_dispatch_APIName unsuitable for applications that do more than just",libdbus
null,null,dbus_connection_remove_filter_APIParam_2 is the handler to remove,dbus_connection_remove_filter_APIParam_2 is the dbus_connection_remove_filter_APIParam_2 to remove,libdbus
null,null,It is a programming error to call dbus_connection_remove_filter_APIName for a handler that has not been added as a filter,It is a programming error to call dbus_connection_remove_filter_APIName for a dbus_connection_remove_filter_APIParam_2 that has not been added as a filter,libdbus
null,null,Used to return a dbus_connection_return_message_APIParam_2 after peeking at a dbus_connection_return_message_APIParam_2 using dbus_connection_borrow_message_APIName,Used to return a dbus_connection_return_message_APIParam_2 after peeking at a dbus_connection_return_message_APIParam_2 using dbus_connection_borrow_message_APIName,libdbus
null,null,no error will be returned,no error will be returned,libdbus
If the given handler was added more than once,If the call dbus_connection_unregister_object_path_APIName with handler was added more than once,only one instance of it will be removed,only one instance of it will be removed,libdbus
null,null,"If the function fails due to lack of memory, it returns FALSE","If the function fails due to lack of memory, it returns FALSE",libdbus
if dbus_connection_return_message_APIParam_2 from dbus_connection_borrow_message_APIName was non - NULL,if dbus_connection_return_message_APIParam_2 from dbus_connection_borrow_message_APIName was non _ NULL,Only called,Only called,libdbus
null,null,"Because this only queues the dbus_connection_send_APIParam_2 , the only reason it can fail is lack of memory","Because this only queues the dbus_connection_send_APIParam_2 , the only reason it can fail is lack of memory",libdbus
null,null,"dbus_connection_send_APIParam_3 is return location for dbus_connection_send_APIParam_2 dbus_connection_send_APIParam_3, or NULL if you do not care","dbus_connection_send_APIParam_3 is return location for dbus_connection_send_APIParam_2 dbus_connection_send_APIParam_3, or NULL if you do not care",libdbus
null,null,dbus_connection_send_preallocated_APIName can not fail,dbus_connection_send_preallocated_APIName can not fail,libdbus
null,null,The function will never fail for other reasons,The function will never fail for other reasons,libdbus
null,null,"dbus_connection_send_preallocated_APIName `` consumes '' the dbus_connection_send_preallocated_APIParam_2 resources , they need not be freed separately","dbus_connection_send_preallocated_APIName  consumes  the dbus_connection_send_preallocated_APIParam_2 resources , they need not be freed separately",libdbus
null,null,"dbus_connection_send_with_reply_APIName return FALSE if no memory, TRUE otherwise","dbus_connection_send_with_reply_APIName return FALSE if no memory, TRUE otherwise",libdbus
if no reply arrives,if no reply arrives,"a timeout error will occur , unlike with dbus_connection_send_APIName","a dbus_connection_send_with_reply_APIParam_4 will occur , unlike with dbus_connection_send_APIName",libdbus
null,null,"-1 is typically the best value for the timeout , unless you want a very short or very long timeout","_1 is typically the best value for the dbus_connection_send_with_reply_APIParam_4 , ",libdbus
null,null,"dbus_connection_send_with_reply_APIParam_3 is return location for a DBusPendingCall object, or NULL if dbus_connection_send_with_reply_APIParam_1 is disconnected or when you try to send Unix file descriptors on a dbus_connection_send_with_reply_APIParam_1 that does not support them","dbus_connection_send_with_reply_APIParam_3 is return location for a DBusPendingCall object, or NULL if dbus_connection_send_with_reply_APIParam_1 is disconnected or when you try to send Unix file descriptors on a dbus_connection_send_with_reply_APIParam_1 that does not support them",libdbus
null,null,dbus_connection_send_with_reply_and_block_APIName return the dbus_connection_send_with_reply_and_block_APIParam_2 that is the reply or NULL with an dbus_connection_send_with_reply_and_block_APIParam_4 code if the function fails,dbus_connection_send_with_reply_and_block_APIName return the dbus_connection_send_with_reply_and_block_APIParam_2 that is the reply or NULL with an dbus_connection_send_with_reply_and_block_APIParam_4 code if the function fails,libdbus
Warning if the dbus_connection_send_with_reply_APIParam_1 is disconnected or you try to send Unix file descriptors on a dbus_connection_send_with_reply_APIParam_1 that does not support them,Warning if the dbus_connection_send_with_reply_APIParam_1 is disconnected or you try to call dbus_connection_get_unix_fd_APIName with Unix file descriptors on a dbus_connection_send_with_reply_APIParam_1 that does not support them,"the DBusPendingCall will be set to NULL , so be careful with this","the DBusPendingCall will be set to NULL , so be careful with this",libdbus
when the dbus_connection_set_allow_anonymous_APIParam_1 is first seen in the DBusNewConnectionFunction,when the dbus_connection_set_allow_anonymous_APIParam_1 is first seen in the DBusNewConnectionFunction,dbus_connection_set_allow_anonymous_APIName must be called on the server side of a dbus_connection_set_allow_anonymous_APIParam_1,dbus_connection_set_allow_anonymous_APIName must be called on the server side of a dbus_connection_set_allow_anonymous_APIParam_1,libdbus
null,null,dbus_connection_set_change_sigpipe_APIParam_1 is TRUE to allow sigpipe to be set to SIG_IGN,dbus_connection_set_change_sigpipe_APIParam_1 is TRUE to allow dbus_connection_set_change_sigpipe_APIParam_1 to be set to SIG_IGN,libdbus
null,null,"Namely , an auth mechanism such as ANONYMOUS that supports anonymous auth must be included in the list of available mechanisms for anonymous login to work","Namely , an auth mechanism such as ANONYMOUS that supports anonymous auth must be included in the list of available mechanisms for anonymous login to work",libdbus
null,null,"However , dbus_connection_dispatch_APIName MUST NOT BE CALLED from inside the DBusDispatchStatusFunction","However , dbus_connection_dispatch_APIName MUST NOT BE CALLED from inside the dbus_connection_set_dispatch_status_function_APIParam_2",libdbus
If the dispatch status is DBUS_DISPATCH_DATA_REMAINS,If the dispatch status is DBUS_DISPATCH_DATA_REMAINS,dbus_connection_dispatch_APIName needs to be called to process incoming messages,dbus_connection_dispatch_APIName needs to be called to call dbus_connection_pop_message_APIName with process messages,libdbus
null,null,The call to _exit_APIName comes after any handlers for the disconnect signal run,The call to _exit_APIName comes after any handlers for the disconnect signal run,libdbus
when the main loop is re-entered,when the main loop is re_entered,messages should be dispatched later,messages should be dispatched later,libdbus
null,null,"Instead , the DBusDispatchStatusFunction should simply save an indication that","Instead , the dbus_connection_set_dispatch_status_function_APIParam_2 should simply save an indication that",libdbus
when the dbus_connection_set_exit_on_disconnect_APIParam_1 receives a disconnect signal,when the dbus_connection_set_exit_on_disconnect_APIParam_1 receives a disconnect signal,_exit_APIName should be called,_exit_APIName should be called,libdbus
when the dbus_timeout_handle_APIParam_1 occurs,when the dbus_timeout_handle_APIParam_1 occurs,dbus_timeout_handle_APIName should be called,dbus_timeout_handle_APIName should be called,libdbus
null,null,The semantics of the maximum are,The semantics of the maximum are,libdbus
null,null,The semantics are not,The semantics are not,libdbus
If you do not set a dispatch status dbus_connection_set_dispatch_status_function_APIParam_2,If you do not set a dispatch status dbus_connection_set_dispatch_status_function_APIParam_2,"you have to be sure to dispatch on every iteration of your main loop , especially if dbus_watch_handle_APIName or dbus_timeout_handle_APIName were called","you have to be sure to dispatch on every iteration of your main loop , especially if dbus_watch_handle_APIName or dbus_timeout_handle_APIName were called",libdbus
null,null,But this should be inconsequential,But this should be inconsequential,libdbus
null,null,This does imply that we can not call read_APIName with a buffer larger than we 're willing to exceed this limit by,This does imply that we can not call read_APIName with a buffer larger than we 're willing to exceed this limit by,libdbus
null,null,"However , the message bus wants to be able to route methods on that interface through the bus and to other applications","However , the dbus_connection_set_route_peer_messages_APIParam_2 wants to be able to route methods on that interface through the dbus_connection_set_route_peer_messages_APIParam_2 and to other applications",libdbus
If a normal application sets this flag,If a normal application sets this flag,it can break things badly,it can break things badly,libdbus
null,null,"A disabled timeout should have no effect , and enabled timeout should be added to the main loop","A disabled dbus_connection_set_timeout_functions_APIParam_4 should have no effect , and enabled dbus_connection_set_timeout_functions_APIParam_4 should be added to the main loop",libdbus
null,null,This feature is used instead of simply adding/removing the timeout,This feature is used instead of simply adding/removing the dbus_connection_set_timeout_functions_APIParam_4,libdbus
null,null,"dbus_timeout_handle_APIName should be called repeatedly , each time the interval elapses , starting after it has elapsed once","dbus_timeout_handle_APIName should be called repeatedly , each dbus_connection_set_timeout_functions_APIParam_4 the interval elapses , starting after it has elapsed once",libdbus
null,null,so inside these functions you may not invoke any methods on DBusConnection or it will deadlock,so inside these dbus_connection_set_watch_functions_APIParam_6 you may not invoke any methods on dbus_connection_set_watch_functions_APIParam_1 or it will deadlock,libdbus
null,null,so inside these functions you may not invoke any methods on DBusConnection or it will deadlock,so inside these dbus_connection_set_watch_functions_APIParam_6 you may not invoke any methods on dbus_connection_set_watch_functions_APIParam_1 or it will deadlock,libdbus
null,null,so inside these functions you may not invoke any methods on DBusConnection or it will deadlock,so inside these dbus_connection_set_watch_functions_APIParam_6 you may not invoke any methods on dbus_connection_set_watch_functions_APIParam_1 or it will deadlock,libdbus
null,null,so inside these functions you may not invoke any methods on DBusConnection or it will deadlock,so inside these dbus_connection_set_watch_functions_APIParam_6 you may not invoke any methods on dbus_connection_set_watch_functions_APIParam_1 or it will deadlock,libdbus
null,null,"if it returns TRUE , the dbus_connection_set_unix_user_function_APIParam_1 is allowed to proceed, otherwise the dbus_connection_set_unix_user_function_APIParam_1 is disconnected","if it returns TRUE , the dbus_connection_set_unix_user_function_APIParam_1 is allowed to proceed, otherwise the dbus_connection_set_unix_user_function_APIParam_1 is disconnected",libdbus
null,null,"if it returns TRUE , the dbus_connection_set_windows_user_function_APIParam_1 is allowed to proceed, otherwise the dbus_connection_set_windows_user_function_APIParam_1 is disconnected","if it returns TRUE , the dbus_connection_set_windows_user_function_APIParam_1 is allowed to proceed, otherwise the dbus_connection_set_windows_user_function_APIParam_1 is disconnected",libdbus
When using Qt,When using Qt,this typically results in a call to QEventLoop::wakeUp_APIName,this typically results in a call to QEventLoop::wakeUp_APIName,libdbus
null,null,This feature is used instead of simply adding/removing the watch,This feature is used instead of simply adding/removing the dbus_connection_set_watch_functions_APIParam_4,libdbus
null,null,it may not be enabled,it may not be enabled,libdbus
null,null,"A disabled watch should have no effect , and enabled watch should be added to the main loop","A disabled dbus_connection_set_watch_functions_APIParam_4 should have no effect , and enabled dbus_connection_set_watch_functions_APIParam_4 should be added to the main loop",libdbus
null,null,"These functions are responsible for making the application main loop aware of file descriptors that need to be monitored for events , using select_APIName or poll_APIName","These dbus_connection_set_watch_functions_APIParam_6 are responsible for making the application main loop aware of file descriptors that need to be monitored for events , using select_APIName or poll_APIName",libdbus
null,null,It is not allowed to reference a DBusWatch after it has been passed to dbus_connection_set_watch_functions_APIParam_3,It is not allowed to call dbus_server_unref_APIName with dbus_connection_set_watch_functions_APIParam_4 after it has been passed to dbus_connection_set_watch_functions_APIParam_3,libdbus
null,null,It is not allowed to reference a DBusWatch after it has been passed to remove_function,It is not allowed to call dbus_server_unref_APIName with dbus_watch_handle_APIParam_1 after it has been passed to remove_function,libdbus
null,null,"If FALSEbe returned by dbus_connection_set_watch_functions_APIName due to lack of memory, the failure may be due to a FALSE return from the new dbus_connection_set_watch_functions_APIParam_2","If FALSEbe returned by dbus_connection_set_watch_functions_APIName due to lack of memory, the failure may be due to a FALSE return from the new dbus_connection_set_watch_functions_APIParam_2",libdbus
null,null,"The flags returned by dbus_watch_get_flags_APIName will only contain DBUS_WATCH_READABLE and DBUS_WATCH_WRITABLE, never DBUS_WATCH_HANGUP or DBUS_WATCH_ERROR","The flags returned by dbus_watch_get_flags_APIName will only contain DBUS_WATCH_READABLE and DBUS_WATCH_WRITABLE, never DBUS_WATCH_HANGUP or DBUS_WATCH_ERROR",libdbus
null,null,"if FALSEbe returned by dbus_connection_set_watch_functions_APIName the net result should be that dbus_connection_set_watch_functions_APIName has no effect, but the dbus_connection_set_watch_functions_APIParam_2 and dbus_connection_set_watch_functions_APIParam_3 may have been called","if FALSEbe returned by dbus_connection_set_watch_functions_APIName the net result should be that dbus_connection_set_watch_functions_APIName has no effect, but the dbus_connection_set_watch_functions_APIParam_2 and dbus_connection_set_watch_functions_APIParam_3 may have been called",libdbus
during the DBusAddWatchFunction,during the DBusAddWatchFunction,"dbus_watch_handle_APIName can not be called , as the dbus_connection_set_watch_functions_APIParam_1 will not be ready to handle that watch yet","dbus_watch_handle_APIName can not be called , as the dbus_connection_set_watch_functions_APIParam_1 will not be ready to handle that dbus_connection_set_watch_functions_APIParam_4 yet",libdbus
null,null,"Once a file descriptor becomes readable or writable , or an exception occurs , dbus_watch_handle_APIName should be called to notify the dbus_connection_set_watch_functions_APIParam_1 of the file descriptor condition","Once a file descriptor becomes readable or writable , or an exception occurs , dbus_watch_handle_APIName should be called to notify the dbus_connection_set_watch_functions_APIParam_1 of the dbus_connection_set_watch_functions_APIParam_1",libdbus
null,null,dbus_connection_try_register_fallback_APIParam_5 is address where an dbus_connection_try_register_fallback_APIParam_5 can be returned,dbus_connection_try_register_fallback_APIParam_5 is address where an dbus_connection_try_register_fallback_APIParam_5 can be returned,libdbus
null,null,dbus_connection_try_register_object_path_APIParam_5 is address where an dbus_connection_try_register_object_path_APIParam_5 can be returned,dbus_connection_try_register_object_path_APIParam_5 is address where an dbus_connection_try_register_object_path_APIParam_5 can be returned,libdbus
null,null,dbus_bus_get_APIParam_2 is address where an dbus_bus_get_APIParam_2 can be returned,dbus_bus_get_APIParam_2 is address where an dbus_bus_get_APIParam_2 can be returned,libdbus
null,null,dbus_bus_get_private_APIParam_2 is address where an dbus_bus_get_private_APIParam_2 can be returned,dbus_bus_get_private_APIParam_2 is address where an dbus_bus_get_private_APIParam_2 can be returned,libdbus
null,null,"For private connections , the creator of the dbus_connection_unref_APIParam_1 must arrange for dbus_connection_close_APIName to be called prior to dropping the last reference","For private dbus_connection_unref_APIParam_1 , the creator of the dbus_connection_unref_APIParam_1 must arrange for dbus_connection_close_APIName to be called prior to call dbus_server_unref_APIName with reference",libdbus
null,null,"dbus_threads_init_APIName return TRUE on success, FALSE if no memory","dbus_threads_init_APIName return TRUE on success, FALSE if no memory",libdbus
null,null,"In D-Bus 1.6 or older , dbus_threads_init_default_APIName must be called in the main thread before any other thread starts","In dbus_threads_init_default_APIParam_0 1.6 or older , dbus_threads_init_default_APIName must be called in the main thread before any other thread starts",libdbus
null,null,This is generally acceptable,This is generally acceptable,libdbus
null,null,"For shared connections , libdbus will own a reference as long as the dbus_connection_unref_APIParam_1 is connected , so you can know that either you do not have the last reference , or it is OK to drop the last reference","For shared dbus_connection_unref_APIParam_1 , libdbus will own a reference as long as the dbus_connection_unref_APIParam_1 is connected , so you can know that either you do not have the last reference , or it is OK to call dbus_server_unref_APIName with reference",libdbus
if not,if not,"Returns TRUE on success , FALSE enough memory","Returns TRUE on success , FALSE enough memory",libdbus
null,null,"Normal API conventions would have the function return a boolean value indicating  , but that would require blocking always to determine the return value","Normal API conventions would have the function return a boolean value indicating  , but that would require blocking always to determine the return value",libdbus
null,null,"As a result , it is not sufficient to call dbus_threads_init_default_APIName in a library or plugin , unless the library or plugin imposes a similar requirement on its callers","As a result , it is not sufficient to call dbus_threads_init_default_APIName in a library or plugin , ",libdbus
null,null,This can cause performance problems such as draining batteries on embedded platforms,This can cause performance problems such as draining batteries on embedded platforms,libdbus
null,null,It is important to note this,It is important to note this,libdbus
If you pass non,If you pass non,- NULL for the dbus_bus_add_match_APIParam_3 dbus_bus_add_match_APIName will block until it gets a reply,_ NULL for the dbus_bus_add_match_APIParam_3 dbus_bus_add_match_APIName will block until it gets a reply,libdbus
null,null,"That is , arg0 = ' 5 ' means match the string `` 5 '' not the integer 5","That is , arg0 = ' 5 ' means match the dbus_bus_add_match_APIParam_2  5  not the integer 5",libdbus
null,null,A specialised form of wildcard matching on arguments is supported for path-like namespaces,A specialised form of wildcard matching on arguments is supported for path_like namespaces,libdbus
null,null,This means match rules on method calls should not usually give an interface,This means dbus_bus_add_match_APIParam_2 on method calls should not usually give an interface,libdbus
null,null,"For security reasons , you can match arguments only up to DBUS_MAXIMUM_MATCH_RULE_ARG_NUMBER","For security reasons , you can match arguments only up to DBUS_MAXIMUM_MATCH_RULE_ARG_NUMBER",libdbus
null,null,Match rules have a maximum length of DBUS_MAXIMUM_MATCH_RULE_LENGTH bytes,dbus_bus_add_match_APIParam_2 have a maximum length of dbus_bus_add_match_APIParam_2,libdbus
if there an dbus_bus_add_match_APIParam_3 adding the match,if there an dbus_bus_add_match_APIParam_3 call dbus_bus_add_match_APIName with match,you will not find out about it,you will not find out about it,libdbus
null,null,"Both of these maximums are much higher than you are likely to need , they only exist","Both of these maximums are much higher than you are likely to need , they only exist",libdbus
null,null,The caller may NOT call dbus_connection_close_APIName on this connection,The caller may NOT call dbus_connection_close_APIName on this connection,libdbus
null,null,You can undo this by calling dbus_connection_set_exit_on_disconnect_APIName yourself after you get the connection,You can undo this by calling dbus_connection_set_exit_on_disconnect_APIName yourself after you get the connection,libdbus
null,null,You can undo this by calling dbus_connection_set_exit_on_disconnect_APIName yourself after you get the connection,You can undo this by calling dbus_connection_set_exit_on_disconnect_APIName yourself after you get the connection,libdbus
null,null,You can undo this by calling dbus_connection_set_exit_on_disconnect_APIName yourself after you get the connection,You can undo this by calling dbus_connection_set_exit_on_disconnect_APIName yourself after you get the connection,libdbus
null,null,You can undo this by calling dbus_connection_set_exit_on_disconnect_APIName yourself after you get the connection,You can undo this by calling dbus_connection_set_exit_on_disconnect_APIName yourself after you get the connection,libdbus
null,null,dbus_bus_get_APIName calls dbus_bus_register_APIName for you,dbus_bus_get_APIName calls dbus_bus_register_APIName for you,libdbus
null,null,dbus_bus_get_private_APIName calls dbus_bus_register_APIName for you,dbus_bus_get_private_APIName calls dbus_bus_register_APIName for you,libdbus
null,null,dbus_bus_get_APIName return a DBusConnection with new ref or NULL on dbus_bus_get_APIParam_2,dbus_bus_get_APIName return a dbus_bus_get_APIParam_0 with new ref or NULL on dbus_bus_get_APIParam_2,libdbus
null,null,"If dbus_bus_get_APIName obtains a new connection object never before returned from dbus_bus_get_APIName , it will call dbus_connection_set_exit_on_disconnect_APIName , so the application will exit if the connection closes","If dbus_bus_get_APIName obtains a new dbus_connection_set_exit_on_disconnect_APIParam_1 never before returned from dbus_bus_get_APIName , it will call dbus_connection_set_exit_on_disconnect_APIName , so the dbus_connection_set_exit_on_disconnect_APIParam_2 will exit if the dbus_bus_get_APIParam_0 closes",libdbus
null,null,"Asks the bus to return its globally unique ID, as described in the D-Bus specification","Asks the dbus_bus_get_id_APIParam_2 to return its globally unique ID, as described in the dbus_bus_get_id_APIParam_2",libdbus
null,null,dbus_bus_get_id_APIName return the bus ID or NULL if dbus_bus_get_id_APIParam_2 is set,dbus_bus_get_id_APIName return the dbus_bus_get_id_APIParam_2 or NULL if dbus_bus_get_id_APIParam_2 is set,libdbus
null,null,"For the system bus , probably the bus ID is not useful","For the dbus_bus_get_id_APIParam_2 , probably the dbus_bus_get_id_APIParam_2 is not useful",libdbus
null,null,"instead , use the machine ID and may be persistent beyond a single bus instance","instead , use the machine ID and may be persistent beyond a single dbus_bus_get_id_APIParam_2",libdbus
null,null,Caller owns a reference to the bus and must either close it or know it to be closed prior to releasing this reference,Caller call dbus_server_unref_APIName with reference to the dbus_bus_get_private_APIParam_1 and must either close it or know it to be closed prior to releasing this reference,libdbus
if the connection closes,if the dbus_bus_get_APIParam_0 closes,the application will exit,the application will exit,libdbus
null,null,"The name remains valid until the dbus_bus_get_unique_name_APIParam_1 is freed , and should not be freed by the caller","The name remains valid until the dbus_bus_get_unique_name_APIParam_1 is freed , and should not be freed by the caller",libdbus
null,null,dbus_bus_get_unique_name_APIName return the unique name or NULL on error,dbus_bus_get_unique_name_APIName return the unique name or NULL on error,libdbus
null,null,"In addition to an ID for each bus and an ID for each machine , there is an ID for each address that the bus is listening on","In addition to an ID for each dbus_bus_get_id_APIParam_2 and an ID for each machine , there is an ID for each address that the dbus_bus_get_id_APIParam_2 is listening on",libdbus
null,null,"Asks the bus to return the UID the named dbus_bus_get_unix_user_APIParam_1 authenticated as, if any","Asks the dbus_bus_get_unix_user_APIParam_3 to return the UID the named dbus_bus_get_unix_user_APIParam_1 authenticated as, if any",libdbus
if you register by hand,if you register by hand,calling dbus_bus_set_unique_name_APIName instead of using dbus_bus_register_APIName,calling dbus_bus_set_unique_name_APIName instead of using dbus_bus_register_APIName,libdbus
null,null,You are responsible for,You are responsible for,libdbus
null,null,"dbus_bus_get_unix_user_APIName return the unix user id, or -1) if dbus_bus_get_unix_user_APIParam_3 is set","dbus_bus_get_unix_user_APIName return the unix user id, or _1) if dbus_bus_get_unix_user_APIParam_3 is set",libdbus
null,null,Note Just use dbus_bus_get_APIName or dbus_bus_get_private_APIName instead of dbus_bus_register_APIName and save yourself some pain,Note Just use dbus_bus_get_APIName or dbus_bus_get_private_APIName instead of dbus_bus_register_APIName and save yourself some pain,libdbus
null,null,This must be the first thing,This must be the first thing,libdbus
if you have your own custom message bus not found in DBusBusType,if you have your own custom message bus not found in DBusBusType,Using dbus_bus_register_APIName manually is only useful,Using dbus_bus_register_APIName manually is only useful,libdbus
If you use dbus_bus_get_APIName or dbus_bus_get_private_APIName dbus_bus_register_APIName,If you use dbus_bus_get_APIName or dbus_bus_get_private_APIName dbus_bus_register_APIName,will be called for you,will be called for you,libdbus
null,null,DBUS_RELEASE_NAME_REPLY_NOT_OWNER which means someone else owns the dbus_bus_release_name_APIParam_2 so you can not release it,DBUS_RELEASE_NAME_REPLY_NOT_OWNER which means someone else owns the dbus_bus_release_name_APIParam_2 so you can not release it,libdbus
if you want to avoid replacing a current owner,if you want to avoid replacing a current owner,do not specify DBUS_NAME_FLAG_REPLACE_EXISTING and you will get an dbus_bus_name_has_owner_APIParam_3 if there already an owner,do not specify DBUS_NAME_FLAG_REPLACE_EXISTING and you will get an dbus_bus_name_has_owner_APIParam_3 if there already an owner,libdbus
null,null,"dbus_bus_release_name_APIName return a result code, -1 if dbus_bus_release_name_APIParam_3 is set","dbus_bus_release_name_APIName return a result code, _1 if dbus_bus_release_name_APIParam_3 is set",libdbus
null,null,"dbus_bus_request_name_APIName return a result code, -1 if dbus_bus_request_name_APIParam_4 is set","dbus_bus_request_name_APIName return a result code, _1 if dbus_bus_request_name_APIParam_4 is set",libdbus
null,null,"The rule in a multithreaded app , , is that dbus_bus_register_APIName must be used to register , or you need to have your own locks that all threads in the app will respect","The rule in a multithreaded app , , is that dbus_bus_register_APIName must be used to register , or you need to have your own locks that all threads in the app will respect",libdbus
null,null,"For shared connections in a multithreaded application , you can not really make the registration calls yourself , , and","For shared dbus_bus_register_APIParam_1 in a multithreaded application , you can not really make the registration calls yourself , , and",libdbus
null,null,"First you should know that for each bus dbus_bus_request_name_APIParam_2 , the bus stores a queue of connections that would like to own it","First you should know that for each bus dbus_bus_request_name_APIParam_2 , the dbus_bus_request_name_APIParam_4 a queue of dbus_bus_request_name_APIParam_1 that would like to own it",libdbus
null,null,The queue means you do not need to manually watch for the current owner to disappear and request the dbus_bus_request_name_APIParam_2 again,The queue means you do not need to manually watch for the current owner to disappear and request the dbus_bus_request_name_APIParam_2 again,libdbus
When requesting a dbus_bus_request_name_APIParam_2,When requesting a dbus_bus_request_name_APIParam_2,you can specify several dbus_bus_request_name_APIParam_3,you can specify several dbus_bus_request_name_APIParam_3,libdbus
null,null,dbus_bus_request_name_APIName returns a result code,dbus_bus_request_name_APIName returns a result code,libdbus
null,null,DBUS_NAME_FLAG_ALLOW_REPLACEMENT means that another requestor of the dbus_bus_request_name_APIParam_2 can take it away from you by specifying DBUS_NAME_FLAG_REPLACE_EXISTING,DBUS_NAME_FLAG_ALLOW_REPLACEMENT means that another requestor of the dbus_bus_request_name_APIParam_2 can take it away from you by specifying DBUS_NAME_FLAG_REPLACE_EXISTING,libdbus
null,null,DBUS_NAME_FLAG_DO_NOT_QUEUE means that - you only care about being the primary owner,DBUS_NAME_FLAG_DO_NOT_QUEUE means that _ you only care about being the primary owner,libdbus
if you are not the primary owner,if you are not the primary owner,you do not want to be queued up,you do not want to be queued up,libdbus
null,null,any editor that can be the user editor should specify DBUS_NAME_FLAG_REPLACE_EXISTING to either take over or be queued up according to,any editor that can be the user editor should specify DBUS_NAME_FLAG_REPLACE_EXISTING to either take over or be queued up according to,libdbus
When you lose ownership of your bus dbus_bus_request_name_APIParam_2,When you call dbus_bus_start_service_by_name_APIName with ownership of your bus dbus_bus_request_name_APIParam_2,you need to exit,you need to exit,libdbus
null,null,and either the current owner did NOT specify DBUS_NAME_FLAG_ALLOW_REPLACEMENT or the caller did NOT specify DBUS_NAME_FLAG_REPLACE_EXISTING,and either the current owner did NOT specify DBUS_NAME_FLAG_ALLOW_REPLACEMENT or the caller did NOT specify DBUS_NAME_FLAG_REPLACE_EXISTING,libdbus
null,null,"DBUS_REQUEST_NAME_REPLY_PRIMARY_OWNER means that the dbus_bus_request_name_APIParam_2 had no existing owner , and the caller is now the primary owner","DBUS_REQUEST_NAME_REPLY_PRIMARY_OWNER means that the dbus_bus_request_name_APIParam_2 had no existing owner , and the caller is now the primary owner",libdbus
null,null,"or that the dbus_bus_request_name_APIParam_2 had an owner , and the caller specified DBUS_NAME_FLAG_REPLACE_EXISTING , and the current owner specified DBUS_NAME_FLAG_ALLOW_REPLACEMENT","or that the dbus_bus_request_name_APIParam_2 had an owner , and the caller specified DBUS_NAME_FLAG_REPLACE_EXISTING , and the current owner specified DBUS_NAME_FLAG_ALLOW_REPLACEMENT",libdbus
null,null,The only reason to use dbus_bus_set_unique_name_APIName is to re-implement the equivalent of dbus_bus_register_APIName yourself,The only reason to use dbus_bus_set_unique_name_APIName is to re_implement the equivalent of dbus_bus_register_APIName yourself,libdbus
null,null,and either the current owner has NOT specified DBUS_NAME_FLAG_ALLOW_REPLACEMENT or the caller did NOT specify DBUS_NAME_FLAG_REPLACE_EXISTING,and either the current owner has NOT specified DBUS_NAME_FLAG_ALLOW_REPLACEMENT or the caller did NOT specify DBUS_NAME_FLAG_REPLACE_EXISTING,libdbus
null,null,Can only be called once per dbus_bus_set_unique_name_APIParam_1,Can only be called once per dbus_bus_set_unique_name_APIParam_1,libdbus
When a service represents an application,When a service represents an application,"say `` text editor , '' it should specify DBUS_NAME_FLAG_ALLOW_REPLACEMENT if it wants the last editor started to be the user editor vs. the first one started","say  text editor ,  it should specify DBUS_NAME_FLAG_ALLOW_REPLACEMENT if it wants the last editor started to be the user editor vs. the first one started",libdbus
null,null,"Thus , you need a way to coordinate which thread sends the registration attempt","Thus , you need a way to coordinate which thread sends the registration attempt",libdbus
null,null,it is hard to use dbus_bus_set_unique_name_APIName safely on shared connections in a multithreaded application,it is hard to use dbus_bus_set_unique_name_APIName safely on shared dbus_bus_set_unique_name_APIParam_1 in a multithreaded application,libdbus
null,null,"Note Just use dbus_bus_get_APIName or dbus_bus_get_private_APIName , or worst case dbus_bus_register_APIName , instead of messing with this function","Note Just use dbus_bus_get_APIName or dbus_bus_get_private_APIName , or worst case dbus_bus_register_APIName , instead of messing with this function",libdbus
if you registered with the bus manually -LRB- i.e,if you call dbus_bus_get_APIName with bus manually _LRB_ i.e,Can only be used,Can only be used,libdbus
If two threads are both sending the registration message,If two threads are both sending the registration message,there is no mechanism in libdbus itself to avoid sending it twice,there is no mechanism in libdbus itself to avoid sending it twice,libdbus
If you do not know about all threads in the app,If you do not know about all threads in the app,you need to avoid using dbus_bus_set_unique_name_APIName on shared connections,you need to avoid using dbus_bus_set_unique_name_APIName on shared dbus_bus_set_unique_name_APIParam_1,libdbus
if successful,if successful,dbus_bus_start_service_by_name_APIParam_0 will be one of be one of DBUS_START_REPLY_SUCCESS or DBUS_START_REPLY_ALREADY_RUNNING,dbus_bus_start_service_by_name_APIParam_0 will be one of be one of DBUS_START_REPLY_SUCCESS or DBUS_START_REPLY_ALREADY_RUNNING,libdbus
null,null,"The dbus_bus_start_service_by_name_APIParam_3 parameter is for future expansion , currently you should specify 0","The dbus_bus_start_service_by_name_APIParam_3 parameter is for future expansion , currently you should specify 0",libdbus
null,null,"The dbus_timeout_handle_APIName should be called each time this interval elapses , starting after The dbus_timeout_handle_APIName elapses once","The dbus_timeout_handle_APIName should be called each dbus_timeout_get_interval_APIParam_1 this interval elapses , starting after The dbus_timeout_handle_APIName elapses once",libdbus
If not enabled,If not enabled,it should not be polled by the main loop,it should not be call dbus_connection_read_write_APIName with loop,libdbus
If not enabled,If not enabled,it should not be polled by the main loop,it should not be call dbus_connection_read_write_APIName with loop,libdbus
If not enabled,If not enabled,it should not be polled by the main loop,it should not be call dbus_connection_read_write_APIName with loop,libdbus
If not enabled,If not enabled,it should not be polled by the main loop,it should not be call dbus_connection_read_write_APIName with loop,libdbus
null,null,"If dbus_timeout_handle_APIName returns FALSE , there wasn't enough memory to handle the dbus_timeout_handle_APIParam_1","If dbus_timeout_handle_APIName returns FALSE , there wasn't enough memory to handle the dbus_timeout_handle_APIParam_1",libdbus
null,null,with Qt you might store the QTimer for this dbus_timeout_set_data_APIParam_1 and with GLib you might store a g_timeout_add result id,with Qt you might store the dbus_timeout_set_data_APIParam_1 for this dbus_timeout_set_data_APIParam_1 and with GLib you might store a g_timeout_add dbus_timeout_set_data_APIParam_2,libdbus
null,null,This string must not be freed,This string must not be freed,libdbus
null,null,This string must not be freed,This string must not be freed,libdbus
null,null,This string must not be freed,This string must not be freed,libdbus
null,null,This string must not be freed,This string must not be freed,libdbus
null,null,dbus_address_unescape_value_APIName return newly-allocated unescaped dbus_address_unescape_value_APIParam_1 or NULL if no memory,dbus_address_unescape_value_APIName return newly_allocated unescaped dbus_address_unescape_value_APIParam_1 or NULL if no memory,libdbus
null,null,dbus_address_escape_value_APIName return newly-allocated escaped dbus_address_escape_value_APIParam_1 or NULL if no memory,dbus_address_escape_value_APIName return newly_allocated escaped dbus_address_escape_value_APIParam_1 or NULL if no memory,libdbus
null,null,"dbus_parse_address_APIName return TRUE on success, FALSE otherwise","dbus_parse_address_APIName return TRUE on success, FALSE otherwise",libdbus
When connecting to an dbus_parse_address_APIParam_1,When connecting to an dbus_parse_address_APIParam_1,the first dbus_parse_address_APIParam_1 entries in the semicolon-separated list should be tried first,the first dbus_parse_address_APIParam_1 entries in the semicolon_separated list should be tried first,libdbus
if you asked for the dbus_address_entry_get_value_APIParam_2 `` host '' you would get the value `` example.com '' dbus_address_entry_get_value_APIParam_0 value is already unescaped,if you asked for the dbus_address_entry_get_value_APIParam_2  host  you would call dbus_address_entry_get_value_APIName with value  example.com  dbus_address_entry_get_value_APIParam_0 value is already unescaped,"host = example.com , port = 8073 ''","host = example.com , port = 8073",libdbus
null,null,Deprecated former name of dbus_watch_get_unix_fd_APIName,Deprecated former name of dbus_watch_get_unix_fd_APIName,libdbus
null,null,Gets flags from DBusWatchFlags indicating what conditions should be monitored on the file descriptor,Gets flags from dbus_watch_get_flags_APIParam_1 indicating what conditions should be monitored on the file descriptor,libdbus
null,null,"On Windows, dbus_watch_get_unix_fd_APIName returns -1 but dbus_watch_get_socket_APIName returns a Winsock socket","On Windows, dbus_watch_get_unix_fd_APIName returns _1 but dbus_watch_get_socket_APIName returns a Winsock socket",libdbus
null,null,"The flags returned will only contain DBUS_WATCH_READABLE and DBUS_WATCH_WRITABLE, never DBUS_WATCH_HANGUP or DBUS_WATCH_ERROR","The flags returned will only contain DBUS_WATCH_READABLE and DBUS_WATCH_WRITABLE, never DBUS_WATCH_HANGUP or DBUS_WATCH_ERROR",libdbus
null,null,"Returns a socket to be watched, on UNIX this will return -1 if our transport is not socket-based so dbus_watch_get_unix_fd_APIName is preferred","Returns a socket to be watched, on UNIX this will return _1 if our transport is not socket_based so dbus_watch_get_unix_fd_APIName is preferred",libdbus
null,null,Always returns -1 on Windows,Always returns _1 on Windows,libdbus
null,null,"If you ignore the FALSE return, your application may spin in a busy loop on the file descriptor until memory becomes available, but nothing more catastrophic should happen","If you ignore the FALSE return, your application may spin in a busy loop on the file descriptor until memory becomes available, but nothing more catastrophic should happen",libdbus
during the DBusAddWatchFunction,during the DBusAddWatchFunction,"dbus_watch_handle_APIName can not be called , as the connection will not be ready to handle that dbus_watch_handle_APIParam_1 yet","dbus_watch_handle_APIName can not be called , as the connection will not be ready to handle that dbus_watch_handle_APIParam_1 yet",libdbus
null,null,with Qt you might store the QSocketNotifier for this dbus_watch_set_data_APIParam_1 and with GLib you might store a GSource,with Qt you might store the QSocketNotifier for this dbus_watch_set_data_APIParam_1 and with GLib you might store a GSource,libdbus
