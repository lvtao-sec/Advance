you should use a non-zero timeout
timeout,4

If there is an error, or if pcap_init_APIName has been called, NULL is returned by pcap_lookupdev_APIName and errbuf is filled in with an appropriate error message
error message,1

If there is an error, or if pcap_init_APIName has been called, NULL is returned by pcap_lookupdev_APIName and errbuf is filled in with an appropriate pcap_lookupdev_APIParam_1
error,1

If there is an error, or if pcap_init_APIName has been called, NULL is returned by pcap_lookupdev_APIName and pcap_lookupdev_APIParam_1 is filled in with an appropriate pcap_lookupdev_APIParam_1
errbuf, pcap_lookupdev_APIParam_1

Some pcap_open_live_APIParam_1 opened with pcap_create_APIName and pcap_activate_APIName, or with pcap_open_live_APIName, do not support those calls , so PCAP_ERROR be returned by pcap_get_selectable_fd_APIName for those devices
network devices, pcap_open_live_APIParam_1

Some pcap_open_live_APIParam_1 opened with pcap_create_APIName and pcap_activate_APIName, or with pcap_open_live_APIName, do not support those calls , so PCAP_ERROR be returned by pcap_get_selectable_fd_APIName for those pcap_open_live_APIParam_1
devices, pcap_open_live_APIParam_1

pcap_setdirection_APIParam_2 is one of the constants PCAP_D_IN , PCAP_D_OUT or PCAP_D_INOUT
constants PCAP_D_IN,2

pcap_set_buffer_size_APIName returns 0 on success or PCAP_ERROR_ACTIVATED if pcap_set_buffer_size_APIName is called on a capture handle that has been activated
capture,1

pcap_set_protocol_linux_APIName returns 0 on success or PCAP_ERROR_ACTIVATED if pcap_set_protocol_linux_APIName is called on a capture handle that has been activated
capture,1

pcap_set_timeout_APIName returns 0 on success or PCAP_ERROR_ACTIVATED if pcap_set_timeout_APIName is called on a capture handle that has been activated
capture,1

pcap_set_immediate_mode_APIName returns 0 on success or PCAP_ERROR_ACTIVATED if pcap_set_immediate_mode_APIName is called on a capture handle that has been activated
capture,1

pcap_set_promisc_APIName returns 0 on success or PCAP_ERROR_ACTIVATED if pcap_set_promisc_APIName is called on a capture handle that has been activated
capture,1

pcap_set_snaplen_APIName returns 0 on success or PCAP_ERROR_ACTIVATED if pcap_set_snaplen_APIName is called on a capture handle that has been activated
capture,1

pcap_set_rfmon_APIName returns 0 on success or PCAP_ERROR_ACTIVATED if pcap_set_rfmon_APIName is called on a capture handle that has been activated
capture,1

pcap_offline_filter_APIParam_1 is a pointer to a bpf_program struct , usually the result of a call to pcap_compile_APIName
pointer,3

pcap_offline_filter_APIParam_1 is a pcap_offline_filter_APIParam_3 to a pcap_offline_filter_APIParam_1 , usually the result of a call to pcap_compile_APIName
bpf_program struct, pcap_offline_filter_APIParam_1

One can use options PCAP_TSTAMP_PRECISION_MICRO and PCAP_TSTAMP_PRECISION_NANO to request call pcap_set_tstamp_precision_APIName with precision
precision, pcap_set_tstamp_precision_APIParam_2

One can use options PCAP_TSTAMP_PRECISION_MICRO and PCAP_TSTAMP_PRECISION_NANO to request call pcap_set_tstamp_precision_APIName with precision
options PCAP_TSTAMP_PRECISION_MICRO,2

It must be called on a pcap descriptor created by pcap_create_APIName that has not yet been activated by pcap_activate_APIName
pcap descriptor,1

It must be called on a pcap descriptor created by pcap_create_APIName that has not yet been activated by pcap_activate_APIName
pcap descriptor,1

It must be called on a pcap descriptor created by pcap_create_APIName that has not yet been activated by pcap_activate_APIName
pcap descriptor,1

It must be called on a pcap descriptor created by pcap_create_APIName that has not yet been activated by pcap_activate_APIName
pcap descriptor,1

pcap_set_tstamp_precision_APIName became available in libpcap release 1.5.1
libpcap release,1

pcap_set_protocol_linux_APIName became available in libpcap release 1.9.0
libpcap release,1

pcap_get_tstamp_precision_APIName became available in libpcap release 1.5.1
libpcap release,1

pcap_set_immediate_mode_APIName became available in libpcap release 1.5.0
libpcap release,1

pcap_set_tstamp_type_APIName became available in libpcap release 1.2.1
libpcap release,1

pcap_get_required_select_timeout_APIName became available in libpcap release 1.9.0
libpcap release,1

pcap_next_ex_APIName returns 1 if the packet was read without problems, 0 if packets are being read from a live capture and the packet buffer timeout expired, PCAP_ERROR if an error occurred while reading the packet, and PCAP_ERROR_BREAK if packets are being read from a savefile and there are no more packets to read from the savefile
packet,3

pcap_next_ex_APIName returns 1 if the pcap_next_ex_APIParam_3 was read without problems, 0 if packets are being read from a live capture and the pcap_next_ex_APIParam_3 buffer timeout expired, PCAP_ERROR if an error occurred while reading the packet, and PCAP_ERROR_BREAK if packets are being read from a savefile and there are no more packets to read from the savefile
capture,2

pcap_next_ex_APIName returns 1 if the pcap_next_ex_APIParam_3 was read without problems, 0 if packets are being read from a live pcap_next_ex_APIParam_2 and the pcap_next_ex_APIParam_3 buffer timeout expired, PCAP_ERROR if an error occurred while reading the packet, and PCAP_ERROR_BREAK if packets are being read from a savefile and there are no more packets to read from the savefile
packets,3

pcap_next_ex_APIName returns 1 if the pcap_next_ex_APIParam_3 was read without problems, 0 if pcap_next_ex_APIParam_3 are being read from a live pcap_next_ex_APIParam_2 and the pcap_next_ex_APIParam_3 buffer timeout expired, PCAP_ERROR if an error occurred while reading the packet, and PCAP_ERROR_BREAK if pcap_next_ex_APIParam_3 are being read from a savefile and there are no more pcap_next_ex_APIParam_3 to read from the savefile
packet buffer timeout,3

Do NOT assume that the packets for a given capture or savefile will have any given link-layer header type , such as DLT_EN10MB for Ethernet
capture,2

Do NOT assume that the packets for a given capture or savefile will have any given link-layer header type , such as DLT_EN10MB for Ethernet
capture,2

Do NOT assume that the packets for a given capture or savefile will have any given link-layer header type , such as DLT_EN10MB for Ethernet
capture,2

Do NOT assume that the packets for a given capture or savefile will have any given link-layer header type , such as DLT_EN10MB for Ethernet
capture,2

Do NOT assume that the packets for a given capture or savefile will have any given link-layer header type , such as DLT_EN10MB for Ethernet
capture,2

Do NOT assume that the packets for a given capture or savefile will have any given link-layer header type , such as DLT_EN10MB for Ethernet
capture,2

Do NOT assume that the packets for a given capture or savefile will have any given link-layer header type , such as DLT_EN10MB for Ethernet
capture,2

Do NOT assume that the packets for a given capture or savefile will have any given link-layer header type , such as DLT_EN10MB for Ethernet
capture,2

Do NOT assume that the packets for a given capture or savefile will have any given link-layer header type , such as DLT_EN10MB for Ethernet
capture,2

pcap_setfilter_APIParam_2 is a pointer to a bpf_program struct , usually the result of a call to pcap_compile -LRB- 3PCAP
pcap_compile,1

pcap_setfilter_APIParam_2 is a pointer to a pcap_setfilter_APIParam_2 , usually the result of a call to pcap_setfilter_APIParam_1 -LRB- 3PCAP
bpf_program struct, pcap_setfilter_APIParam_2

The value pcap_next_ex_APIName returns will be valid for all packets received 
packets,3

The pcap_loop_APIParam_1 and the packet data are not to be freed by the pcap_loop_APIParam_3 routine, and are not guaranteed to be valid after the pcap_loop_APIParam_3 routine returns
struct pcap_pkthdr, pcap_loop_APIParam_1

pcap_set_tstamp_precision_APIName returns 0 on success if the specified time stamp precision is expected to be supported by the capture device, PCAP_ERROR_TSTAMP_PRECISION_NOTSUP if the capture device does not support the requested time stamp precision, PCAP_ERROR_ACTIVATED if pcap_set_tstamp_precision_APIName is called on a capture handle that has been activated
capture device,1

pcap_set_tstamp_precision_APIName returns 0 on success if the specified time stamp precision is expected to be supported by the capture device, PCAP_ERROR_TSTAMP_PRECISION_NOTSUP if the pcap_set_tstamp_precision_APIParam_1 does not support the requested time stamp precision, PCAP_ERROR_ACTIVATED if pcap_set_tstamp_precision_APIName is called on a capture handle that has been activated
capture,1

pcap_set_tstamp_precision_APIName returns 0 on success if the specified pcap_set_tstamp_precision_APIParam_2 is expected to be supported by the pcap_set_tstamp_precision_APIParam_1 device, PCAP_ERROR_TSTAMP_PRECISION_NOTSUP if the pcap_set_tstamp_precision_APIParam_1 does not support the requested time stamp precision, PCAP_ERROR_ACTIVATED if pcap_set_tstamp_precision_APIName is called on a pcap_set_tstamp_precision_APIParam_1 handle that has been activated
time stamp precision, pcap_set_tstamp_precision_APIParam_2

instead , a filter should be specified with pcap_set_protocol_linux_APIParam_1 -LRB- 3PCAP
pcap_setfilter, pcap_set_protocol_linux_APIParam_1

and PCAP_TSTAMP_PRECISION_NANO should be specified if the packets to be written call pcap_tstamp_type_name_to_val_APIName with time stamps in seconds and nanoseconds
nanoseconds,1

and PCAP_TSTAMP_PRECISION_NANO should be specified if the packets to be written call pcap_tstamp_type_name_to_val_APIName with time stamps in seconds and pcap_tstamp_type_name_to_val_APIParam_1
seconds,1

different platforms and devices behaved differently , so code that must work with older versions of libpcap should use -1 , not 0 , as the value of pcap_dispatch_APIParam_2
cnt, pcap_dispatch_APIParam_2

Note that the Packet Capture library is usually built with large pcap_file_APIParam_0 support , so the standard I/O stream of the savefile might refer to a pcap_file_APIParam_0 larger than 2 gigabytes
file, pcap_file_APIParam_0

Note that the Packet Capture library is usually built with large pcap_file_APIParam_0 support , so the standard I/O stream of the pcap_file_APIParam_0 might refer to a pcap_file_APIParam_0 larger than 2 gigabytes
savefile, pcap_file_APIParam_0

Note that the pcap_file_APIParam_1 is usually built with large pcap_file_APIParam_0 support , so the standard I/O stream of the pcap_file_APIParam_0 might refer to a pcap_file_APIParam_0 larger than 2 gigabytes
Packet Capture library, pcap_file_APIParam_1

Note that the pcap_file_APIParam_1 is usually built with large pcap_file_APIParam_0 support , so the standard I/O stream of the pcap_file_APIParam_0 might refer to a pcap_file_APIParam_0 larger than 2 gigabytes
file support, pcap_file_APIParam_0

applications that use pcap_file_APIName should, if possible, use calls that support large pcap_file_APIParam_0 on the return value of pcap_file_APIName or the value returned by fileno_APIName when passed the return value of pcap_file
files, pcap_file_APIParam_0

applications that use pcap_file_APIName should, if possible, use calls that support large pcap_file_APIParam_0 on the return value of pcap_file_APIName or the value returned by fileno_APIName when passed the return value of pcap_file
pcap_file, pcap_file_APIParam_0

pcap_dispatch_APIName processes packets from a live capture or savefile until pcap_dispatch_APIParam_2 packets are processed , , the end of the savefile is reached when reading from a savefile , pcap_breakloop_APIName is called , or an error occurs
capture,3

To work around this , code that uses those calls to wait for packets to arrive must put the pcap_get_selectable_fd_APIParam_1 in non-blocking mode , and must arrange that the call have a timeout less than or equal to the packet buffer timeout , and must try to read packets after that timeout expires , regardless of
pcap_t, pcap_get_selectable_fd_APIParam_1

The pcap_dump_open_append_APIName function became available in libpcap release 1.7.2
libpcap release,1

pcap_get_tstamp_precision_APIName returns PCAP_TSTAMP_PRECISION_MICRO or PCAP_TSTAMP_PRECISION_NANO, which indicates that pcap_get_tstamp_precision_APIParam_1 captures contains time stamps in microseconds or nanoseconds respectively
pcap, pcap_get_tstamp_precision_APIParam_1

RETURN VALUES A pointer to a pcap_dumper_t structure to use in subsequent pcap_dump_APIName and pcap_dump_close_APIName calls be returned by pcap_dump_open_APIName on success
pointer,3

RETURN VALUES A pcap_dump_APIParam_3 to a pcap_dumper_t structure to use in subsequent pcap_dump_APIName and pcap_dump_close_APIName calls be returned by pcap_dump_open_APIName on success
pcap_dumper_t structure,1

pcap_list_datalinks_APIName returns the number of link-layer header types in the array on success, PCAP_ERROR_NOT_ACTIVATED if pcap_list_datalinks_APIName is called on a capture handle that has been created but not activated, and PCAP_ERROR on other errors
capture,1

pcap_list_tstamp_types_APIName returns the number of time stamp types in the array on success and PCAP_ERROR on failure
time stamp types,2

A return value of zero means that the only time stamp type supported is PCAP_TSTAMP_HOST, which is the pcap_list_tstamp_types_APIParam_1
capture device default time stamp type, pcap_list_tstamp_types_APIParam_1

A return value of zero means that the only time stamp type supported is PCAP_TSTAMP_HOST, which is the pcap_list_tstamp_types_APIParam_1
time stamp type,2

pcap_open_live_APIName returns a pcap_t * on success and NULL on failure
*,5

pcap_open_offline_APIName, pcap_open_offline_with_tstamp_precision_APIName, pcap_fopen_offline_APIName, and pcap_fopen_offline_with_tstamp_precision_APIName return a pcap_t * on success and NULL on failure
*,2

pcap_open_offline_APIName, pcap_open_offline_with_tstamp_precision_APIName, pcap_fopen_offline_APIName, and pcap_fopen_offline_with_tstamp_precision_APIName return a pcap_t pcap_open_offline_APIParam_2 on success and NULL on failure
*,2

pcap_open_offline_APIName, pcap_open_offline_with_tstamp_precision_APIName, pcap_fopen_offline_APIName, and pcap_fopen_offline_with_tstamp_precision_APIName return a pcap_t pcap_open_offline_APIParam_2 on success and NULL on pcap_fopen_offline_APIParam_1
failure, pcap_fopen_offline_APIParam_1

pcap_create_APIName returns a pcap_t * on success and NULL on failure
*,2

In previous releases , the call pcap_set_tstamp_type_APIName with pcap_set_tstamp_type_APIParam_2
time stamp type, pcap_set_tstamp_type_APIParam_2

In previous releases , the call pcap_set_tstamp_type_APIName with pcap_set_tstamp_type_APIParam_2
time stamp type, pcap_set_tstamp_type_APIParam_2

In previous releases , the call pcap_set_tstamp_type_APIName with pcap_set_tstamp_type_APIParam_2
time stamp type, pcap_set_tstamp_type_APIParam_2

In previous releases , the call pcap_set_tstamp_type_APIName with pcap_set_tstamp_type_APIParam_2
time stamp type, pcap_set_tstamp_type_APIParam_2

If NULL be returned by pcap_open_live_APIName, pcap_open_live_APIParam_5 is filled in with an appropriate error message
error message,5

If NULL be returned by pcap_open_offline_APIName, pcap_open_offline_APIParam_2 is filled in with an appropriate error message
error message,2

If NULL be returned by pcap_create_APIName, pcap_create_APIParam_2 is filled in with an appropriate error message
error message,2

A struct pcap_stat has the following members
struct pcap_stat,2

pcap_stats_APIParam_2 might , or might not , be implemented
ps_ifdrop, pcap_stats_APIParam_2

on Linux systems with 2.2 or later kernels , a pcap_open_live_APIParam_1 argument of  any  or NULL can be used to capture packets from all interfaces
Linux systems,4

number of pcap_stats_APIParam_2 dropped because
packets, pcap_stats_APIParam_2

ps_drop is not available on all pcap_stats_APIParam_2
platforms, pcap_stats_APIParam_2

pcap_stats_APIParam_2 is not available on all pcap_stats_APIParam_2
ps_drop, pcap_stats_APIParam_2

it is zero on pcap_stats_APIParam_2 where it is not available
platforms, pcap_stats_APIParam_2

It also might , or might not , pcap_stats_APIParam_2 dropped because
count packets, pcap_stats_APIParam_2

pcap_stats_APIName is supported only on live pcap_stats_APIParam_2 , not on savefiles
captures, pcap_stats_APIParam_2

pcap_stats_APIName returns 0 on success and returns PCAP_ERROR if there is an error or if pcap_stats_APIParam_1 does not support pcap_stats_APIParam_2
packet statistics, pcap_stats_APIParam_2

It must not be called on a pcap descriptor created by pcap_create_APIName that has not yet been call pcap_activate_APIName with pcap_activate -LRB- 3PCAP
pcap descriptor,1

It must not be called on a pcap_activate_APIParam_1 created by pcap_create_APIName that has not yet been call pcap_activate_APIName with pcap_is_swapped_APIParam_1 -LRB- 3PCAP
pcap_activate, pcap_is_swapped_APIParam_1

It must not be called on a pcap descriptor created by pcap_create_APIName that has not yet been call pcap_activate_APIName with pcap_activate -LRB- 3PCAP
pcap descriptor,1

It must not be called on a pcap_activate_APIParam_1 created by pcap_create_APIName that has not yet been call pcap_activate_APIName with pcap_is_swapped_APIParam_1 -LRB- 3PCAP
pcap_activate, pcap_is_swapped_APIParam_1

It must not be called on a pcap descriptor created by pcap_create_APIName that has not yet been call pcap_activate_APIName with pcap_activate -LRB- 3PCAP
pcap descriptor,1

It must not be called on a pcap_activate_APIParam_1 created by pcap_create_APIName that has not yet been call pcap_activate_APIName with pcap_is_swapped_APIParam_1 -LRB- 3PCAP
pcap_activate, pcap_is_swapped_APIParam_1

It must not be called on a pcap descriptor created by pcap_create_APIName that has not yet been call pcap_activate_APIName with pcap_activate -LRB- 3PCAP
pcap descriptor,1

It must not be called on a pcap_activate_APIParam_1 created by pcap_create_APIName that has not yet been call pcap_activate_APIName with pcap_is_swapped_APIParam_1 -LRB- 3PCAP
pcap_activate, pcap_is_swapped_APIParam_1

It must not be called on a pcap descriptor created by pcap_create_APIName that has not yet been call pcap_activate_APIName with pcap_activate -LRB- 3PCAP
pcap descriptor,1

It must not be called on a pcap_activate_APIParam_1 created by pcap_create_APIName that has not yet been call pcap_activate_APIName with pcap_is_swapped_APIParam_1 -LRB- 3PCAP
pcap_activate, pcap_is_swapped_APIParam_1

It must not be called on a pcap descriptor created by pcap_create_APIName that has not yet been call pcap_activate_APIName with pcap_activate -LRB- 3PCAP
pcap descriptor,1

It must not be called on a pcap_activate_APIParam_1 created by pcap_create_APIName that has not yet been call pcap_activate_APIName with pcap_is_swapped_APIParam_1 -LRB- 3PCAP
pcap_activate, pcap_is_swapped_APIParam_1

It must not be called on a pcap descriptor created by pcap_create_APIName that has not yet been call pcap_activate_APIName with pcap_activate -LRB- 3PCAP
pcap descriptor,1

It must not be called on a pcap_activate_APIParam_1 created by pcap_create_APIName that has not yet been call pcap_activate_APIName with pcap_is_swapped_APIParam_1 -LRB- 3PCAP
pcap_activate, pcap_is_swapped_APIParam_1

It must not be called on a pcap descriptor created by pcap_create_APIName that has not yet been call pcap_activate_APIName with pcap_activate -LRB- 3PCAP
pcap descriptor,1

It must not be called on a pcap_activate_APIParam_1 created by pcap_create_APIName that has not yet been call pcap_activate_APIName with pcap_is_swapped_APIParam_1 -LRB- 3PCAP
pcap_activate, pcap_is_swapped_APIParam_1

It must not be called on a pcap descriptor created by pcap_create_APIName that has not yet been call pcap_activate_APIName with pcap_activate -LRB- 3PCAP
pcap descriptor,1

It must not be called on a pcap_activate_APIParam_1 created by pcap_create_APIName that has not yet been call pcap_activate_APIName with pcap_is_swapped_APIParam_1 -LRB- 3PCAP
pcap_activate, pcap_is_swapped_APIParam_1

It must not be called on a pcap descriptor created by pcap_create_APIName that has not yet been call pcap_activate_APIName with pcap_activate -LRB- 3PCAP
pcap descriptor,1

It must not be called on a pcap_activate_APIParam_1 created by pcap_create_APIName that has not yet been call pcap_activate_APIName with pcap_is_swapped_APIParam_1 -LRB- 3PCAP
pcap_activate, pcap_is_swapped_APIParam_1

It must not be called on a pcap descriptor created by pcap_create_APIName that has not yet been call pcap_activate_APIName with pcap_activate -LRB- 3PCAP
pcap descriptor,1

It must not be called on a pcap_activate_APIParam_1 created by pcap_create_APIName that has not yet been call pcap_activate_APIName with pcap_is_swapped_APIParam_1 -LRB- 3PCAP
pcap_activate, pcap_is_swapped_APIParam_1

It must not be called on a pcap descriptor created by pcap_create_APIName that has not yet been call pcap_activate_APIName with pcap_activate -LRB- 3PCAP
pcap descriptor,1

It must not be called on a pcap_activate_APIParam_1 created by pcap_create_APIName that has not yet been call pcap_activate_APIName with pcap_is_swapped_APIParam_1 -LRB- 3PCAP
pcap_activate, pcap_is_swapped_APIParam_1

It must not be called on a pcap descriptor created by pcap_create_APIName that has not yet been call pcap_activate_APIName with pcap_activate -LRB- 3PCAP
pcap descriptor,1

It must not be called on a pcap_activate_APIParam_1 created by pcap_create_APIName that has not yet been call pcap_activate_APIName with pcap_is_swapped_APIParam_1 -LRB- 3PCAP
pcap_activate, pcap_is_swapped_APIParam_1

It must not be called on a pcap descriptor created by pcap_create_APIName that has not yet been call pcap_activate_APIName with pcap_activate -LRB- 3PCAP
pcap descriptor,1

It must not be called on a pcap_activate_APIParam_1 created by pcap_create_APIName that has not yet been call pcap_activate_APIName with pcap_is_swapped_APIParam_1 -LRB- 3PCAP
pcap_activate, pcap_is_swapped_APIParam_1

It must not be called on a pcap descriptor created by pcap_create_APIName that has not yet been call pcap_activate_APIName with pcap_activate -LRB- 3PCAP
pcap descriptor,1

It must not be called on a pcap_activate_APIParam_1 created by pcap_create_APIName that has not yet been call pcap_activate_APIName with pcap_is_swapped_APIParam_1 -LRB- 3PCAP
pcap_activate, pcap_is_swapped_APIParam_1

It must not be called on a pcap descriptor created by pcap_create_APIName that has not yet been call pcap_activate_APIName with pcap_activate -LRB- 3PCAP
pcap descriptor,1

It must not be called on a pcap_activate_APIParam_1 created by pcap_create_APIName that has not yet been call pcap_activate_APIName with pcap_is_swapped_APIParam_1 -LRB- 3PCAP
pcap_activate, pcap_is_swapped_APIParam_1

Both ps_recv and ps_drop might , or might not , count packets not yet read from the pcap_stats_APIParam_2 and thus not yet seen by the application
operating system, pcap_stats_APIParam_2

Both ps_recv and pcap_stats_APIParam_2 might , or might not , count packets not yet read from the pcap_stats_APIParam_2 and thus not yet seen by the application
ps_drop, pcap_stats_APIParam_2

Both pcap_stats_APIParam_2 and pcap_stats_APIParam_2 might , or might not , count packets not yet read from the pcap_stats_APIParam_2 and thus not yet seen by the application
ps_recv, pcap_stats_APIParam_2

Both pcap_stats_APIParam_2 and pcap_stats_APIParam_2 might , or might not , pcap_stats_APIParam_2 not yet read from the pcap_stats_APIParam_2 and thus not yet seen by the application
count packets, pcap_stats_APIParam_2

to detect this case the caller should store a zero-length string in pcap_open_live_APIParam_5 before calling pcap_open_live_APIName and display the warning to the user
zero-length string,2

You will need to use whatever mechanism the OS provides for breaking a thread out of blocking calls in order to unblock the thread , such as thread cancellation or thread signalling in systems that support POSIX threads , or SetEvent_APIName on the result of pcap_getevent_APIName on a pcap_t on which the thread is blocked on Windows
pcap_t,1

pcap_datalink_APIName returns the link-layer header type on success and PCAP_ERROR_NOT_ACTIVATED if pcap_datalink_APIName is called on a capture handle that has been created but not activated
capture,1

We recommend always setting the timeout to a non-zero value 
timeout,2

The capture source specified does not exist
capture source,1

The capture source specified does not exist
capture source,1

The capture source specified does not exist
capture source,1

The capture source specified does not exist
capture source,1

For a live capture, it always returns false (0
capture,1

The behavior , , is undefined , as is the behavior if the timeout is set to zero or to a negative value
timeout,2

pcap_next_ex_APIName reads the next packet and returns a success/failure indication
packet,3

pcap_is_swapped_APIName returns true  or false  on success and PCAP_ERROR_NOT_ACTIVATED if pcap_is_swapped_APIName is called on a capture handle that has been created but not activated
capture,1

pcap_snapshot_APIName returns the snapshot length on success and PCAP_ERROR_NOT_ACTIVATED if pcap_snapshot_APIName is called on a capture handle that has been created but not activated
capture,1

the pointer pcap_geterr_APIName returns will no longer point to a valid error message string after the pcap_geterr_APIParam_1 passed to it is closed
pcap_t, pcap_geterr_APIParam_1

on FreeBSD, NetBSD, OpenBSD, DragonFly BSD, macOS, and Solaris 11, immediate pcap_set_immediate_mode_APIParam_2 must be turned on with a BIOCIMMEDIATE ioctl_APIName, as documented in bpf_APIName, on the descriptor returned by pcap_fileno_APIName, after pcap_activate_APIName is called
mode, pcap_set_immediate_mode_APIParam_2

you must use or copy the pcap_geterr_APIParam_0 before call pcap_close_APIName with pcap_t
string, pcap_geterr_APIParam_0

you must use or copy the pcap_geterr_APIParam_0 before call pcap_close_APIName with pcap_geterr_APIParam_1
pcap_t, pcap_geterr_APIParam_1

pcap_next_APIName returns a pointer to the packet data on success, and returns NULL if an error occurred, or if no packets were read from a live capture , or if no more packets are available in a savefile
capture,2

on Solaris 10 and earlier versions of Solaris , immediate pcap_set_immediate_mode_APIParam_2 must be turned on by
mode, pcap_set_immediate_mode_APIParam_2

On Linux , with previous releases of libpcap , capture devices are always in immediate pcap_set_immediate_mode_APIParam_2
mode, pcap_set_immediate_mode_APIParam_2

On Linux , with previous releases of libpcap , capture devices are always in immediate pcap_set_immediate_mode_APIParam_2
capture devices,1

on Digital UNIX/Tru64 UNIX, immediate pcap_set_immediate_mode_APIParam_2 must be turned on by doing a BIOCMBIC ioctl, as documented in packetfilter_APIName, to clear the ENBATCH flag on the descriptor returned by pcap_fileno_APIName, after pcap_activate_APIName is called
mode, pcap_set_immediate_mode_APIParam_2

The pcap_next_ex_APIParam_3 is not to be freed by the caller , and is not guaranteed to be valid after the next call to pcap_next_ex_APIName , pcap_next_APIName , pcap_loop_APIName , or pcap_dispatch_APIName
packet data, pcap_next_ex_APIParam_3

on Windows , immediate pcap_set_immediate_mode_APIParam_2 must be turned on by calling pcap_setmintocopy_APIName with a size of 0
mode, pcap_set_immediate_mode_APIParam_2

pcap_getnonblock_APIParam_2 is assumed to be able to hold at least PCAP_ERRBUF_SIZE chars
errbuf, pcap_getnonblock_APIParam_2

The struct pcap_pkthdr and the packet data are not to be freed by the caller , and are not guaranteed to be valid after the next call to pcap_next_ex_APIName , pcap_next_APIName , pcap_loop_APIName , or pcap_dispatch_APIName
struct pcap_pkthdr,2

The pcap_next_ex_APIParam_2 and the packet data are not to be freed by the caller , and are not guaranteed to be valid after the next call to pcap_next_ex_APIName , pcap_next_APIName , pcap_loop_APIName , or pcap_dispatch_APIName
struct pcap_pkthdr,2

The pcap_next_ex_APIParam_2 and the packet data are not to be freed by the caller , and are not guaranteed to be valid after the next call to pcap_next_ex_APIName , pcap_next_APIName , pcap_loop_APIName , or pcap_dispatch_APIName
struct pcap_pkthdr,3

The pcap_next_ex_APIParam_2 and the packet data are not to be freed by the caller , and are not guaranteed to be valid after the next call to pcap_next_ex_APIName , pcap_next_APIName , pcap_loop_APIName , or pcap_dispatch_APIName
struct pcap_pkthdr,3

The pcap_next_ex_APIParam_2 and the pcap_next_ex_APIParam_3 are not to be freed by the caller , and are not guaranteed to be valid after the next call to pcap_next_ex_APIName , pcap_next_APIName , pcap_loop_APIName , or pcap_dispatch_APIName
packet data, pcap_next_ex_APIParam_3

If there is an error, PCAP_ERROR be returned by pcap_getnonblock_APIName and pcap_getnonblock_APIParam_2 is filled in with an appropriate error message
error message,2

If there is an error, PCAP_ERROR be returned by pcap_getnonblock_APIName and pcap_getnonblock_APIParam_2 is filled in with an appropriate pcap_getnonblock_APIParam_2
error,2

If there is an error, PCAP_ERROR be returned by pcap_setnonblock_APIName and pcap_setnonblock_APIParam_3 is filled in with an appropriate error message
error message,3

If there is an error, PCAP_ERROR be returned by pcap_setnonblock_APIName and pcap_setnonblock_APIParam_3 is filled in with an appropriate pcap_setnonblock_APIParam_3
error,3

pcap_get_required_select_timeout_APIName returns, on UNIX, a pointer to a pcap_get_required_select_timeout_APIParam_0 timeval containing a value that must be used as the minimum timeout in select_APIName, poll_APIName, epoll_wait_APIName, and kevent_APIName calls if pcap_get_selectable_fd_APIName returns PCAP_ERROR
struct, pcap_get_required_select_timeout_APIParam_0

Each element of the list is of pcap_findalldevs_APIParam_1 , and has the following members
type pcap_if_t, pcap_findalldevs_APIParam_1

In previous releases, select_APIName, poll_APIName, epoll_wait_APIName, and kevent_APIName cannot be used on any capture source for which pcap_get_selectable_fd_APIName returns -1
capture source,1

the pointer pointed to by pcap_findalldevs_APIParam_1 is set to point to the first element of the list , or to NULL if no devices were found
pointer,2

the pcap_findalldevs_APIParam_2 pointed to by pcap_findalldevs_APIParam_1 is set to point to the first element of the list , or to NULL if no devices were found
devices,1

Each element of the list of addresses is of type pcap_addr_t , and has the following members
type pcap_addr_t,1

The list of devices must be freed with pcap_freealldevs_APIName , which call pcap_freealldevs_APIName with list pointed to by alldevs
devices,1

The list of pcap_findalldevs_APIParam_1 must be freed with pcap_freealldevs_APIName , which call pcap_freealldevs_APIName with list pointed to by alldevs
alldevs, pcap_findalldevs_APIParam_1

The PCAP_IF_UP and pcap_freealldevs_APIParam_1 became available in libpcap release 1.6.1
PCAP_IF_RUNNING constants, pcap_freealldevs_APIParam_1

The PCAP_IF_UP and pcap_freealldevs_APIParam_1 became available in libpcap release 1.6.1
libpcap release,1

The PCAP_IF_WIRELESS , PCAP_IF_CONNECTION_STATUS , PCAP_IF_CONNECTION_STATUS_UNKNOWN , PCAP_IF_CONNECTION_STATUS_CONNECTED , PCAP_IF_CONNECTION_STATUS_DISCONNECTED , and pcap_freealldevs_APIParam_1 became available in libpcap release 1.9.0
PCAP_IF_CONNECTION_STATUS_NOT_APPLICABLE constants, pcap_freealldevs_APIParam_1

The PCAP_IF_WIRELESS , PCAP_IF_CONNECTION_STATUS , PCAP_IF_CONNECTION_STATUS_UNKNOWN , PCAP_IF_CONNECTION_STATUS_CONNECTED , PCAP_IF_CONNECTION_STATUS_DISCONNECTED , and pcap_freealldevs_APIParam_1 became available in libpcap release 1.9.0
libpcap release,1

The PCAP_NETMASK_UNKNOWN constant became available in libpcap release 1.1.0
libpcap release,1

as indicated, finding no devices is considered success, rather than failure, so 0 will be returned in that case
devices,1

Promiscuous mode was requested , but the capture source does not support promiscuous mode
capture source,1

may be null a point-to-point interface
point-to-point interface,1

The pcap_set_tstamp_type_APIParam_2 specified in a previous pcap_set_tstamp_type_APIName call is not supported by the capture source , PCAP_WARNING
time stamp type, pcap_set_tstamp_type_APIParam_2

The pcap_set_tstamp_type_APIParam_2 specified in a previous pcap_set_tstamp_type_APIName call is not supported by the capture source , PCAP_WARNING
capture source,1

call pcap_can_set_rfmon_APIName with Monitor mode but the capture source does not support monitor mode
capture source,1

the pcap_activate_APIParam_1 is not closed and freed
pcap_t *, pcap_activate_APIParam_1

the pcap_activate_APIParam_1 should be closed using pcap_close
pcap_t, pcap_activate_APIParam_1

the pcap_activate_APIParam_1 should be closed using pcap_close
pcap_close,1

If there is an error, NULL be returned by pcap_lookupdev_APIName and pcap_lookupdev_APIParam_1 is filled in with an appropriate error message
error message,1

If there is an error, NULL be returned by pcap_lookupdev_APIName and pcap_lookupdev_APIParam_1 is filled in with an appropriate pcap_lookupdev_APIParam_1
error,1

in libpcap 1.8.0 and later , pcap_compile_APIName can be used in multiple threads within a single process
process,2

pcap_set_tstamp_type_APIName returns 0 on success if the specified time stamp type is expected to be supported by the capture device, PCAP_WARNING_TSTAMP_TYPE_NOTSUP if the specified time stamp type is not supported by the capture device, PCAP_ERROR_ACTIVATED if pcap_set_tstamp_type_APIName is called on a capture handle that has been activated, and PCAP_ERROR_CANTSET_TSTAMP_TYPE if the capture device does not support setting the time stamp type (only older versions of libpcap will return that
capture,1

pcap_set_tstamp_type_APIName returns 0 on success if the specified pcap_set_tstamp_type_APIParam_2 is expected to be supported by the pcap_set_tstamp_type_APIParam_1 device, PCAP_WARNING_TSTAMP_TYPE_NOTSUP if the specified pcap_set_tstamp_type_APIParam_2 is not supported by the pcap_set_tstamp_type_APIParam_1 device, PCAP_ERROR_ACTIVATED if pcap_set_tstamp_type_APIName is called on a pcap_set_tstamp_type_APIParam_1 handle that has been activated, and PCAP_ERROR_CANTSET_TSTAMP_TYPE if the pcap_set_tstamp_type_APIParam_1 device does not support setting the pcap_set_tstamp_type_APIParam_2 (only older versions of libpcap will return that
time stamp type, pcap_set_tstamp_type_APIParam_2

pcap_set_tstamp_type_APIName returns 0 on success if the specified pcap_set_tstamp_type_APIParam_2 is expected to be supported by the pcap_set_tstamp_type_APIParam_1 device, PCAP_WARNING_TSTAMP_TYPE_NOTSUP if the specified pcap_set_tstamp_type_APIParam_2 is not supported by the pcap_set_tstamp_type_APIParam_1 device, PCAP_ERROR_ACTIVATED if pcap_set_tstamp_type_APIName is called on a pcap_set_tstamp_type_APIParam_1 handle that has been activated, and PCAP_ERROR_CANTSET_TSTAMP_TYPE if the pcap_set_tstamp_type_APIParam_1 device does not support setting the pcap_set_tstamp_type_APIParam_2 (only older versions of libpcap will return that
capture device,1

However , in earlier versions of libpcap , it is not safe to use pcap_compile_APIName in multiple threads in a single process without some pcap_compile_APIParam_2 of mutual exclusion allowing only one thread to call it at any given time
form, pcap_compile_APIParam_2

However , in earlier versions of libpcap , it is not safe to use pcap_compile_APIName in multiple threads in a single process without some pcap_compile_APIParam_2 of mutual exclusion allowing only one thread to call it at any given time
process,2

However , in earlier versions of libpcap , it is not safe to use pcap_compile_APIName in multiple threads in a single pcap_compile_APIParam_2 without some pcap_compile_APIParam_2 of mutual exclusion allowing only one thread to call it at any given pcap_compile_APIParam_4
time, pcap_compile_APIParam_4

If pcap_fileno_APIParam_1 refers to a savefile that was opened using functions such as pcap_open_offline_APIName or pcap_fopen_offline_APIName, a dead pcap_fileno_APIParam_1 opened using pcap_open_dead_APIName, or a pcap_fileno_APIParam_1 that was created with pcap_create_APIName but that has not yet been activated with pcap_activate_APIName, pcap_fileno_APIName returns PCAP_ERROR
pcap_t, pcap_fileno_APIParam_1

If pcap_fileno_APIParam_1 refers to a pcap_fopen_offline_APIParam_1 that was opened using functions such as pcap_open_offline_APIName or pcap_fopen_offline_APIName, a dead pcap_fileno_APIParam_1 opened using pcap_open_dead_APIName, or a pcap_fileno_APIParam_1 that was created with pcap_create_APIName but that has not yet been activated with pcap_activate_APIName, pcap_fileno_APIName returns PCAP_ERROR
savefile, pcap_fopen_offline_APIParam_1

