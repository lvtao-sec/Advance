xmlXPathNextDescendantOrSelf_APIParam_2  the current node in the traversal.
htmlNodeDumpFileFormat_APIName returns  the number of byte written or -1 in case of failure.
xmlHashLookup_APIParam_2  the xmlHashLookup_APIParam_2 of the userdata.
Recurse on the parents until it finds the defined namespace or return NULL otherwise.
On lookup, strings are first searched in the new dictionary, then in @sub, and if not found are created in the new dictionary.
Read the value of a node @cur, this can be either the text carried directly by this node if it's a TEXT node or the aggregate string of the values carried by this node child's (TEXT and ENTITY_REF).
xmlThrDefParserInputBufferCreateFilenameDefault_APIName returns .
xmlACatalogRemove_APIName returns  the number of entries removed if successful, -1 otherwise.
xmlAddDtdEntity_APIParam_6  the entity xmlAddDtdEntity_APIParam_6.
xmlStrncat_APIParam_1  the original  xmlChar  * array.
xmlAddChild_APIName returns  the child or NULL in case of error.
Activation is only possible before the first Read_APIName.
xmlReadDoc_APIParam_4  a combination of  xmlParserOption.
xmlSchemaGetPredefinedType_APIName returns  the type if found, NULL otherwise.
xmlIOFTPClose_APIParam_1  the I/O xmlIOFTPClose_APIParam_1.
xmlTextWriterWriteFormatString_APIName returns  xmlTextWriterWriteFormatString_APIParam_3 bytes written (may be 0 because of buffering) or -1 in case of error.
xmlValidGetPotentialChildren_APIParam_3  a pointer to the number of element in the list.
xmlXPathDifference_APIName returns  the difference between the two node sets, or xmlXPathDifference_APIParam_1 if xmlXPathDifference_APIParam_2 is empty.
xmlTextWriterWriteDTD_APIParam_5  string content of the DTD.
htmlIsBooleanAttr_APIName returns  false if the  attribute  is not boolean, true otherwise.
xmlCreateIntSubset_APIParam_4  the system ID.
parse the declaration for an Element content either Mixed or Children, the cases EMPTY and ANY are handled directly in  xmlParseElementDecl  [46] contentspec ::= 'EMPTY' | 'ANY' | Mixed | children.
htmlCtxtReadIO_APIName returns  the resulting document tree.
xmlStrcasecmp_APIParam_1  the first  xmlChar  *.
xmlBufGetNodeContent_APIParam_1  a buffer  xmlBufPtr.
xmlSAX2ElementDecl_APIParam_2  the element xmlSAX2ElementDecl_APIParam_2.
[18] CDSect ::= CDStart CData CDEnd [19] CDStart ::= '<!
a function to provide the equivalent of fetching a character from a string array.
'=' S?.
xmlGetThreadId_APIName returns  the current thread ID number.
xmlUnsetNsProp_APIParam_1  the xmlUnsetNsProp_APIParam_1.
xmlRegExecErrInfo_APIParam_4  return number of negative transitions xmlRegExecErrInfo_APIParam_5  pointer to the array of acceptable xmlRegExecErrInfo_APIParam_5.
xmlNewDtd_APIParam_3  the external ID.
Free an automata.
Opens a module/shared library given its xmlModuleOpen_APIParam_1 or path NOTE: that due to portability issues, behaviour can only be guaranteed with @name using ASCII.
xmlValidateElementDecl_APIParam_2  a document instance.
xmlSprintfElementContent_APIParam_1  an output buffer.
xmlHashScanFull3_APIParam_6 or NULL.
Note that a value of -1 indicates that the content length element was not included in the response header.
xmlSaveFormatFileTo_APIParam_1  an output I/O buffer.
This will be fixed in XML Schema 1.1. xmlSchemaGetCanonValue_APIParam_1  the precomputed value.
Walk all the element of the first from first to last and apply the xmlListWalk_APIParam_2 function to it.
xmlBuildRelativeURI_APIName returns  a new xmlBuildRelativeURI_APIParam_1 string (to be freed by the caller) or NULL in case error.
warningSAXFunc_APIParam_1 warningSAXFunc_APIParam_3 XML parser context.
xmlNanoHTTPMethod_APIName returns  NULL in case of failure, otherwise a request handler.
xmlC14NDocDumpMemory_APIParam_2  the xmlC14NDocDumpMemory_APIParam_2 set to be included in the canonized image or NULL if all document xmlC14NDocDumpMemory_APIParam_2 should be included.
xmlSAX2NotationDecl_APIParam_4  The system ID of the entity.
xmlExpMaxToken_APIParam_1  a compiled expression.
htmlReadFile_APIParam_3  a combination of htmlParserOption(s).
xmlXPathAddValues_APIParam_1  the XPath Parser context.
Creation of a new node containing a  comment  within a document.
The returned substring contains those  characters  for which the position of the character is greater than or equal to the second argument and, if the third argument is specified, less than the sum of the second and third arguments; the comparisons and addition used for the above follow the standard IEEE 754 rules.
xmlTextWriterStartDTD_APIParam_1  the  xmlTextWriterPtr.
xmlXIncludeProcessTree_APIName returns  0 if no substitution were done, -1 if some processing failed or the number of substitutions done.
Create a parser context for an HTML in-memory document.
xmlAutomataNewCountTrans_APIParam_1  an au.
htmlDocContentDumpOutput_APIParam_3  the htmlDocContentDumpOutput_APIParam_3 string.
Examines if the library has been compiled with a given xmlHasFeature_APIParam_1.
The document may be modified during the parsing process.
xmlSetDocCompressMode_APIParam_2  the compression ratio.
Existing userdata for this tuple will be removed and freed with @f. xmlHashRemoveEntry2_APIParam_1  the hash xmlHashRemoveEntry2_APIParam_1.
ftpListCallback_APIParam_11  the ftpListCallback_APIParam_11.
Appends a next sibling to a list of computed values.
xmlSAXParseFile_APIParam_2  the xmlSAXParseFile_APIParam_2.
Allocate a new NOTATION value.
Creation of a new  reference  node.
xmlStructuredErrorFunc_APIParam_1  user provided data for the.
xmlShellDu_APIParam_4  unused.
xmlNodeSetContent_APIParam_2  the new value of the xmlNodeSetContent_APIParam_2.
parse an Enumerated  attribute  type.
xmlTextWriterStartDTDElement_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlTextWriterStartElementNS_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlNewCharEncodingHandler_APIParam_3  the  xmlCharEncodingOutputFunc  to write that encoding.
xmlEncodeSpecialChars_APIName returns  A newly allocated string with the substitution done.
xmlFirstElementChild_APIName returns  the first element child or NULL if not available.
Check that a xmlSchemaValPredefTypeNode_APIParam_2 conforms to the lexical space of the predefined xmlSchemaValPredefTypeNode_APIParam_1.
| '-' | '_' | CombiningChar | Extender.
Existing entry for this @name will be removed and freed with @f if found.
xmlMemDisplay_APIParam_1  a FILE descriptor used as the output file, if NULL, the result is written to the file .memorylist.
xmlParseTextDecl_APIParam_1  an XML parser context.
xmlParseExternalID_APIParam_3  indicate whether we should restrict parsing to only production [75], see NOTE below.
xmlTextWriterEndPI_APIParam_1  the  xmlTextWriterPtr.
Add a new node @elem as the previous sibling of @cur merging adjacent TEXT nodes (@elem may be freed) If the new node was already inserted in a document it is first unlinked from its existing context.
xmlAutomataNewCounterTrans_APIParam_2  the starting point of the transition xmlAutomataNewCounterTrans_APIParam_3  the target point of the transition or NULL.
xmlReaderNewFile_APIName returns  0 in case of success and -1 in case of error.
xmlConvertSGMLCatalog_APIParam_1  the catalog.
xmlCheckFilename_APIParam_1  the xmlCheckFilename_APIParam_1 to check.
xmlSAX2AttributeDecl_APIParam_3  the  attribute  name.
Find the set of references for the supplied xmlGetRefs_APIParam_2.
xmlRegexpCompile_APIParam_1  a regular expression string.
xmlXPtrNewRange_APIParam_4  the ending index.
xmlXPathNodeTrailing_APIName returns  the xmlXPathNodeTrailing_APIParam_1 in @nodes that follow @node in document order, @nodes if @node is NULL or an empty node-set if @nodes doesn't contain @node.
htmlElementStatusHere_APIName returns  one of HTML_VALID, HTML_DEPRECATED,  HTML_INVALID.
Dump the content of the object for debugging purposes.
xmlTextReaderRelaxNGValidateCtxt_APIParam_1  the  xmlTextReaderPtr  used.
xmlCharEncFirstLine_APIParam_2  an  xmlBuffer  for the output.
This will dump the content of the entity table as an XML DTD definition.
xmlReadMemory_APIParam_1  a pointer to a char array.
Use  xmlIsBaseChar_ch  or  xmlIsBaseCharQ  instead.
xmlSAXUserParseMemory_APIParam_4  the length of the XML document in bytes.
Push the content of the arry xmlParserInputBufferPush_APIParam_1 the input buffer This routine handle the I18N transcoding to internal UTF-8 This is used when operating the parser xmlParserInputBufferPush_APIParam_1 progressive (push) mode.
xmlStrcasecmp_APIParam_2  the second  xmlChar  *.
xmlTextWriterWriteVFormatDTDInternalEntity_APIParam_3  the xmlTextWriterWriteVFormatDTDInternalEntity_APIParam_3 of the DTD entity.
UTF8ToHtml_APIParam_1  a po.
xmlXPathPopString_APIName returns  the string.
xmlXIncludeProcessTreeFlags_APIParam_2  a set of  xmlParserOption  used for parsing XML includes.
xmlRelaxNGValidatePushElement_APIParam_1  the validation context.
xmlParseAttributeType_APIParam_2  the enumeration xmlParseAttributeType_APIParam_2 built while parsing.
xmlNewDocNodeEatName_APIName returns  a pointer to the new node object.
a realloc_APIName equivalent, with logging of the allocation info.
This is a blocking call.
xlinkSimpleLinkFunk_APIParam_5  the link xlinkSimpleLinkFunk_APIParam_5.
xmlNodeDumpOutput_APIParam_3  the current node.
Function to extract the content of a buffer.
In case we have DTD(s) then this is done if DTD loading has been requested.
xmlXPathNsLookup_APIParam_2  the namespace xmlXPathNsLookup_APIParam_2 value.
xmlParserInputBufferCreateFilenameFunc_APIParam_2  the requested source encoding.
xmlNanoFTPCwd_APIParam_2  a xmlNanoFTPCwd_APIParam_2 on the server.
Similarly, the declaration of a general entity must precede any  reference  to it which appears in a default value in an attribute-list declaration.
xmlSchemaValidateFacetWhtsp_APIParam_1  the xmlSchemaValidateFacetWhtsp_APIParam_1 to check.
xmlTextReaderPreservePattern_APIParam_2  an XPath subset xmlTextReaderPreservePattern_APIParam_2.
xmlSAX2IsStandalone_APIParam_1  the user data (XML parser context).
SAX2 callback when an element start has been detected by the parser.
xmlListReverse_APIParam_1  a list.
xmlSAX2IsStandalone_APIName returns  1 if true.
The xmlGcMemSetup_APIParam_3 is specialized for atomic block allocations (i.e.
xmlTextWriterWriteVFormatAttributeNS_APIParam_4  namespace URI.
The HTML DTD allows a tag to implicitly close other tags.
htmlNodeDumpFormatOutput_APIParam_3  the current node.
xmlXPathNextAncestor_APIName returns  the next element following that axis.
Create a new dictionary, inheriting strings from the read-only dictionary @sub.
xmlHashRemoveEntry2_APIParam_2  the xmlHashRemoveEntry2_APIParam_2 o. xmlHashRemoveEntry2_APIParam_4 the userdata.
Provides the value of the specified  attribute.
xmlXPathNewCString_APIName returns  the newly created object.
xmlStrstr_APIParam_2  the  xmlChar  to search (needle).
Deallocate the memory used by an entities hash xmlFreeNotationTable_APIParam_1.
| '-' | '_' | ':' | CombiningChar | Extender [5] Name ::= (Letter | '_' | ':') (NameChar)* [6] Names ::= Name (S Name)*.
xmlRelaxNGNewMemParserCtxt_APIName returns  the parser context or NULL in case of error.
xmlHashLookup2_APIParam_3  a second xmlHashLookup2_APIParam_2 of the userdata.
xmlExpNewAtom_APIParam_3  the atom xmlExpNewAtom_APIParam_2 length in byte (or -1);.
of the xmlSchemaValidateLengthFacet_APIParam_3 to be validated xmlSchemaValidateLengthFacet_APIParam_4  the precomputed xmlSchemaValidateLengthFacet_APIParam_3.
LocalPart [NS 6] Prefix ::= NCName [NS 7] LocalPart ::= NCName.
xmlSAX2AttributeDecl_APIParam_2  the name of the element.
xmlBufferShrink_APIName returns  the number of #xmlChar removed, or -1 in case of failure.
xmlAddNotationDecl_APIParam_5  the system identifier or NULL.
xmlTextWriterWriteVFormatDTDElement_APIParam_3  xmlTextWriterWriteVFormatDTDElement_APIParam_3 string (see printf).
That is to say, if either of the opening or closing parentheses in a choice, seq, or Mixed construct is contained in the replacement text for a parameter entity, both must be contained in the same replacement text.
xmlExpCtxtNbCons_APIParam_1  an expression context.
isStandaloneSAXFunc_APIParam_1  the user data (XML parser context).
range-to is not a real function but a special type of location step which is handled in xpath.c.
xmlReadFile_APIParam_3  a combination of  xmlParserOption.
xmlSchemaGetParserErrors_APIName returns  -1 in case of failure, 0 otherwise.
entityDeclSAXFunc_APIParam_1  the user data (XML parser context).
Removes an  xmlXPathObjectPtr  from an existing LocationSet.
[69] PEReference ::= '%' Name ';' [ WFC: No Recursion ] A parsed entity must not contain a recursive  reference  to itself, either directly or indirectly.
xmlTextWriterWriteVFormatElement_APIParam_2  element xmlTextWriterWriteVFormatElement_APIParam_2.
xmlCtxtUseOptions_APIParam_1  an XML parser context.
xmlCopyElementContent_APIName returns  the new  xmlElementContentPtr  or NULL in case of error.
xmlAllocParserInputBuffer_APIName returns  the new parser input or NULL.
Initilize the default type libraries.
xmlSchemaGetValidErrors_APIParam_3  the warning function result xmlSchemaGetValidErrors_APIParam_4  the functions context result.
Signature for the deregistration callback of a discarded xmlDeregisterNodeFunc_APIParam_1.
elementDeclSAXFunc_APIParam_1  the user data (XML parser context).
get the compression ratio for a document, ZLIB based.
xmlDebugDumpAttr_APIParam_3  the indentation level.
xmlNanoHTTPRead_APIParam_1  the HTTP context.
Get the atom associated to the sequence @left , @right Note that @left and @right are consumed in the operation, to keep an handle on them use xmlExpRef_APIName and use xmlExpFree_APIName to release them, this is true even in case of failure (unless xmlExpNewSeq_APIParam_1 == NULL).
xmlCtxtReadIO_APIParam_6  the document xmlCtxtReadIO_APIParam_6, or NULL.
startElementNsSAX2Func_APIParam_2  the local name of the element.
xmlTextWriterWriteBase64_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlXPathRegisterFunc_APIParam_2  the.
xmlCatalogGetPublic_APIParam_1  the public ID string.
xmlParseNamespace_APIParam_1  an XML parser context.
xmlCopyError_APIParam_1  a source error.
xmlParseEntity_APIName returns  the resulting document tree.
xmlXPtrNewContext_APIParam_2  the node that directly contains the XPointer being evaluated or NULL.
xmlSchemaValPredefTypeNode_APIName returns  0 if this validates, a positive error code number otherwise and -1 in case of internal or API error.
xmlSAXVersion_APIParam_2  the xmlSAXVersion_APIParam_2, 1 or 2. xmlSAXVersion_APIName returns  0 in case of success and -1 in case of error.
xmlPopInput: the current input pointed by ctxt->input came to an end pop it and return the next char.
xmlGenericErrorFunc_APIParam_2  xmlGenericErrorFunc_APIParam_3 message xmlGenericErrorFunc_APIParam_3  xmlGenericErrorFunc_APIParam_3 extra arguments of xmlGenericErrorFunc_APIParam_3 varags to format xmlGenericErrorFunc_APIParam_3 message.
htmlGetMetaEncoding_APIParam_1  the document.
xmlNodeSetSpacePreserve_APIParam_1  the node being changed.
xmlValidateName_APIParam_2  allow spaces in front and end of the string.
xmlParseDefaultDecl_APIParam_1  an XML parser context.
xmlURIUnescapeString_APIParam_3  optional destination buffer.
xmlNanoFTPProxy_APIParam_5  the xmlNanoFTPProxy_APIParam_5 of proxy 1 for using SITE, 2 for USER a@b.
xmlCreateIOParserCtxt_APIName returns  the new parser context or NULL.
xmlTextWriterWriteRawLen_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
Create a buffered parser input for the progressive parsing for the input from an immutable memory area.
xmlNewPI_APIParam_1  the processing instruction xmlNewPI_APIParam_1.
parse an XML namespace non qualified name.
Check if any error was detected during validation.
xmlExpNewSeq_APIParam_3  xmlExpNewSeq_APIParam_3 expression.
xmlSaveFormatFileTo_APIParam_3  the xmlSaveFormatFileTo_APIParam_3 if any assuming the I/O layer handles the trancoding.
xmlSaveToIO_APIParam_1  an I/O write function.
namePush_APIParam_2  the element name.
This function is similar to  xmlGetProp  except it will accept only an  attribute  in no namespace.
xmlParseVersionInfo_APIName returns  the version string, e.g.
xmlXPathNextPrecedingSibling_APIParam_1  the XPath Parser context.
xmlXPathCastToBoolean_APIParam_1  an XPath object.
Set a size xmlDictSetLimit_APIParam_2 for the dictionary Added in 2.9.0. xmlDictSetLimit_APIParam_1  the dictionary.
xmlThrDefSubstituteEntitiesDefaultValue_APIName returns .
xmlGetDtdNotationDesc_APIName returns  the  xmlNotationPtr  if found or NULL.
xmlListDataCompare_APIParam_1  the first data.
xmlThrDefKeepBlanksDefaultValue_APIParam_1 .
Check a xmlSchemaValidateFacet_APIParam_3 against a xmlSchemaValidateFacet_APIParam_2 condition.
xmlIsIdeographic_APIName returns  true if argument valid, false otherwise.
xmlTextReaderHasAttributes_APIName returns  1 if true, 0 if false, and -1 in case or error.
xmlAutomataGetInitState_APIParam_1  an automata.
xmlSaveDoc_APIName returns  the number of byte written or -1 in case of error.
xmlAddDtdEntity_APIParam_4  the entity external ID if available.
xmlParserInputBufferCreateFilenameFunc_APIName returns  the new  xmlParserInputBufferPtr  in case of success or NULL if no method was found.
xmlCatalogResolve_APIParam_2  the system ID string.
xmlValidGetValidElements_APIParam_4  the size of the array.
xmlXPathIdFunction_APIParam_1  the XPath Parser context.
htmlDocDump_APIParam_1  the FILE*.
All files info are passed back in the callbacks.
Note the first argument is the document node, not the DTD node.
xmlAutomataNewAllTrans_APIParam_1  an au.
xmlCreateURI_APIName returns  the new structure or NULL in case of error.
xmlSchemaValPredefTypeNodeNoNorm_APIParam_4  the xmlSchemaValPredefTypeNodeNoNorm_APIParam_4 containing the xmlSchemaValPredefTypeNodeNoNorm_APIParam_2.
xmlShellPwd_APIParam_3  a xmlShellPwd_APIParam_3.
xmlSAX2ElementDecl_APIParam_4  the element value tree.
xmlExternalEntityLoader_APIParam_2 of the resource requested xmlExternalEntityLoader_APIParam_2  The Public xmlExternalEntityLoader_APIParam_2 of the resource requested.
Callback to copy data from a hash.
xmlCatalogResolveURI_APIParam_1  the xmlCatalogResolveURI_APIParam_1.
xmlIsChar_APIParam_1  character to validate.
xmlValidNormalizeAttributeValue_APIParam_1  the document.
xmlSaveToIO_APIParam_5  a set of xmlSaveOptions.
xmlRegFreeRegexp_APIParam_1  the xmlRegFreeRegexp_APIParam_1.
Insert xmlListInsert_APIParam_2 in the ordered list at the beginning for this value.
Check is a catalog is empty.
xmlAutomataNewCountTrans2_APIParam_1  an au.
xmlHasProp_APIName returns  the  attribute  or the  attribute  declaration or NULL if neither was found.
xmlSchemaCollapseString_APIParam_1  a xmlSchemaCollapseString_APIParam_1.
xmlCtxtReadMemory_APIParam_2  a pointer to a char array.
xmlXPathVariableLookupFunc_APIParam_1  an XPath context.
xmlFreeNode_APIParam_1  the node.
xmlMallocLoc_APIParam_3  the xmlMallocLoc_APIParam_3 number.
xmlSchemaValidateStream_APIParam_2  the xmlSchemaValidateStream_APIParam_2 to use for reading the data.
xmlTextWriterWriteVFormatElementNS_APIParam_2 .
NOTE: this function acts independently of namespaces associated to the attribute.
Namespace nodes in libxml don't match the XPath semantic.
Compare two nodes w.r.t document order.
xmlReaderNewFd_APIParam_5  a combination of  xmlParserOption.
Signature of an error callback from a Relax-NG validation.
xmlSAX2EndElementNs_APIParam_3  the element namespace xmlSAX2EndElementNs_APIParam_3 if available.
xmlSAX2EndElementNs_APIParam_1  the user data (XML parser context).
of areas useful for garbage collected memory allocators Should this be blocked if there was already some allocations done ?.
Validate a tree xmlSchematronValidateDoc_APIParam_2 against the schematron.
xmlBufferResize_APIParam_2 size  the desired xmlBufferResize_APIParam_2.
xmlMutexLock_APIParam_1  the simple mutex.
xmlCreateURLParserCtxt_APIName returns  the new parser context or NULL.
xmlXPatherror_APIParam_3  the xmlXPatherror_APIParam_3 number.
htmlParseCharRef_APIParam_1  an HTML parser context.
Dump all the global catalog content to the given file.
This routine will issue a warning when encountered.
xmlListPushBack_APIName returns  1 if successful, 0 otherwise.
Free the LocationSet compound (not the actual ranges !).
xmlGetNodePath_APIParam_1  a xmlGetNodePath_APIParam_1.
cp )* S? ')'
xmlCatalogAdd_APIParam_1  the xmlCatalogAdd_APIParam_1 of record to add to the catalog.
xmlRemoveID_APIName returns  -1 if the lookup failed and 0 otherwise.
xmlNewDocTextLen_APIParam_1  the document.
parse an XML qualified name [NS 5] QName ::= (Prefix ':')?
parse an XML in-memory document and build a tree.
Callback called when a validity warning is found.
xmlDocDumpMemoryEnc_APIParam_1  Document to generate XML text from.
xmlNanoFTPGetSocket_APIParam_2  the file to retrieve (or NULL if path is in context).
Try to validate a single  attribute  definition basically it does the following checks as described by the XML-1.0 recommendation: - [ VC: Attribute Default Legal ] - [ VC: Enumeration ] - [ VC: ID Attribute Default ] The ID/IDREF uniqueness and matching are done separately.
Dump an HTML node, recursive behaviour,children are printed too, and formatting returns are added.
htmlNodeDumpFile_APIParam_2  the document.
xmlNanoHTTPMethod_APIParam_1  The xmlNanoHTTPMethod_APIParam_1 to load.
xmlPatternGetStreamCtxt_APIParam_1  the precompiled pattern.
It calls the default link detection callbacks upon link detection.
xmlTextWriterWriteVFormatAttributeNS_APIParam_6  pointer to the first member of the variable argument list.
The xmlSetupParserForBuffer_APIParam_2 parameter must not be NULL, but the xmlSetupParserForBuffer_APIParam_3 parameter can be.
xmlXPathNodeSetDel_APIParam_1  the initial node set.
xmlHasNsProp_APIParam_2  the  attribute  xmlHasNsProp_APIParam_2.
Implement the count_APIName XPath function number count(node-set).
xmlSchemaSetValidStructuredErrors_APIParam_1  a schema validation context.
add a new  xmlXPathObjectPtr  to an existing LocationSet If the location already exist in the set @val is freed.
Set the buffer allocation method.
Do a complete resolution lookup of an xmlCatalogLocalResolveURI_APIParam_2 using a document's private catalog list.
xmlAddAttributeDecl_APIParam_8  the  attribute  default value.
parse an XML public literal [12] PubidLiteral ::= '"' PubidChar* '"' | "'" (PubidChar - "'")* "'".
xmlC14NDocSaveTo_APIParam_1  the XML document for canonization.
Parse the xmlStringLenGetNodeList_APIParam_2 string and build the node list associated.
xmlNewTextReaderFilename_APIName returns  the new  xmlTextReaderPtr  or NULL in case of error.
xmlValidateNotationDecl_APIName returns  1 if valid or 0 otherwise.
xmlShellList_APIParam_2  unused.
xmlXPathFunctionLookup_APIName returns  the  xmlXPathFunction  or NULL if not found.
xmlParseElementContentDecl_APIParam_3  the Element Content pointer will be stored here if any.
xmlTextReaderGetAttribute_APIParam_1  the  xmlTextReaderPtr  used.
xmlXPathNewCString_APIParam_1  the char * value.
xmlCopyNodeList_APIName returns  a new #xmlNodePtr, or NULL in case of error.
xmlXPathPopExternal_APIParam_1  an XPath parser context.
The declaration of a parameter entity must precede any  reference  to it... [ WFC: In DTD ] Parameter-entity references may only appear in the DTD.
htmlDocDump_APIName returns  the number of byte written or -1 in case of failure.
xmlXPtrNewRangeNodePoint_APIName returns  the newly created object.
xmlSchematronNewValidCtxt_APIName returns  the validation context or NULL in case of error.
xmlSchemaGetParserErrors_APIParam_3  the warning callback result xmlSchemaGetParserErrors_APIParam_4  contextual data for the callbacks result.
xmlSchemaGetCanonValue_APIParam_2  the returned value.
if xmlBufferAddHead_APIParam_3 == -1, the length of @str is recomputed.
xmlXPathEvalPredicate_APIParam_2  the Predicate Expression evaluation result.
For example, translate("bar","abc","ABC") returns the string BAr.
xmlBufferCreateStatic_APIName returns  the new structure.
xmlSAXParseFileWithData_APIParam_3  work in xmlSAXParseFileWithData_APIParam_3 mode, i.e.
Write a formatted raw xml text.
xmlHashQLookup_APIName returns  the pointer to the userdata.
htmlHandleOmittedElem_APIParam_1  int 0 or 1. htmlHandleOmittedElem_APIName returns  the last value for 0 for no handling, 1 for auto insertion.
Write a formatted xmlTextWriterWriteFormatAttribute_APIParam_4 attribute.
entityDeclSAXFunc_APIParam_2  the entity entityDeclSAXFunc_APIParam_2.
Pops a string from the stack, handling conversion if needed.
xmlStreamPush_APIParam_3  the namespace xmlStreamPush_APIParam_2.
Check error with #xmlXPathCheckError.
This is processed according to section 5.2 of the RFC 2396 5.2.
xmlTextWriterStartDocument_APIParam_4  "yes" or "no" or NULL for default.
xmlAddDocEntity_APIParam_6  the entity xmlAddDocEntity_APIParam_6.
xmlTextWriterEndDTDElement_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
This function actually just wraps a call to xmlBytesConsumed_APIName for the parser context associated with the xmlTextReaderByteConsumed_APIParam_1.
xmlCtxtReadFile_APIParam_3  the document xmlCtxtReadFile_APIParam_3, or NULL.
[50] seq ::= '(' S?
xmlXPathNodeEval_APIParam_3  the XPath context.
Dump a RelaxNG structure back.
xmlXPathWrapNodeSet_APIName returns  the newly created object.
xmlDocDumpFormatMemory_APIParam_1  the document.
xmlRemoveID_APIParam_2  the  attribute.
xmlNewCDataBlock_APIName returns  a pointer to the new node object.
Add a new node to @parent, at the end of the child (or property) list merging adjacent TEXT nodes (in which case @cur is freed) If the new node is ATTRIBUTE, it is added into properties instead of children.
Callback used in the I/O Output API to close the resource.
xmlDOMWrapCloneNode_APIParam_3  the xmlDOMWrapCloneNode_APIParam_3 to start with.
xmlValidateOneElement_APIParam_1  the validation context.
xmlTextWriterWriteVFormatRaw_APIParam_3  pointer to the first member of the variable argument list.
xmlAddNextSibling_APIName returns  the new node or NULL in case of error.
expressions context xmlExpExpDerive_APIParam_2  the englobing expression.
xmlXPathCompareValues_APIParam_1  the XPath Parser context.
xmlXPathNotFunction_APIParam_2  the number of arguments.
ignorableWhitespaceSAXFunc_APIParam_2  a  xmlChar  string.
This doesn't unlink the child from the list, use xmlUnlinkNode_APIName first.
xmlDocDump_APIParam_1  the FILE*.
Wraps the @val data into an XPath object.
xmlTextWriterStartAttribute_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlOutputWriteCallback_APIName returns  the number of bytes written or -1 in case of error.
xmlExpStringDerive_APIParam_4  the string xmlExpStringDerive_APIParam_4 in bytes if available.
xmlSwitchInputEncoding_APIParam_2  the xmlSwitchInputEncoding_APIParam_2 stream.
xmlXPathCtxtCompile_APIParam_1  an XPath context.
parse the declaration for a Mixed Element content The leading '(' and spaces have been skipped in  xmlParseElementContentDecl  [51] Mixed ::= '(' S?
xmlParserInputBufferPush_APIParam_1  a. buffered parser input.
xmlListReverseWalk_APIParam_1  a list.
xmlParserInputBufferCreateMem_APIParam_2  the length of the memory block.
xmlXPtrLocationSetRemove_APIParam_1  the initial range set.
xmlSchemaSetParserStructuredErrors_APIParam_2  the structured error function xmlSchemaSetParserStructuredErrors_APIParam_3  the functions context.
the last xmlMemDisplayLast_APIParam_2 of memory allocated and not freed, useful for dumping the memory left allocated between two places at runtime.
If there is insufficient memory available, or the argument is NULL, the function returns NULL.
xmlSaveFormatFile_APIParam_2  the document.
xmlStrlen_APIName returns  the number of  xmlChar  contained in the ARRAY.
xmlAutomataNewNegTrans_APIParam_5  the second input string associated xmlAutomataNewNegTrans_APIParam_3 that transition.
unparsedEntityDeclSAXFunc_APIParam_4  The system ID of the entity.
If htmlSAXParseDoc_APIParam_3 is not NULL, use the SAX callbacks to handle parse events.
Creation of a new node element.
xmlXPathDifference_APIParam_2  a node-set.
xmlSchemaCheckFacet_APIParam_4  the optional xmlSchemaCheckFacet_APIParam_4 of the type.
xmlAddChildList_APIParam_2  the first node in the list.
xmlSchemaValidateLengthFacetWhtsp_APIParam_6  the whitespace type of the xmlSchemaValidateLengthFacetWhtsp_APIParam_3.
xmlTextReaderLocalName_APIParam_1  the  xmlTextReaderPtr  used.
xmlXPtrEvalRangePredicate_APIParam_1  the XPointer Parser context.
xmlGetDtdQAttrDesc_APIParam_3 name  the  attribute  xmlGetDtdQAttrDesc_APIParam_3.
xmlTextWriterWriteDTDAttlist_APIParam_1  the  xmlTextWriterPtr.
xmlLoadSGMLSuperCatalog_APIName returns  the catalog parsed or NULL in case of error.
xmlXPathNotEqualValues_APIParam_1  the XPath Parser context.
Check that a xmlSchemaValidatePredefinedType_APIParam_2 conforms to the lexical space of the predefined xmlSchemaValidatePredefinedType_APIParam_1.
Dump the transformed RelaxNG tree.
'>' With namespace [NS 9] ETag ::= '</' QName S?
xmlSchemaValidateSetLocator_APIParam_2  the locator function pointer xmlSchemaValidateSetLocator_APIParam_3  the locator context.
xmlNanoFTPRead_APIParam_3  the buffer length.
Implement the last_APIName XPath function number last_APIName The last function returns the number of nodes in the context node list.
xmlParseAttributeListDecl_APIParam_1  an XML parser context.
Callback used in the I/O Input API to close the resource.
If xmlSAXParseEntity_APIParam_1 is NULL, fallback to the default DOM tree building routines.
xmlNanoFTPUpdateURL_APIParam_1  an FTP context.
xmlDOMWrapCloneNode_APIParam_6  the optional new parent of @node in @destDoc.
xmlAddEncodingAlias_APIParam_2  the xmlAddEncodingAlias_APIParam_2 xmlAddEncodingAlias_APIParam_1 as parsed, in UTF-8 format (ASCII actually).
xmlSchematronNewValidCtxt_APIParam_1  a precompiled XML Schematrons.
xmlStrEqual_APIParam_2  the second  xmlChar  *.
xmlSchemaIsValid_APIName returns  1 if valid so far, 0 if errors were detected, and -1 in case of internal error.
Try to lookup the catalog  reference  associated to a public ID DEPRECATED, use xmlCatalogResolvePublic_APIName.
xmlNodeDumpOutput_APIParam_5  is formatting allowed.
Used to get the user preference w.r.t.
Do a copy of an  attribute  list.
attributeDeclSAXFunc_APIParam_6  the  attribute  default value.
valuePush_APIParam_1  an XPath evaluation context.
xmlCreateEnumeration_APIName returns  the  xmlEnumerationPtr  just created or NULL in case of error.
Setup the parser context to parse a new xmlSetupParserForBuffer_APIParam_2; Clears any prior contents from the parser context.
xmlPatternMaxDepth_APIName returns  -2 if no limit (using //), otherwise the depth, and -1 in case of error.
xmlShellWrite_APIParam_1  the shell context.
Implement the add operation on XPath objects: The numeric operators convert their operands to numbers as if by calling the number function.
xmlSchemaValidityLocatorFunc_APIParam_3  returned xmlSchemaValidityLocatorFunc_APIParam_3 information.
xmlStrQEqual_APIParam_1  the prefix of the QName.
xmlIsDigit_APIParam_1  character to validate.
xmlExpIsNillable_APIName returns  1 if nillable, 0 if not and -1 in case of error.
xmlTextReaderGetParserLineNumber_APIName returns  an int or 0 if not available.
xmlTextWriterWriteDTDEntity_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlListReverseWalk_APIParam_2  a processing function.
Validate a full subtree when xmlRelaxNGValidatePushElement_APIName returned 0 and the content of the node has been expanded.
xmlXPathNewNodeSetList_APIParam_1  an existing NodeSet.
xmlCreateDocParserCtxt_APIName returns  the new parser context or NULL.
This will not copy the memory area to the buffer, but the memory is expected to be available until the end of the parsing, this is useful for example when using mmap'ed file.
In the case the document is not Well Formed, a attempt to build a tree is tried anyway.
Create a new  xmlNewTextWriter  structure with @buf as output TODO: handle xmlNewTextWriterMemory_APIParam_2.
xmlNanoHTTPMethodRedir_APIParam_7  xmlNanoHTTPMethodRedir_APIParam_3 length.
This can be either an XML Catalog or an SGML Catalog It will recurse in SGML CATALOG entries.
Validate that the given xmlValidateNameValue_APIParam_1 match Name production.
xmlSchemaValidateLengthFacet_APIParam_5  the actual xmlSchemaValidateLengthFacet_APIParam_5 of the xmlSchemaValidateLengthFacet_APIParam_3.
xmlParserGetDirectory_APIParam_1  the path to a file.
[ VC: ID Attribute Default ] An ID  attribute  must have a declared default of #IMPLIED or #REQUIRED.
ftpListCallback_APIParam_5  the ftpListCallback_APIParam_5 string.
xmlValidCtxtNormalizeAttributeValue_APIParam_3  the parent.
xmlParserInputBufferCreateIO_APIParam_4  the charset encoding if known.
Implement the translate_APIName XPath function string translate(string, string, string) The translate function returns the first argument string with occurrences of  characters  in the second argument string replaced by the character at the corresponding position in the third argument string.
xmlTextReaderCurrentDoc_APIName returns  the  xmlDocPtr  or NULL in case of error.
xmlModuleSymbol_APIParam_2  the xmlModuleSymbol_APIParam_2 of the.
v. xmlSchemaValidateSetLocator_APIParam_3  a schema validation context.
xmlReconciliateNs_APIParam_2  a node defining the subtree to reconciliate.
To return the default namespace, specify NULL.
xmlHashScanFull_APIParam_1  the hash xmlHashScanFull_APIParam_1.
xmlNanoHTTPAuthHeader_APIName returns  the stashed value of the WWW-Authenticate or Proxy-Authenticate header.
xmlStreamWantsAnyNode_APIParam_1  the stream context.
xmlCatalogGetDefaults_APIName returns  the current  xmlCatalogAllow  value.
xmlBufferCCat_APIName returns  0 successful, a positive error code number otherwise and -1 in case of internal or API error.
xmlDictSize_APIParam_1  the dictionary.
xmlValidCtxtNormalizeAttributeValue_APIParam_5  the  attribute  xmlValidCtxtNormalizeAttributeValue_APIParam_5.
xmlMallocFunc_APIParam_1  the xmlMallocFunc_APIParam_1 requested in bytes.
xmlListCreate_APIName returns  the new list or NULL in case of error.
xmlCtxtResetPush_APIParam_4  an optional file name or URI.
Registers a callback for node destruction.
xmlXPathEval_APIParam_1  the XPath expression.
Register a new variable xmlXPathRegisterVariable_APIParam_3.
xmlAutomataNewCountTrans_APIParam_4  the input string associated xmlAutomataNewCountTrans_APIParam_3 that transition.
xmlExpNewSeq_APIParam_1  the expression context.
xmlValidateDtd_APIName returns  1 if valid or 0 otherwise.
xmlNodeGetBase_APIParam_1  the document the node pertains to.
xmlHashQLookup_APIParam_2  the xmlHashQLookup_APIParam_2 of the userdata.
Setup an xmltextReader to parse an XML document from I/O functions and source.
xmlTextWriterSetIndent_APIParam_2 > 0 do indentation.
xmlXPathRegisterFuncNS_APIParam_1  the XPath context.
xmlC14NDocDumpMemory_APIParam_3  the c14n xmlC14NDocDumpMemory_APIParam_3 (see @xmlC14NMode).
xmlSwitchInputEncoding_APIParam_1  the parser context.
the values of the xml:lang  attribute  or the one carried by the nearest ancestor.
this function is not thread safe, catalog initialization should preferably be done once at startup.
xmlHashUpdateEntry2_APIParam_3  a second xmlHashUpdateEntry2_APIParam_2 of the xmlHashUpdateEntry2_APIParam_4 userdata  a pointer to the xmlHashUpdateEntry2_APIParam_4 xmlHashUpdateEntry2_APIParam_5  the deallocator function for replaced item (if any).
xmlXPtrNewRangePointNode_APIParam_1  the starting point.
xmlNanoFTPFreeCtxt_APIParam_1  an FTP context.
xmlExpSubsume_APIParam_3  the subexpression.
xlinkSimpleLinkFunk_APIParam_2  the xlinkSimpleLinkFunk_APIParam_2 carrying the link.
xmlListCopy_APIName returns  0 in case of success 1 in case of error.
The declaration of a parameter entity must precede any  reference  to it.
xmlModuleSymbol_APIParam_1  the xmlModuleSymbol_APIParam_1.
xmlMemSetup_APIParam_3  the realloc_APIName function to use.
xmlParseElementChildrenContentDecl_APIName returns  the tree of  xmlElementContentPtr  describing the element hierarchy.
Free the memory allocated to a Catalog.
xmlTextWriterEndDocument_APIName returns  the bytes written or -1 in case of error.
xmlXPathCastBooleanToNumber_APIParam_1  a boolean.
xmlCreatePushParserCtxt_APIParam_3  a pointer to an array of chars.
xmlAddAttributeDecl_APIParam_9  if it's an enumeration, the associated list.
htmlReadIO_APIParam_4  the base htmlReadIO_APIParam_4 to use for the document.
xmlValidateElementDecl_APIName returns  1 if valid or 0 otherwise.
xmlValidatePushElement_APIName returns  1 if no validation problem was found or 0 otherwise.
And @ctx will be passed as first argument to @handler For multi-threaded applications, this must be set separately for each thread.
xmlIOFTPRead_APIParam_3  number of bytes to write.
xmlNanoHTTPContentLength_APIName returns  the specified content length from the HTTP header.
Traversal function for the "child" direction The child axis contains the children of the context node in document order.
xmlXPathWrapExternal_APIName returns  the newly created object.
xmlReallocLoc_APIParam_1  the initial memory block pointer.
xmlListAppend_APIName returns  0 in case of success, 1 in case of failure.
xmlXPathFreeCompExpr_APIParam_1  an XPATH xmlXPathFreeCompExpr_APIParam_1.
xmlBufferGrow_APIParam_2  the minimum free size to allocate.
Create a new  xmlXPathObjectPtr  of type string and of value @val.
xmlTextReaderSetSchema_APIParam_1  the  xmlTextReaderPtr  used.
xmlBufferDetach_APIName returns  the previous string contained by the buffer.
xmlSaveSetAttrEscape_APIName returns  0 if successful or -1 in case of error.
Write a DTD element.
Free up an  xmlXPathObjectPtr  object.
xmlTextReaderIsNamespaceDecl_APIName returns  1 if the current node is a namespace declaration, 0 if it is a regular  attribute  or other type of node, or -1 in case of error.
xmlStrncasecmp_APIParam_1  the first  xmlChar  *.
xmlXPathCompiledEvalToBoolean_APIName returns  1 if the expression evaluated to true, 0 if to false and -1 in API and internal errors.
xmlGetRefs_APIParam_2  the xmlGetRefs_APIParam_2 value.
Write a DTD with a formatted markup declarations part.
xmlIOHTTPMatch_APIParam_1  the URI for matching.
xmlParseDTD_APIParam_1  a NAME* containing the External ID of the DTD.
xmlValidateDtdFinal_APIParam_1  the validation context.
xmlXPathLeadingSorted_APIParam_1  a node-set, sorted by document order.
For interoperability, if a parameter-entity  reference  appears in a choice, seq, or Mixed construct, its replacement text should not be empty, and neither the first nor last non-blank character of the replacement text should be a connector (| or ,).
xmlCopyDocElementContent_APIParam_1  the document owning the element declaration.
xmlSchemaValidateFacet_APIParam_2  the xmlSchemaValidateFacet_APIParam_2 to check.
xmlXPathRegisterFuncNS_APIParam_3  the function namespace URI xmlXPathRegisterFuncNS_APIParam_4  the function implementation or NULL.
xmlStreamPop_APIName returns  -1 in case of error, 0 otherwise.
Non-static as is called from the output buffer creation routine.
xmlNodeListGetString_APIParam_1  the document.
xmlThrDefRegisterNodeDefault_APIParam_1 .
xmlSchemaValPredefTypeNodeNoNorm_APIParam_2  the xmlSchemaValPredefTypeNodeNoNorm_APIParam_2 to check xmlSchemaValPredefTypeNodeNoNorm_APIParam_3  the return computed xmlSchemaValPredefTypeNodeNoNorm_APIParam_2.
xmlIsRef_APIName returns  0 or 1 depending on the lookup result.
This behavior can conveniently be produced by normalizing all line breaks to #xA on input, before parsing.).
xmlAddPrevSibling_APIParam_2  the new node.
xmlXPathConvertNumber_APIName returns  the new object, the old one is freed (or the operation is done directly on @val).
xmlDebugDumpNodeList_APIParam_2  the xmlDebugDumpNodeList_APIParam_2 list.
xmlParserInputBufferRead_APIParam_2  indicative value of the amount of chars to read.
This is the case when you don't know already where the cloned branch will be added to.
Set (or reset) an  attribute  carried by a xmlSetProp_APIParam_1.
xmlHashCreateDict_APIParam_1  the xmlHashCreateDict_APIParam_1 of the hash table.
Start an xml DTD.
xmlXPathTrailingSorted_APIName returns  the nodes in @nodes1 that follow the first node in @nodes2 in document order, @nodes1 if @nodes2 is NULL or empty or an empty node-set if @nodes1 doesn't contain @nodes2.
xmlDictExists_APIParam_2  the xmlDictExists_APIParam_2 of the userdata.
xmlRegexpIsDeterminist_APIParam_1  the compiled regular expression.
xmlXPathNextSelf_APIParam_1  the XPath Parser context.
xmlXPathIsNodeType_APIParam_1  a xmlXPathIsNodeType_APIParam_1 string.
xmlTextWriterWriteAttributeNS_APIParam_1  the  xmlTextWriterPtr.
namespace xmlTextWriterWriteElementNS_APIParam_2 xmlTextWriterWriteElementNS_APIParam_3  element local xmlTextWriterWriteElementNS_APIParam_3.
xmlXPathHasSameNodes_APIParam_2  a node-set.
xmlDumpEntityDecl_APIParam_1  An XML buffer.
Set (or reset) an  attribute  carried by a xmlSetNsProp_APIParam_1.
xmlParserInputGrow_APIParam_2  an indicative size for the lookahead.
xmlCheckHTTPInput_APIParam_1  an XML parser context.
xmlSchemaCopyValue_APIName returns  the copy or NULL if a copy for a data-type is not implemented.
xmlParseExtParsedEnt_APIParam_1  an XML parser context.
xmlHashScan3_APIParam_6 or NULL.
xmlXPtrLocationSetMerge_APIParam_2  the second LocationSet.
xmlUTF8Strsize_APIParam_1  a sequence of UTF-8 encoded bytes.
inputPop_APIParam_1  an XML parser context.
xmlCatalogGetPublic_APIName returns  the resource if found or NULL otherwise.
xmlOutputBufferCreateFile_APIParam_1  a FILE*.
xmlNewTextReader_APIParam_1  the  xmlParserInputBufferPtr  used to read data.
xmlNanoFTPCwd_APIName returns  -1 incase of error, 1 if CWD worked, 0 if it failed.
htmlCtxtReadFd_APIParam_3  the base htmlCtxtReadFd_APIParam_3 to use for the document.
xmlSearchNsByHref_APIName returns  the namespace pointer or NULL.
xmlShellPrintXPathError_APIParam_1  valid xpath error id.
xmlNewInputFromFile_APIName returns  the new input stream or NULL in case of error.
xmlParseChunk_APIParam_1  an XML parser context.
The area won't be modified nor copied, and is expected to be present until the end of the buffer lifetime.
Guess the encoding of the entity using the first bytes of the entity content according to the non-normative appendix F of the XML-1.0 recommendation.
xmlSAXParseDoc_APIName returns  the resulting document tree.
xmlSetFeature_APIParam_3  pointer to the location of the new xmlSetFeature_APIParam_3.
xmlInitParserCtxt_APIName returns  0 in case of success and -1 in case of error.
An XPath evaluation function, the parameters are on the XPath context stack.
xmlTextWriterWriteDTD_APIParam_3  the public identifier, which is an alternative to the system identifier.
xmlSetProp_APIParam_3  the  attribute  xmlSetProp_APIParam_3.
xmlRecoverMemory_APIParam_2  the xmlRecoverMemory_APIParam_2 of the array.
Signature of an error callback from a reader parser.
xmlXPtrRangeToFunction_APIParam_2  the number of args.
xmlGetThreadId_APIName find the current thread ID number Note that this is likely to be broken on some platforms using pthreads as the specification doesn't mandate pthread_t to be an integer type.
xmlXPathRoundFunction_APIParam_2  the number of arguments.
xmlSaveFormatFile_APIName returns  the number of bytes written or -1 in case of failure.
xmlXPathCastNodeSetToString_APIName returns  a newly allocated string.
xmlBufferCreateSize_APIName returns  the new structure.
xmlDebugDumpDocument_APIParam_1  the FILE * for the xmlDebugDumpDocument_APIParam_1.
UTF8Toisolat1_APIParam_4  the length of @in.
xmlDOMWrapRemoveNode_APIParam_1  a DOM wrapper context.
Initiate fetch of the given file from the server.
If @xsd is NULL, then XML Schema validation is deactivated.
If @to is NULL, this creates first a new target state in the automata and then adds an epsilon transition xmlAutomataNewEpsilon_APIParam_2 the @from state xmlAutomataNewEpsilon_APIParam_3 the target state.
Initialize the FTP protocol layer.
xmlBufferContent_APIParam_1  the buffer.
xmlAutomataNewCountedTrans_APIParam_4  the xmlAutomataNewCountedTrans_APIParam_4 associated xmlAutomataNewCountedTrans_APIParam_3 that transition.
Parse an  attribute  default declaration [60] DefaultDecl ::= '#REQUIRED' | '#IMPLIED' | (('#FIXED' S)?
Reverse the order of the elements in the list.
xmlParsePITarget_APIName returns  the PITarget name or NULL.
This will dump the xmlSnprintfElementContent_APIParam_3 of the element xmlSnprintfElementContent_APIParam_3 definition Intended just for the debug routine.
xlinkSetDefaultDetect_APIParam_1  pointer to the new detection routine.
xmlTextReaderReadInnerXml_APIParam_1  the  xmlTextReaderPtr  used.
this includes the compiled-in I/O.
xmlGetNsList_APIParam_2  the current xmlGetNsList_APIParam_2.
xmlParseNmtoken_APIParam_1  an XML parser context.
xmlHashUpdateEntry2_APIName returns  0 the addition succeeded and -1 in case of error.
xmlTextReaderIsValid_APIName returns  the flag value 1 if valid, 0 if no, and -1 in case of error.
xmlXPathRegisterVariableNS_APIName returns  0 in case of success, -1 in case of error.
Create an xmltextReader for an XML from a file descriptor.
xmlFreeMutex_APIParam_1  the simple mutex.
xmlTextReaderDepth_APIName returns  the depth or -1 in case of error.
xmlGetParameterEntity_APIName returns A pointer to the entity structure or NULL if not found.
Create a new property tagged with a namespace and carried by a xmlNewNsProp_APIParam_1.
xmlSaveFileEnc_APIParam_3  the name of an xmlSaveFileEnc_APIParam_3 (or NULL).
xlinkExtendedLinkFunk_APIParam_2  the xlinkExtendedLinkFunk_APIParam_2 carrying the link.
Provides the specified redirection URL if available from the HTTP header.
xmlDumpElementDecl_APIParam_1  the XML buffer output.
xmlCreateIntSubset_APIParam_3  the external (PUBLIC) ID.
xmlNewTextLen_APIParam_2  the text xmlNewTextLen_APIParam_2.
xmlXIncludeProcess_APIParam_1  an XML document.
Creation of a new child element, added at the end of @parent children list.
xmlNewDocNode_APIName returns  a pointer to the new node object.
The URI defining the namespace associated with the node.
xmlTextWriterSetIndent_APIParam_2 = 0 do not indentation.
xmlRelaxNGValidatePushCData_APIParam_3  the length of the xmlRelaxNGValidatePushCData_APIParam_2.
xmlParseURIReference_APIName returns  0 or the error code.
xmlXPathRegisterVariableNS_APIParam_2  the variable xmlXPathRegisterVariableNS_APIParam_2.
xmlUTF8Strndup_APIName returns  a new UTF8 * or NULL.
xmlTextWriterStartAttributeNS_APIParam_2 .
The output is a direct unsigned char translation of %XX values (no encoding) Note that the length of the result can only be smaller or same size as the input string.
xmlNewTextWriterPushParser_APIName returns  the new  xmlTextWriterPtr  or NULL in case of error.
xmlNewAutomata_APIName returns  the new object or NULL in case of failure.
xmlTextReaderIsEmptyElement_APIName returns  1 if empty, 0 if not and -1 in case of error.
xmlTextWriterWriteFormatDTDAttlist_APIName returns  xmlTextWriterWriteFormatDTDAttlist_APIParam_4 bytes written (may be 0 because of buffering) or -1 in case of error.
xmlAutomataNewTransition2_APIParam_5  the second input string associated xmlAutomataNewTransition2_APIParam_3 that transition.
namespace xmlTextWriterWriteFormatAttributeNS_APIParam_2 xmlTextWriterWriteFormatAttributeNS_APIParam_3  attribute  local xmlTextWriterWriteFormatAttributeNS_APIParam_3.
xmlParseElementChildrenContentDecl_APIParam_1  an XML parser context.
startElementSAXFunc_APIParam_2  The element startElementSAXFunc_APIParam_2, including namespace prefix.
Get the internal subset of a document.
xmlTextWriterWriteDTDAttlist_APIParam_3  xmlTextWriterWriteDTDAttlist_APIParam_3 of the ATTLIST.
xmlXIncludeSetFlags_APIName returns  0 in case of success and -1 in case of error.
Wrap the LocationSet @val in a new  xmlXPathObjectPtr.
xmlAddSibling_APIName returns  the new element or NULL in case of error.
Write a formatted xmlTextWriterWriteFormatRaw_APIParam_3 xml text.
xmlHandleEntity_APIParam_1  an XML parser context.
Use  xmlIsExtender_ch  or  xmlIsExtenderQ  instead.
xmlGetCharEncodingName_APIName returns  the canonical name for the given encoding.
Free up the  xmlURI  struct.
xmlBufferDump_APIParam_1  the xmlBufferDump_APIParam_1 output.
xmlTextWriterEndComment_APIParam_1  the  xmlTextWriterPtr.
xmlCharEncInFunc_APIName returns  the number of byte written if success, or -1 general error -2 if the transcoding fails (for *in is not valid utf8 string or the result of transformation can't fit into the encoding we want), or.
xmlValidGetPotentialChildren_APIParam_4  the size of the array.
xmlIOParseDTD_APIParam_2  an Input Buffer.
xmlOutputWriteCallback_APIParam_1  an Output xmlOutputWriteCallback_APIParam_1.
Read the current value of one feature of this parser instance.
Implement the unary - operation on an XPath object The numeric operators convert their operands to numbers as if by calling the number function.
xmlXPathRegisterVariableNS_APIParam_3  the variable namespace URI.
xmlCatalogGetSystem_APIName returns  the resource if found or NULL otherwise.
xmlParseExternalEntity_APIName returns  0 if the entity is well formed, -1 in case of args problem and the parser error code otherwise.
Tries to change the remote xmlNanoFTPCwd_APIParam_2.
xmlStreamPushAttr_APIName returns  -1 in case of error, 1 if the current state in the xmlStreamPushAttr_APIParam_1 is a match and 0 otherwise.
Implement the XInclude substitution for the given subtree.
xmlSAX2IgnorableWhitespace_APIParam_3  the number of  xmlChar.
xmlSaveToBuffer_APIParam_2  the xmlSaveToBuffer_APIParam_2 name to use or NULL.
xmlSchemaNewDocParserCtxt_APIName returns  the parser context or NULL in case of error.
xmlCtxtReadFd_APIParam_1  an XML parser context.
xmlRelaxNGValidateFullElement_APIParam_1  the validation context.
xmlRFreeMutex_APIName is used to reclaim resources associated with a reentrant mutex.
xmlAddNotationDecl_APIName returns  NULL if not, otherwise the entity.
compares the two UCS4 values.
xmlDocCopyNodeList_APIName returns  a new #xmlNodePtr, or NULL in case of error.
xmlParseInNodeContext_APIParam_5  the return value for the set of parsed nodes.
xmlSetListDoc_APIParam_2  the document.
Merges two nodesets, all nodes from @val2 are added to @val1 if @val1 is NULL, a new set is created and copied from @val2.
xmlSchemaNewStringValue_APIName returns  a pointer to the new xmlSchemaNewStringValue_APIParam_2 or NULL in case of error.
xmlParserInputBufferPush_APIParam_3  an char array.
xmlHashQLookup3_APIParam_2  the xmlHashQLookup3_APIParam_2 of the userdata.
xmlAutomataNewCounter_APIParam_1  an automata.
ftpListCallback_APIParam_3  the  attribute  string.
Create an XML RelaxNGs validation context based on the given xmlRelaxNGNewValidCtxt_APIParam_1.
xmlDetectCharEncoding_APIParam_1  a pointer to the first bytes of the XML entity, must be at least 2 bytes long (at least 4 if encoding is UTF4 variant).
xmlXPtrNewLocationSetNodeSet_APIParam_1  a node xmlXPtrNewLocationSetNodeSet_APIParam_1.
xmlAddNotationDecl_APIParam_4  the public identifier or NULL.
Register a new  attribute  declaration Note that @tree becomes the ownership of the DTD.
xmlBufShrink_APIName returns  the number of byte removed or 0 in case of failure.
tors  the number of locators detected on the link.
xmlCatalogLocalResolve_APIParam_2  the public ID string.
'/>' [ WFC: Unique Att Spec ] No  attribute  name may appear more than once in the same start-tag or empty-element tag.
htmlNodeDumpFile_APIParam_3  the current node.
xmlCopyNotationTable_APIName returns  the new  xmlNotationTablePtr  or NULL in case of error.
Generic front-end for the encoding xmlCharEncOutFunc_APIParam_1 output function a first call with @in == NULL has to be made firs to initiate the output xmlCharEncOutFunc_APIParam_3 case of non-stateless encoding needing to initiate their state or the output (like the BOM xmlCharEncOutFunc_APIParam_3 UTF16).
xmlNodeDumpOutput_APIParam_1  the XML buffer output.
xmlExpDump_APIParam_1  a buffer to receive the output.
xmlNewTextWriter_APIName returns  the new  xmlTextWriterPtr  or NULL in case of error.
The original two strings are not freed.
called when an opening tag has been processed.
xmlGetNsProp_APIParam_1  the xmlGetNsProp_APIParam_1.
xmlParseVersionInfo_APIParam_1  an XML parser context.
Use  xmlIsIdeographicQ  instead.
xmlStrsub_APIParam_1  the  xmlChar  * array (haystack).
xmlParseCtxtExternalEntity_APIName returns  0 if the entity is well formed, -1 in case of args problem and the parser error code otherwise.
xmlBufferDump_APIParam_2  the buffer to dump.
Callback used in the I/O Input API to read the resource.
xmlXPathCastNodeToNumber_APIParam_1  a xmlXPathCastNodeToNumber_APIParam_1.
xmlNewTextWriterPushParser_APIParam_2  compress the output?.
Implements the EXSLT - Sets difference_APIName function: node-set set:difference (node-set, node-set).
ftpListCallback_APIParam_2  the file name (including "->" when.
htmlDocDumpMemoryFormat_APIParam_3  OUT the memory length.
xmlPatterncompile_APIParam_3  compilation xmlPatterncompile_APIParam_3, see  xmlPatternFlags.
It returns the base as defined in RFC 2396 sections 5.1.1.
a strcmp for xmlChar's.
xmlTextReaderLocatorBaseURI_APIName returns  the base URI or NULL in case of error, if non NULL it need to be freed by the caller.
xmlSAX2ProcessingInstruction_APIParam_1  the user.
The value of @outlen after return is the number of octets consumed.
xmlHashScanFull3_APIParam_4  a third xmlHashScanFull3_APIParam_2 of the userdata or NULL xmlHashScanFull3_APIParam_5  the scanner function for items in the hash xmlHashScanFull3_APIParam_6  extra xmlHashScanFull3_APIParam_6 passed to xmlHashScanFull3_APIParam_5.
xmlIsXHTML_APIParam_1  the system identifier.
The string function converts an object to a string as follows: - A node-set is converted to a string by returning the value of the node in the node-set that is first in document order.
htmlReadMemory_APIParam_4  the document htmlReadMemory_APIParam_4, or NULL.
xmlSAXUserParseMemory_APIParam_2  The user data returned on SAX callbacks.
xmlAddElementDecl_APIParam_5  the element xmlAddElementDecl_APIParam_5 tree or NULL.
xmlHashLookup_APIParam_1  the hash xmlHashLookup_APIParam_1.
xmlSchemaValidateLengthFacet_APIParam_3  the lexical repr.
Flush the output buffer.
xmlFreeNsList_APIParam_1  the first namespace pointer.
xmlXPathContextSetCache_APIParam_2  enables/disables (creates/frees) the cache.
Create a new xmlHashTablePtr.
xmlHashQLookup2_APIParam_5  a second xmlHashQLookup2_APIParam_3 of the userdata.
NOTE: if the call xmlPatterncompile_APIName indicated a dictionary, then strings for xmlStreamPushAttr_APIParam_2 and xmlStreamPushAttr_APIParam_3 will be expected to come from the dictionary.
xmlListAppend_APIParam_1  a list.
Searches the space preserving behaviour of a node, i.e.
xmlXPathCompiledEval_APIParam_1  the compiled XPath expression.
xmlParserFindNodeInfo_APIParam_1  an XML parser context.
xmlStrncatNew_APIParam_2  second  xmlChar  string.
ftpDataCallback_APIParam_2  the ftpDataCallback_APIParam_2 received.
Start an xml attribute.
xmlXPathWrapExternal_APIParam_1  the user data.
xmlDictLookup_APIName returns  the internal copy of the xmlDictLookup_APIParam_2 or NULL in case of internal error.
xmlTextReaderBaseUri_APIParam_1  the  xmlTextReaderPtr  used.
xmlAddDtdEntity_APIParam_3  the entity xmlAddDtdEntity_APIParam_3 XML_xxx_yyy_ENTITY.
xmlSAX2InitDefaultSAXHandler_APIParam_1  the SAX handler.
xmlSAX2EndElementNs_APIParam_4  the element namespace name if available.
xmlDOMWrapAcquireNsFunction_APIParam_4  the requested namespace prefix.
xmlParserInputBufferCreateFilename_APIName returns  the new parser input or NULL.
xmlNanoFTPGet_APIParam_4  the file to retrieve.
xmlDocGetRootElement_APIParam_1  the document.
It's up to the caller to free the memory with xmlFree_APIName.
xmlSchematronValidateDoc_APIName returns  0 in case of success, -1 in case of internal error and an error count otherwise.
xmlUnsetProp_APIParam_1  the xmlUnsetProp_APIParam_1.
htmlCtxtReadMemory_APIParam_5  the document htmlCtxtReadMemory_APIParam_5, or NULL.
Nmtoken)* S? ')'
xmlReallocLoc_APIParam_4  the xmlReallocLoc_APIParam_4 number.
xmlAddID_APIName returns  NULL if not, otherwise the new  xmlIDPtr.
xmlXPathNextDescendantOrSelf_APIName returns  the next element following that axis.
xmlRegExecErrInfo_APIParam_6  return value if this was a xmlRegExecErrInfo_APIParam_6 state.
xmlAddRef_APIParam_1  the validation context.
This really doesn't make sense and should be deprecated.
xmlSchemaSetParserStructuredErrors_APIParam_1  a schema parser context.
xmlNodeListGetString_APIParam_3  should we replace entity contents or show their external form.
xmlDictOwns_APIParam_1  the dictionary.
validates the internal and external subset (if present) and validate the document tree.
[44] EmptyElemTag ::= '<' Name (S Attribute)* S?
xmlNewProp_APIParam_2  the xmlNewProp_APIParam_2 of the  attribute.
xmlNewProp_APIParam_3  the xmlNewProp_APIParam_3 of the  attribute.
xmlTextWriterWriteElementNS_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
Checka a xmlSchemaValidateLengthFacet_APIParam_3 against a "length", "minLength" and "maxLength" xmlSchemaValidateLengthFacet_APIParam_2; sets @length to the computed xmlSchemaValidateLengthFacet_APIParam_5 of @value.
TODO: handle xmlNewTextWriterPushParser_APIParam_2.
namespace if any xmlNewNodeEatName_APIParam_2  the node xmlNewNodeEatName_APIParam_2.
xmlXPathCastNodeToString_APIName returns  a newly allocated string.
xmlTextWriterWriteVFormatElement_APIParam_1  the  xmlTextWriterPtr.
xmlSaveFormatFileTo_APIName returns  the number of bytes written or -1 in case of failure.
If the argument is omitted, it defaults to a node-set with the context node as its only member.
xmlURIEscapeStr_APIParam_2  exception xmlURIEscapeStr_APIParam_2 string of chars not to escape.
xmlTextWriterWriteDTDNotation_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlDetectCharEncoding_APIParam_2  pointer to the length of the buffer.
xmlRelaxNGValidatePushCData_APIName returns  1 if no validation problem was found or -1 otherwise.
xmlTextWriterWriteBase64_APIParam_4  the number of bytes to encode.
xlinkExtendedLinkSetFunk_APIParam_3  the number of locators detected on the link.
xmlPatterncompile_APIParam_4  the prefix definitions, array of [URI, prefix] or NULL.
xmlTextWriterWriteVFormatRaw_APIParam_1  the  xmlTextWriterPtr.
xmlIsRef_APIParam_1  the document.
Deallocate the memory used by an ID hash xmlFreeIDTable_APIParam_1.
parse the name of a PI [17] PITarget ::= Name - (('X' | 'x') ('M' | 'm') ('L' | 'l')).
xmlSchemaValidateStream_APIParam_4  a SAX handler for the resulting events.
xmlHashCopy_APIParam_1  the hash xmlHashCopy_APIParam_1.
xmlXIncludeProcessFlagsData_APIParam_1  an XML document.
xmlSprintfElementContent_APIParam_3  1 if one must print the englobing parenthesis, 0 otherwise.
xmlHashCreateDict_APIName returns  the newly created object, or NULL if an error occurred.
xmlXPathConcatFunction_APIParam_1  the XPath Parser context.
xmlReaderForFile_APIParam_2  the document xmlReaderForFile_APIParam_2, or NULL.
xmlHasNsProp_APIParam_3  the URI of the namespace.
xmlSchemaNewNOTATIONValue_APIParam_1  the notation xmlSchemaNewNOTATIONValue_APIParam_1.
xmlTextReaderIsValid_APIParam_1  the  xmlTextReaderPtr  used.
xmlXPathEvaluatePredicateResult_APIName returns  1 if predicate is true, 0 otherwise.
xmlParserInputBufferCreateMem_APIParam_1  the memory input.
xmlSAX2EndElement_APIParam_1  the user data (XML parser context).
xmlDebugDumpString_APIParam_2  the string.
xmlNewDocRawNode_APIParam_4  the text xmlNewDocRawNode_APIParam_4 if any.
xmlSchemaSAXPlug_APIName returns  a pointer to a data structure needed to unplug the validation layer or NULL in case of errors.
xmlDumpNotationTable_APIParam_2  A notation xmlDumpNotationTable_APIParam_2.
xmlSAX2Reference_APIParam_1  the user data (XML parser context).
ftpListCallback_APIParam_7 are shown).
xmlC14NExecute_APIParam_3  the first parameter for @is_visible_callback function (in most cases, it is nodes set).
htmlNodeStatus_APIParam_2  whether to allow deprecated elements (YES is faster here for Element nodes).
xmlDebugDumpNode_APIParam_2  the xmlDebugDumpNode_APIParam_2.
xmlValidateElement_APIParam_2  a document instance.
Initialize the default HTML SAX2 handler.
Based on trio code http://sourceforge.net/projects/ctrio/.
xmlXPtrNewRangeNodePoint_APIParam_1  the starting node.
xmlNewMutex_APIName returns  a new simple mutex pointer or NULL in case of error.
- The boolean false value is converted to the string false.
xmlTextReaderSetSchema_APIName returns  0 in case the Schema validation could be (des)activated and -1 in case of error.
xmlDocCopyNode_APIParam_3  if 1 do a recursive copy (properties, namespaces and children when applicable) if 2 copy properties and namespaces (when applicable).
htmlTagLookup_APIParam_1  The htmlTagLookup_APIParam_1 name in lowercase.
xmlTextReaderReadState_APIParam_1  the  xmlTextReaderPtr  used.
On the other hand XML Catalogs are not handled recursively.
Serialize the expression as compiled to the buffer.
Whether an Attribute node was generated from the default value defined in the DTD or schema.
Try to validate the document against the xmlValidateDtd_APIParam_3 instance Basically it does check all the definitions in the DtD.
xmlThrDefKeepBlanksDefaultValue_APIName returns .
xmlEncodeSpecialChars_APIParam_2  A string to convert to XML.
Add a new node @elem as the next sibling of @cur If the new node was already inserted in a document it is first unlinked from its existing context.
xmlBufNodeDump_APIParam_1  the XML buffer output.
End the current xml element.
htmlCreatePushParserCtxt_APIParam_4  number of chars in the array.
xmlAutomataNewOnceTrans_APIParam_1  an au.
htmlCtxtReadMemory_APIParam_3  the htmlCtxtReadMemory_APIParam_3 of the array.
htmlSaveFile_APIParam_1  the htmlSaveFile_APIParam_1 (or URL).
xmlNodeGetSpacePreserve_APIParam_1  the node being checked.
xmlValidCtxtNormalizeAttributeValue_APIParam_1  the validation context or NULL.
xmlCtxtReadDoc_APIParam_3  the base xmlCtxtReadDoc_APIParam_3 to use for the document.
xmlThrDefPedanticParserDefaultValue_APIParam_1 .
xmlNewDocRawNode_APIParam_1  the document.
xmlCopyEntitiesTable_APIName returns  the new  xmlEntitiesTablePtr  or NULL in case of error.
xmlC14NIsVisibleCallback_APIParam_3  the xmlC14NIsVisibleCallback_APIParam_3 xmlC14NIsVisibleCallback_APIParam_2.
Free a node, this is a recursive behaviour, all the children are freed too.
xmlParseEncName_APIParam_1  an XML parser context.
xmlCopyChar_APIParam_1  Ignored, compatibility.
Remove the given  attribute  from the Ref table maintained internally.
xmlOutputBufferFlush_APIName returns  the number of byte written or -1 in case of error.
Parse an URI but allows to keep intact the original fragments.
@ns and @content are optional (NULL).
Set the language of a node, i.e.
xmlCopyNode_APIName returns  a new #xmlNodePtr, or NULL in case of error.
Create an XML RelaxNGs parse context for that memory xmlRelaxNGNewMemParserCtxt_APIParam_1 expected to contain an XML RelaxNGs file.
xmlNodeGetLang_APIName returns  a pointer to the lang value, or NULL if not found It's up to the caller to free the memory with xmlFree_APIName.
htmlSAXParseDoc_APIParam_3  the SAX handler block.
Wraps the @val string into an XPath object.
xmlSplitQName2_APIParam_1  the full QName.
xmlPushInput_APIParam_1  an XML parser context.
startElementNsSAX2Func_APIParam_3  the element namespace startElementNsSAX2Func_APIParam_3 if available.
xmlRelaxNGValidatePopElement_APIParam_3  an element instance.
xmlTextWriterWriteVFormatPI_APIParam_1  the  xmlTextWriterPtr.
It indicates a new connection has to be established.
xmlSAX2NotationDecl_APIParam_2  The xmlSAX2NotationDecl_APIParam_2 of the notation.
xmlXIncludeNewContext_APIParam_1  an XML Document.
Do a global encoding of a string, replacing the predefined entities and non ASCII values with their entities and CharRef counterparts.
Use  xmlIsBlank_ch  or  xmlIsBlankQ  instead.
xmlTextReaderMoveToAttribute_APIParam_1  the  xmlTextReaderPtr  used.
Pushes a new element name on top of the name stack.
xmlReadDoc_APIName returns  the resulting document tree.
Dump an HTML document to an open FILE.
htmlReadMemory_APIName returns  the resulting document tree.
Create and registers an xmlCharEncodingHandler.
xlinkNodeDetectFunc_APIParam_2  the xlinkNodeDetectFunc_APIParam_2 to check.
[33] LanguageID ::= Langcode ('-' Subcode)* [34] Langcode ::= ISO639Code | IanaCode | UserCode [35] ISO639Code ::= ([a-z] | [A-Z]) ([a-z] | [A-Z]) [36] IanaCode ::= ('i' | 'I') '-' ([a-z] | [A-Z])+ [37] UserCode ::= ('x' | 'X') '-' ([a-z] | [A-Z])+ [38] Subcode ::= ([a-z] | [A-Z])+ The current REC  reference  the sucessors of RFC 1766, currently 5646 http://www.rfc-editor.org/rfc/rfc5646.txt langtag = language ["-" script] ["-" region] *("-" variant) *("-" extension) ["-" privateuse] language = 2*3ALPHA ; shortest ISO 639 code ["-" extlang] ; sometimes followed by ; extended language subtags / 4ALPHA ; or reserved for future use / 5*8ALPHA ; or registered language subtag extlang = 3ALPHA ; selected ISO 639 codes *2("-" 3ALPHA) ; permanently reserved script = 4ALPHA ; ISO 15924 code region = 2ALPHA ; ISO 3166-1 code / 3DIGIT ; UN M.49 code variant = 5*8alphanum ; registered variants / (DIGIT 3alphanum) extension = singleton 1*("-" (2*8alphanum)) ; Single alphanumerics ; "x" reserved for private use singleton = DIGIT ; 0 - 9 / %x41-57 ; A - W / %x59-5A ; Y - Z / %x61-77 ; a - w / %x79-7A ; y - z it sounds right to still allow Irregular i-xxx IANA and user codes too The parser below doesn't try to cope with extension or privateuse that could be added but that's not interoperable anyway.
xmlShellDu_APIParam_3  a node defining a subtree.
xmlRelaxNGGetParserErrors_APIParam_2  the error callback result.
')*' | '(' S?
xmlGetNodePath_APIName returns  the new path or NULL in case of error.
TODO: XML Schema 1.0 does not define canonical representations for: duration, gYearMonth, gYear, gMonthDay, gMonth, gDay, anyURI, QName, NOTATION.
xmlAutomataNewOnceTrans_APIParam_2  the starting point of the transition xmlAutomataNewOnceTrans_APIParam_3  the target point of the transition or NULL.
xmlListDup_APIName returns  a new copy of the list or NULL in case of error.
xmlExpNewCtxt_APIName returns  the context or NULL in case of error.
xmlEntityReferenceFunc_APIParam_3  the last nod in the chunk.
xmlXPathNodeSetMerge_APIParam_1  the first NodeSet or NULL.
Resize a buffer to accommodate minimum xmlBufferResize_APIParam_2 of @size.
xmlNewNsPropEatName_APIParam_4  the xmlNewNsPropEatName_APIParam_4 of the  attribute.
EncodingDecl S?
xmlSAX2UnparsedEntityDecl_APIParam_5  the xmlSAX2UnparsedEntityDecl_APIParam_2 of the notation.
xmlUTF8Strndup_APIParam_1  the input UTF8 *.
Read @len bytes to @buffer from the I/O channel.
xmlOutputBufferCreateBuffer_APIParam_2  the encoding converter or NULL.
Changes the defaultexternal entity resolver function for the application.
This function is provided as a way to force the standard behavior on 1.X libs and to switch back to the old mode for compatibility when running 1.X client code on 2.X .
parse an HTML document from I/O functions and source and build a tree.
The caller will need to free it.
errorSAXFunc_APIParam_2  errorSAXFunc_APIParam_3 message to display/transmit errorSAXFunc_APIParam_3  extra parameters errorSAXFunc_APIParam_3 the message display.
htmlCtxtReadDoc_APIParam_1  an HTML parser context.
xlinkExtendedLinkSetFunk_APIParam_2  the xlinkExtendedLinkSetFunk_APIParam_2 carrying the link.
xmlXPathSumFunction_APIParam_1  the XPath Parser context.
getEntitySAXFunc_APIParam_2  The entity getEntitySAXFunc_APIParam_2.
[ VC: Proper Group/PE Nesting ] applies to [49] and [50] TODO Parameter-entity replacement text must be properly nested with parenthesized groups.
parse an Element declaration.
xmlNewTextWriterFilename_APIName returns  the new  xmlTextWriterPtr  or NULL in case of error.
xmlXPtrNewRangeNodeObject_APIName returns  the newly created object.
xmlShellBase_APIParam_4  unused.
Do a complete resolution lookup of an xmlACatalogResolveURI_APIParam_2.
xmlStrPrintf_APIName returns  xmlStrPrintf_APIParam_4 number xmlStrPrintf_APIParam_4 characters  written to @buf or -1 if an error occurs.
htmlEncodeEntities_APIParam_4  the length of @in.
xmlParseSystemLiteral_APIName returns  the SystemLiteral parsed or NULL.
xmlStrQEqual_APIName returns  1 if they are equal, 0 if they are different.
xmlRelaxNGValidateDoc_APIName returns  0 if the document is valid, a positive error code number otherwise and -1 in case of internal or API error.
The <= comparison will be true if and only if the first number is less than or equal to the second number.
checks whether @cur contains @val.
xmlSaveToFd_APIParam_1  a file descriptor number.
xmlTextWriterStartElement_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlSchemaCompareValuesWhtsp_APIParam_3  a second value.
xmlNewEntity_APIParam_6  the entity xmlNewEntity_APIParam_6.
xmlParseElementContentDecl_APIParam_1  an XML parser context.
xmlSaveFileTo_APIParam_3  the xmlSaveFileTo_APIParam_3 if any assuming the I/O layer handles the trancoding.
xmlXPathCountFunction_APIParam_2  the number of arguments.
xmlStringLenDecodeEntities_APIParam_6  an xmlStringLenDecodeEntities_APIParam_5 marker xmlChar, 0 if none.
Get the latest HTTP return code received.
xmlSAX2GetParameterEntity_APIName returns  the  xmlEntityPtr  if found.
xmlXPathCastNumberToBoolean_APIParam_1  a number.
Create a new list.
xmlLoadExternalEntity_APIParam_2  the Public xmlLoadExternalEntity_APIParam_2 for the entity to load.
xmlParseEnumerationType_APIParam_1  an XML parser context.
xmlCtxtReadFile_APIParam_4  a combination of  xmlParserOption.
xmlTextWriterEndDTDEntity_APIParam_1  the  xmlTextWriterPtr.
xmlRegNewExecCtxt_APIParam_1  a precompiled regular expression.
xmlSAX2StartElementNs_APIParam_2  the local name of the element.
xmlXPathCmpNodes_APIParam_1  the first node.
xmlC14NDocSaveTo_APIParam_4  the list of inclusive namespace prefixes ended with a NULL or NULL if there is no inclusive namespaces (only for exclusive canonicalization, ignored otherwise).
xmlHashQLookup3_APIName returns  the a pointer to the userdata.
htmlCtxtReadFd_APIParam_5  a combination of htmlParserOption(s).
xmlTextWriterWriteDTDExternalEntity_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
@options: 0: This will set the XPath object caching: @value: This will set the maximum number of XPath objects to be cached per slot There are 5 slots for: node-set, string, number, boolean, and misc objects.
xmlDOMWrapCloneNode_APIName returns  0 if the operation succeeded, 1 if a xmlDOMWrapCloneNode_APIParam_3 of unsupported (or not yet supported) type was given, -1 on API/internal errors.
xmlIsCombining_APIParam_1  character to validate.
Creation of a new node element within a document.
xmlAutomataNewCountedTrans_APIParam_2  the starting point of the transition xmlAutomataNewCountedTrans_APIParam_3  the target point of the transition or NULL.
A better SAX parsing routine.
xmlAutomataNewCountTrans_APIParam_5  the minimum successive occurences of xmlAutomataNewCountTrans_APIParam_4.
htmlReadDoc_APIParam_4  a combination of htmlParserOption(s).
Pops the top element node from the node stack.
xmlCharEncInFunc_APIParam_2  an  xmlBuffer  for the output.
If the node-set is empty or the first node has no name, an empty string is returned.
xmlOutputBufferCreateIO_APIParam_4  the charset encoding if known.
xmlTextWriterWriteDTDEntity_APIParam_7  xmlTextWriterWriteDTDEntity_APIParam_7 of the entity.
Setup an xmltextReader to parse an XML in-memory document.
xmlIsDigit_APIName returns  true if argument valid, false otherwise.
xmlFileMatch_APIName returns  1 if matches, 0 otherwise.
htmlNodeDumpFormatOutput_APIParam_5  should formatting spaces been added.
An axis traversal function.
xmlAddNextSibling_APIParam_2  the new node.
If there is an error in the protocol, hostname, port or other information, the error is raised.
SAX2 callback when an element end has been detected by the parser.
xmlBufferCCat_APIParam_1  the buffer to dump.
xmlShellPrintXPathError_APIParam_2  the argument that cause xpath to fail.
Checks whether an HTML element may be a direct child of a htmlElementStatusHere_APIParam_1 element.
Parse an external general entity An external general parsed entity is well-formed if it matches the production labeled extParsedEnt.
The string xmlRegExecNextValues_APIParam_4.
The insertion point is defined using @prev and @next in the following ways: to insert before 'node': xmlValidGetValidElements(node->prev, node, ... to insert xmlValidGetValidElements_APIParam_2 'node': xmlValidGetValidElements(node, node->next, ... to replace 'node': xmlValidGetValidElements(node->prev, node->next, ... to prepend a child to 'node': xmlValidGetValidElements(NULL, node->childs, to append a child to 'node': xmlValidGetValidElements(node->last, NULL, ... pointers to the element xmlValidGetValidElements_APIParam_3 are inserted at the beginning of the array and do not need to be freed.
xmlRelaxNGValidatePushElement_APIParam_2  a document instance.
xmlTextWriterWriteBase64_APIParam_1  the  xmlTextWriterPtr.
xmlUTF8Strpos_APIParam_1  the input UTF8 *.
xmlDOMWrapAcquireNsFunction_APIParam_3  the requested namespace name.
xmlTextWriterWriteVFormatElement_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlParseEnumerationType_APIName returns  the enumeration  attribute  tree built while parsing.
Signature for a malloc_APIName implementation.
xmlValidGetPotentialChildren_APIParam_2  an array to store the list of child xmlValidGetPotentialChildren_APIParam_2.
xmlSAXParseDTD_APIName returns  the resulting  xmlDtdPtr  or NULL in case of error.
xmlAutomataNewCounter_APIName returns  the counter number or -1 in case of error.
xmlTextReaderMoveToFirstAttribute_APIName returns  1 in case of success, -1 in case of error, 0 if not found.
Displays current context within the xmlParserPrintFileContext_APIParam_1 content for error tracking.
xmlSchemaValueAppend_APIParam_2  the value to be appended.
xmlXPathNextPreceding_APIParam_1  the XPath Parser context.
xmlDictQLookup_APIParam_3  the xmlDictQLookup_APIParam_3.
xmlGetRefs_APIName returns  NULL if not found, otherwise node set for the xmlGetRefs_APIParam_2.
xmlReaderNewFile_APIParam_3  the document xmlReaderNewFile_APIParam_3, or NULL.
Checks if an automata is determinist.
xmlExpNewCtxt_APIParam_2  optional dictionary to use internally.
xmlSAX2GetColumnNumber_APIParam_1  the user data (XML parser context).
Check whether @exp accepts all the languages accexpted by @sub the input being a subexpression.
Pushes a new element node on top of the node stack.
xmlTextWriterSetIndent_APIParam_2  do indentation?.
xmlXPathEvalExpression_APIName returns  the  xmlXPathObjectPtr  resulting from the evaluation or NULL.
xmlShellCmd_APIName returns  an int, negative returns indicating errors.
Set (or reset) the xmlNodeSetName_APIParam_2 of a node.
Implement the id_APIName XPath function node-set id(object) The id function selects elements by their unique ID (see [5.2.1 Unique IDs]).
xmlXPathRegisterFuncNS_APIName returns  0 in case of success, -1 in case of error.
xmlTextWriterWriteVFormatCDATA_APIParam_1  the  xmlTextWriterPtr.
xmlSchemaNewNOTATIONValue_APIParam_2  the notation namespace xmlSchemaNewNOTATIONValue_APIParam_1 or NULL.
xmlParsePubidLiteral_APIName returns  the PubidLiteral parsed or NULL.
xmlBufferWriteQuotedString_APIParam_1  the XML buffer output.
xmlDebugDumpString_APIParam_1  the FILE * for the xmlDebugDumpString_APIParam_1.
htmlAttrAllowed_APIParam_3  whether to allow deprecated attributes.
xmlMemGet_APIParam_2  place to save the malloc_APIName function in use.
a function to provide the relative location of a UTF8 char.
Dump an HTML node, recursive behaviour,children are printed too.
Implement the mod operation on XPath objects: @arg1 / @arg2 The numeric operators convert their operands to numbers as if by calling the number function.
parse and handle entity references in content, depending on the SAX interface, this may end-up in a call to character_APIName if this is a CharRef, a predefined entity, if there is no reference_APIName callback.
xmlUTF8Strpos_APIParam_2  the position of the desired UTF8 char (in chars).
xmlTextWriterWriteFormatDTDElement_APIParam_2  xmlTextWriterWriteFormatDTDElement_APIParam_4 xmlTextWriterWriteFormatDTDElement_APIParam_2 of xmlTextWriterWriteFormatDTDElement_APIParam_4 DTD element.
xmlReadFd_APIParam_2  the base xmlReadFd_APIParam_2 to use for the document.
Do an entity lookup in the DTD entity hash table and.
htmlNodeDump_APIParam_3  the current node.
xmlSetFeature_APIParam_1  an XML/HTML parser context.
Create a new  xmlXPathObjectPtr  of type range.
xmlFreeEnumeration_APIParam_1  the tree to free.
Set and return the previous value for handling HTML omitted tags.
check if a string is owned by the disctionary.
xmlSchemaParse_APIName returns  the internal XML Schema structure built from the resource or NULL in case of error.
Encoding definition lookup in the Meta tags.
xmlDebugDumpEntities_APIParam_1  the FILE * for the xmlDebugDumpEntities_APIParam_1.
xmlNewIOInputStream_APIName returns  the new xmlNewIOInputStream_APIParam_2 stream or NULL.
Add the new entry to the catalog list.
xmlXPathEvaluatePredicateResult_APIParam_2  the Predicate Expression evaluation result.
Skip to the next char input char.
Note it is up to the caller of this function to free the allocated memory with xmlFree_APIName.
xmlValidatePopElement_APIParam_3  an element instance.
xmlACatalogDump_APIParam_1  a Catalog.
xmlTextReaderMoveToAttributeNs_APIName returns  1 in case of success, -1 in case of error, 0 if not found.
xmlNodeSetName_APIParam_1  the node being changed.
xmlXPathConvertNumber_APIParam_1  an XPath object.
xmlSAX2Comment_APIParam_1  the user data (XML parser context).
xmlAddPrevSibling_APIName returns  the new node or NULL in case of error.
Create a new  xmlXPathObjectPtr  of type range from a point to a node.
Duplicate tuples generate errors.
NOTE: In contrast to xmlNodeSetContentLen_APIName, @content is supposed to be raw text, so unescaped XML special chars are allowed, entity references are not supported.
xmlValidateElementDecl_APIParam_1  the validation context.
lookup the directory for that file.
Traversal function for the "descendant" direction the descendant axis contains the descendants of the context node in document order; a descendant is a child or a child of a child and so on.
xmlGetDtdAttrDesc_APIName returns  the  xmlAttributePtr  if found or NULL.
If xmlSAXParseFileWithData_APIParam_1 is NULL, fallback to the default DOM tree building routines.
xmlXPathConvertBoolean_APIName returns  the new object, the old one is freed (or the operation is done directly on @val).
Creation of a new node containing a CDATA block.
Dumps the canonized image of given XML document into the provided buffer.
xmlXPtrNewLocationSetNodeSet_APIName returns  the newly created object.
xmlXPathObjectCopy_APIParam_1  the original object.
xmlGetDtdQElementDesc_APIParam_3  the element namespace xmlGetDtdQElementDesc_APIParam_3.
xmlTextReaderErrorFunc_APIParam_2  the message.
xmlNewIOInputStream_APIParam_2  an I/O Input.
xmlSchemaSetValidErrors_APIParam_1  a schema validation context.
xmlCatalogRemove_APIParam_1  the xmlCatalogRemove_APIParam_1 to remove.
xmlNanoFTPList_APIParam_3  the user xmlNanoFTPList_APIParam_2 data.
xmlTextWriterWriteComment_APIParam_2  comment  string.
open an HTTP I/O channel.
xmlIOParseDTD_APIParam_1  the SAX handler block or NULL.
xmlAutomataNewOnceTrans_APIParam_5  the minimum successive occurences of xmlAutomataNewOnceTrans_APIParam_4.
xmlCreateEntityParserCtxt_APIParam_3  a possible xmlCreateEntityParserCtxt_APIParam_3 for the target URI.
xmlCheckUTF8_APIParam_1  Pointer to putative UTF-8 encoded string.
Take a block of UTF-8 chars htmlEncodeEntities_APIParam_3 and try to convert it to an ASCII plus HTML entities block of chars htmlEncodeEntities_APIParam_1.
xmlEncodeEntities_APIParam_1  the document containing the string.
xmlThrDefIndentTreeOutput_APIName returns .
Unlinks the given xmlDOMWrapRemoveNode_APIParam_3 from its owner.
xmlReaderForFd_APIName returns  the new reader or NULL in case of error.
Remove an entry from the catalog.
If there is an  attribute  with equal name, it is first destroyed.
xmlXPathTrueFunction_APIParam_1  the XPath Parser context.
xmlSAX2InternalSubset_APIParam_4  the SYSTEM ID (e.g.
The normalize-space function returns the argument string with white space normalized by stripping leading and trailing whitespace and replacing sequences of whitespace  characters  by a single space.
xmlAddPrevSibling_APIParam_1  the child node.
xmlInputReadCallback_APIName returns  the number of bytes read or -1 in case of error.
xmlStringLenDecodeEntities_APIParam_2  the input string.
xmlNewDocRawNode_APIName returns  a pointer to the new node object.
xmlXPathCeilingFunction_APIParam_2  the number of arguments.
xmlXPathCompiledEvalToBoolean_APIParam_2  the XPath context.
xmlTextWriterWriteVFormatElementNS_APIParam_6  pointer to the first member of the variable argument list.
htmlCreateMemoryParserCtxt_APIParam_2  the htmlCreateMemoryParserCtxt_APIParam_2 of the array.
xmlXPtrLocationSetAdd_APIParam_2  a new  xmlXPathObjectPtr.
xmlXPtrBuildNodeList_APIParam_1  the XPointer result from the evaluation.
xmlNanoHTTPFetch_APIName returns  -1 in case of failure, 0 incase of success.
Note that, since prefixes of already existent ns-decls can be shadowed by this process, it could break QNames in  attribute  values or element content.
xmlValidateElement_APIParam_1  the validation context.
xmlTextWriterWriteVFormatDTDInternalEntity_APIParam_4  xmlTextWriterWriteVFormatDTDInternalEntity_APIParam_4 string (see printf).
xmlTextReaderAttributeCount_APIParam_1  the  xmlTextReaderPtr  used.
xmlAutomataNewCountTrans2_APIParam_2  the starting point of the transition xmlAutomataNewCountTrans2_APIParam_3  the target point of the transition or NULL.
xmlAddChild_APIParam_1  the xmlAddChild_APIParam_1 node.
xmlTextReaderHasAttributes_APIParam_1  the  xmlTextReaderPtr  used.
show a show display of the memory allocated, and dump the @nr last allocated areas which were not freed.
expressions context xmlExpSubsume_APIParam_2  the englobing expression.
xmlCtxtReadDoc_APIParam_5  a combination of  xmlParserOption.
htmlNewDocNoDtD_APIName returns  a new document, do not initialize the DTD if not provided.
The ID/IDREF checkings are done separately.
Display fatalErrorSAXFunc_APIParam_3 format fatal error messages, callback.
xmlBufShrink_APIParam_2  the number of  xmlChar  to remove.
xmlC14NDocSave_APIParam_6  the xmlC14NDocSave_APIParam_6 to store canonical XML image.
Skip an XML (SGML)  comment  <!-- .... --> The spec says that "For compatibility, the string "--" (double-hyphen) must not occur within comments. "
xmlAddElementDecl_APIName returns  NULL if not, otherwise the entity.
xmlSchemaValidatePredefinedType_APIParam_2  the xmlSchemaValidatePredefinedType_APIParam_2 to check xmlSchemaValidatePredefinedType_APIParam_3  the return computed xmlSchemaValidatePredefinedType_APIParam_2.
Implement the XInclude substitution for the given subtree reusing the informations and data coming from the given context.
xmlReaderNewIO_APIName returns  0 in case of success and -1 in case of error.
xmlValidGetValidElements_APIParam_2  an element to insert xmlValidGetValidElements_APIParam_2.
The whole subtree is removed.
xmlDictOwns_APIParam_2  the string.
Dumps debug information for the  attribute.
This is the prototype for a extended link set detection callback.
This function is deprecated, we now always process entities content through  xmlStringDecodeEntities  TODO: remove it in next major release.
xmlLoadCatalogs_APIParam_1  a list of directories separated by a colon or a space.
this method stops the parser, set its state to End Of File and return the input stream with what is left that the parser did not use.
Sets the xmlSchemaSetValidOptions_APIParam_2 to be used during the validation.
externalSubsetSAXFunc_APIParam_1  the user data (XML parser context).
xmlExpFreeCtxt_APIParam_1  an expression context.
Build a context used for progressive evaluation of a regexp.
xmlXPathParseName_APIName returns  the namespace name or NULL.
It doesn't deallocate any document related memory.
xmlNewNsProp_APIParam_4  the xmlNewNsProp_APIParam_4 of the  attribute.
Try to find if the document correspond to an XHTML DTD.
xmlSaveToFilename_APIParam_2  the xmlSaveToFilename_APIParam_2 name to use or NULL.
xmlTextWriterWriteVFormatPI_APIParam_4  pointer to the first member of the variable argument list.
Callback used in the I/O Input API to open the resource.
xmlStrcmp_APIParam_2  the second  xmlChar  *.
xmlCtxtUseOptions_APIName returns  0 in case of success, the set of unknown or unimplemented xmlCtxtUseOptions_APIParam_2 in case of error.
xmlBufNodeDump_APIParam_5  is formatting allowed.
xmlTextReaderBaseUri_APIName returns  the base URI or NULL if not available, if non NULL it need to be freed by the caller.
Callback function used to free data from a list.
xmlNodeSetContentLen_APIParam_2  the new value of the xmlNodeSetContentLen_APIParam_2.
xmlValidateAttributeDecl_APIParam_2  a document instance.
xmlHashCreate_APIParam_1  the xmlHashCreate_APIParam_1 of the hash table.
xlinkSetDefaultHandler_APIParam_1  the new value for the xlink xlinkSetDefaultHandler_APIParam_1 block.
xmlErrMemory_APIParam_1  an XML parser context.
ignorableWhitespaceSAXFunc_APIParam_3  the number of  xmlChar.
The < comparison will be true if and only if the first number is less than the second number.
Gives you the xmlSchemaGetBuiltInType_APIParam_1 struct for a built-in xmlSchemaGetBuiltInType_APIParam_1 by its xmlSchemaGetBuiltInType_APIParam_1 id.
xmlNanoFTPConnectTo_APIParam_2  the xmlNanoFTPConnectTo_APIParam_2 (use 21 if 0).
ftpListCallback_APIParam_9  the ftpListCallback_APIParam_9.
if true a xmlSchemaValidatePredefinedType_APIParam_2 is computed and returned in @val.
Refresh the content of the input buffer, the old data are considered consumed This routine handle the I18N transcoding to internal UTF-8.
xmlHashQLookup2_APIParam_3  the xmlHashQLookup2_APIParam_3 of the userdata.
xmlTextReaderExpand_APIName returns  a node pointer valid until the next xmlTextReaderRead_APIName call or NULL in case of error.
xmlTextWriterWriteDTDAttlist_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlGetDocEntity_APIName returns A pointer to the entity structure or NULL if not found.
xmlParseElementContentDecl_APIName returns  the type of element content XML_ELEMENT_TYPE_xxx.
xmlBufferCreateSize_APIParam_1  initial xmlBufferCreateSize_APIParam_1 of buffer.
All data are passed back in the callbacks.
This will dump the content the notation declaration as an XML DTD definition.
xmlXPtrEval_APIName returns  the  xmlXPathObjectPtr  resulting from the evaluation or NULL.
Callback function used when walking a list with xmlListWalk_APIName.
xmlDocSetRootElement_APIName returns  the old xmlDocSetRootElement_APIParam_2 element if any was found, NULL if xmlDocSetRootElement_APIParam_2 was NULL.
Create a new  xmlXPathObjectPtr  of type Value Tree (XSLT) and initialize it with the tree root @val.
Get the error and warning callback informations.
Signature for an strdup_APIName implementation.
xmlDecodeEntities_APIParam_4  an xmlDecodeEntities_APIParam_4 marker xmlChar, 0 if none.
Check that a xmlValidateName_APIParam_1 conforms to the lexical xmlValidateName_APIParam_2 of Name.
xmlXPathCastNumberToString_APIName returns  a newly allocated string.
: parse the Attribute list def for an element [52] AttlistDecl ::= '<!ATTLIST' S Name AttDef* S?
xmlSchemaValueAppend_APIParam_1  the value.
xmlThrDefDoValidityCheckingDefaultValue_APIParam_1 .
xmlXPathRegisterVariableLookup_APIParam_2  the lookup function.
xmlAddAttributeDecl_APIParam_2  pointer to the DTD.
xmlXPathFunctionLookupNS_APIParam_2  the function xmlXPathFunctionLookupNS_APIParam_2.
xmlMallocLoc_APIName returns  a pointer to the allocated area or NULL in case of lack of memory.
Walk all the element of the list in reverse order and apply the xmlListReverseWalk_APIParam_2 function to it.
xmlTextReaderValue_APIParam_1  the  xmlTextReaderPtr  used.
A function called to acquire namespaces (xmlNs) from the wrapper.
parse an  attribute  [41] Attribute ::= Name Eq AttValue [ WFC: No External Entity References ] Attribute values cannot contain direct or indirect entity references to external entities.
xmlC14NDocDumpMemory_APIParam_5  include comments in the result (!=0) or not (==0).
xmlAutomataCompile_APIParam_1  an automata.
xmlXPathLeading_APIParam_1  a node-set.
Expresses the xmlBuildRelativeURI_APIParam_1 of the  reference  in terms relative to the xmlBuildRelativeURI_APIParam_2.
xmlPatternMatch_APIParam_1  the precompiled pattern.
Frees the context after closing the connection.
The result will be deallocated on the next Read_APIName operation.
parse the XML standalone declaration [32] SDDecl ::= S 'standalone' Eq (("'" ('yes' | 'no') "'") | ('"' ('yes' | 'no')'"')) [ VC: Standalone Document Declaration ] TODO The standalone document declaration must have the value "no" if any external markup declarations contain declarations of: - attributes with default values, if elements to which these attributes apply appear in the document without specifications of values for these attributes, or - entities (other than amp, lt, gt, apos, quot), if references to those entities appear in the document, or - attributes with values subject to normalization, where the  attribute  appears in the document with a value which will change as a result of normalization, or - element types with element content, if white space occurs directly within any instance of those types.
xmlXPtrLocationSetCreate_APIParam_1  an initial xmlXPathObjectPtr, or NULL.
xmlTextWriterWriteAttribute_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
| '*' | '+')?
xmlPrintURI_APIParam_2  pointer to an  xmlURI.
processingInstructionSAXFunc_APIParam_3 (XML parser context).
xmlCtxtReset_APIParam_1  an XML parser context.
xmlGetGlobalState_APIName returns  the thread global state or NULL in case of error.
Converts a number to its boolean value.
xmlReaderForIO_APIParam_5  the document xmlReaderForIO_APIParam_5, or NULL.
Does this document has an external subset?.
xmlXPathCountFunction_APIParam_1  the XPath Parser context.
xmlTextReaderAttributeCount_APIName returns  0 i no attributes, -1 in case of error or the  attribute  count.
xmlParserInputBufferCreateFd_APIParam_1  a file descriptor number.
Checks whether an HTML element may be a direct child of a htmlElementAllowedHere_APIParam_1 element.
Write a raw xml text.
Sets the allocation xmlBufferSetAllocationScheme_APIParam_2 for this buffer.
Build a copy of an  attribute  xmlCopyAttributeTable_APIParam_1.
Create a new counter.
This method releases any resources allocated by the current instance changes the state to Closed and close any underlying input.
xmlLinkGetData_APIName returns  a pointer to the data referenced from this link.
xmlXPathNodeSetAddNs_APIName returns  0 in case of success and -1 in case of error.
called when the document start being processed.
xmlSAX2StartElement_APIParam_2  The element name, including namespace prefix.
xmlUTF8Strsize_APIParam_2  the number of  characters  in the array.
xmlStringLenGetNodeList_APIName returns  a pointer to the first child.
Callback when scanning xmlHashScanner_APIParam_2 in a hash with the simple scanner.
xmlXIncludeNewContext_APIName returns  the new set.
xmlGetCharEncodingName_APIParam_1  the encoding.
xmlTextReaderRead_APIParam_1  the  xmlTextReaderPtr  used.
xmlSaveFormatFile_APIParam_1  the xmlSaveFormatFile_APIParam_1 (or URL).
htmlAttrAllowed_APIName returns  one of HTML_REQUIRED, HTML_VALID, HTML_DEPRECATED,  HTML_INVALID.
xmlShellWrite_APIParam_2  the file name.
Cleanup up the predefined entities table.
xmlStreamPushNode_APIParam_3  the namespace xmlStreamPushNode_APIParam_2.
xmlParserWarning_APIParam_1 xmlParserWarning_APIParam_3 XML parser context.
xmlTextWriterEndAttribute_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
- check that NOTATION type attributes default or possible values matches one of the defined notations.
Function to extract the end of the content of a buffer.
Implements the XML shell function "load" loads a new document specified by the xmlShellLoad_APIParam_2.
xmlRegExecErrInfo_APIName returns  will be freed with the @exec context and don't need to be deallocated.
xmlPatternMinDepth_APIName returns  -1 in case of error otherwise the depth,.
xmlXPathNextFollowingSibling_APIParam_2  the current node in the traversal.
xmlAddElementDecl_APIParam_1  the validation context.
Checks and computes the values of facets.
This function provides the current index of the parser relative to the start of the current entity.
xmlXPathDebugDumpCompExpr_APIParam_1  the FILE * for the xmlXPathDebugDumpCompExpr_APIParam_1.
namespace xmlNewNsPropEatName_APIParam_3  the xmlNewNsPropEatName_APIParam_3 of the  attribute.
xmlTextReaderLocatorBaseURI_APIParam_1  the  xmlTextReaderLocatorPtr  used.
xmlAutomataNewTransition2_APIParam_1  an au.
xmlNewCharRef_APIParam_2  the char ref string, starting with # or "&# ... ;".
routine to create an XML buffer from an immutable memory area.
Set and return the previous value for enabling pedantic warnings.
xmlAttrSerializeTxtContent_APIParam_4  the text content.
xmlTextReaderLocalName_APIName returns  the local name or NULL if not available, if non NULL it need to be freed by the caller.
xmlNewNsProp_APIParam_1  the holding xmlNewNsProp_APIParam_1.
If xmlSAXParseDoc_APIParam_1 is NULL, fallback to the default DOM tree building routines.
NOTE that this routine behaviour differs from xmlBufferShrink_APIName as it will return 0 on error instead of -1 due to size_t being used as the return type.
Dumps debug information for all the entities in use by the document.
xmlFileClose_APIParam_1  the I/O xmlFileClose_APIParam_1.
Dumps debug information for the element xmlDebugDumpOneNode_APIParam_2, it is not recursive.
xmlRegisterOutputCallbacks_APIName returns  the registered handler number or -1 in case of error.
Dumps debug information cncerning the document, not recursive.
xmlMallocAtomicLoc_APIParam_2  the xmlMallocAtomicLoc_APIParam_2 name or NULL.
xmlThrDefTreeIndentString_APIName returns .
Implement the boolean_APIName XPath function boolean boolean(object) The boolean function converts its argument to a boolean as follows: - a number is true if and only if it is neither positive or negative zero nor NaN - a node-set is true if and only if it is non-empty - a string is true if and only if its length is non-zero.
xmlSchemaValidateLengthFacetWhtsp_APIParam_1  the xmlSchemaValidateLengthFacetWhtsp_APIParam_1 to check.
It frees both the content and the structure which encapsulate it.
xmlRelaxNGParse_APIParam_1  a Relax-NG parser context.
xmlTextWriterWriteAttributeNS_APIParam_4  namespace URI.
Does the final step for the document validation once all the incremental validation steps have been completed basically it does the following checks described by the XML Rec Check all the IDREF/IDREFS attributes definition for validity.
xmlValidateRoot_APIParam_2  a document instance.
xmlReaderNewMemory_APIParam_5  the document xmlReaderNewMemory_APIParam_5, or NULL.
xmlTextWriterWriteDTDInternalEntity_APIParam_2  TRUE if this is a parameter entity, FALSE if not.
[67] Reference ::= EntityRef | CharRef [69] PEReference ::= '%' Name ';'.
xmlDocDumpMemoryEnc_APIParam_2  Memory pointer for allocated XML text.
xmlC14NExecute_APIParam_6  include comments in the result (!=0) or not (==0).
xmlBufferAdd_APIParam_2  the #xmlChar string.
xmlParseQuotedString_APIParam_1  an XML parser context.
Do a global encoding of a string, replacing the predefined entities this routine is reentrant, and result must be deallocated.
xmlSchemaValueGetAsBoolean_APIParam_1  the value.
xmlXPathNodeSetAddNs_APIParam_3  a the namespace xmlXPathNodeSetAddNs_APIParam_2.
The entity must have been started with  xmlTextWriterStartDTDEntity.
xmlExpExpDerive_APIParam_1  the.
xmlC14NDocSave_APIParam_4  the list of inclusive namespace prefixes ended with a NULL or NULL if there is no inclusive namespaces (only for exclusive canonicalization, ignored otherwise).
xmlSchemaValueGetAsString_APIName returns  the string value or NULL if there was none, or on API errors.
xmlTextWriterStartDocument_APIParam_3  the xmlTextWriterStartDocument_APIParam_3 or NULL for default.
xmlParseExternalEntity_APIParam_4  Used for loop detection, use 0. xmlParseExternalEntity_APIParam_5  the xmlParseExternalEntity_APIParam_5 for the entity to load.
xmlParserPrintFileContext_APIParam_1  an  xmlParserInputPtr  xmlParserPrintFileContext_APIParam_1.
xmlNodeBufGetContent_APIName returns  0 in case of success and -1 in case of error.
xmlListDelete_APIParam_1  a list.
xmlXIncludeSetFlags_APIParam_2  a set of  xmlParserOption  used for parsing XML includes.
xmlListSearch_APIParam_1  a list.
xmlTextWriterWriteVFormatCDATA_APIParam_2  xmlTextWriterWriteVFormatCDATA_APIParam_2 string (see printf).
Check if the pattern must be looked at from the root.
xmlCreatePushParserCtxt_APIParam_4  number of chars in the array.
Write a formatted xmlTextWriterWriteFormatString_APIParam_3 text.
xmlSchemaValidCtxtGetParserCtxt_APIParam_1  a schema validation context.
xmlReaderForDoc_APIParam_4  a combination of  xmlParserOption.
xmlLoadACatalog_APIParam_1  a file path.
xmlNewCatalog_APIName returns  the  xmlCatalogPtr  or NULL in case of error.
If @ns_uri is NULL it unregisters the namespace.
xmlRegexpExec_APIParam_1  the compiled regular expression.
xmlCtxtReadMemory_APIParam_5  the document xmlCtxtReadMemory_APIParam_5, or NULL.
Pops a number from the stack, handling conversion if needed.
xmlACatalogResolve_APIName returns  the URI of the resource or NULL if not found, it must be freed by the caller.
xmlValidateAttributeValue_APIParam_1  an  attribute  xmlValidateAttributeValue_APIParam_1.
xmlTextReaderSchemaValidate_APIParam_1  the  xmlTextReaderPtr  used.
('[' (markupdecl | PEReference | S)* ']' S?)?
xmlGetNsProp_APIParam_2  the  attribute  xmlGetNsProp_APIParam_2.
xmlParserInputBufferCreateFilenameFunc_APIParam_1  the xmlParserInputBufferCreateFilenameFunc_APIParam_1 to read from.
xmlTextReaderGetAttribute_APIName returns  a string containing the value of the specified attribute, or NULL in case of error.
xmlTextWriterEndPI_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
Register a new variable xmlXPathRegisterVariableNS_APIParam_4.
parse an XML external entity out of context and build a tree.
Get the last parsing error registered.
charactersSAXFunc_APIParam_3  the number of  xmlChar.
Test whether the xmlPatternMatch_APIParam_2 matches the pattern.
xmlValidatePushElement_APIParam_1  the validation context.
xmlInitializeDict_APIName returns  0 if initialization was already done, and 1 if that call led to the initialization.
xmlBufGetNodeContent_APIParam_2  the node being read.
xmlRegExecNextValues_APIParam_4 IN/OUT.
[25] Eq ::= S?
Moves the position of the current instance to the node that contains the current Attribute node.
Prints result to the output FILE.
xmlXPathErr_APIParam_2  the xmlXPathErr_APIParam_2 code.
xmlReaderWalker_APIParam_1  a preparsed document.
Does the validation related extra step of the normalization of  attribute  values: If the declared xmlValidCtxtNormalizeAttributeValue_APIParam_5 is not CDATA, then the XML processor must further process the normalized  attribute  xmlValidCtxtNormalizeAttributeValue_APIParam_5 by discarding any leading and trailing space (#x20) characters, and by replacing sequences of space (#x20)  characters  by single space (#x20) character.
xmlAutomataNewTransition_APIParam_2  the starting point of the transition xmlAutomataNewTransition_APIParam_3  the target point of the transition or NULL.
Provide the column number of the current parsing point.
xmlStrncasecmp_APIParam_2  the second  xmlChar  *.
xmlHashAddEntry2_APIName returns  0 the addition succeeded and -1 in case of error.
htmlParseDocument_APIParam_1  an HTML parser context.
parse an XML Misc* optional field.
xmlOutputBufferCreateIO_APIParam_3  an I/O handler.
xmlSaveToFilename_APIParam_3  a set of xmlSaveOptions.
xmlXPathBooleanFunction_APIParam_2  the number of arguments.
xmlXPathAxisFunc_APIParam_1  the XPath interpreter context.
Duplicate the list.
htmlSaveFileEnc_APIParam_1  the htmlSaveFileEnc_APIParam_1.
xmlTextWriterStartPI_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlExpNewOr_APIParam_2  xmlExpNewOr_APIParam_2 expression.
xmlNanoFTPCloseConnection_APIName returns  -1 incase of error, 0 otherwise.
xmlBufEnd_APIParam_1  the buffer.
expression context xmlExpStringDerive_APIParam_2  the expression.
xmlC14NExecute_APIParam_4  the c14n xmlC14NExecute_APIParam_4 (see @xmlC14NMode).
xmlStrcmp_APIName returns  the integer result of the comparison.
xmlStringLenGetNodeList_APIParam_3  the length of the string xmlStringLenGetNodeList_APIParam_2.
xmlHashLookup3_APIName returns  the a pointer to the userdata.
'?>'.
ftpDataCallback_APIParam_1  the user provided context.
xmlXPathNewNodeSetList_APIName returns  the newly created object.
xmlAddDtdEntity_APIParam_1  the document.
What to do when a notation declaration has been parsed.
htmlIsScriptAttribute_APIParam_1  an  attribute  htmlIsScriptAttribute_APIParam_1.
Create an xmltextReader for an XML document from I/O functions and source.
xmlCopyNamespaceList_APIParam_1  the first namespace.
TODO: currently if xmlOutputBufferCreateFilename_APIParam_3 is set, the library only support writing to a local file.
xmlBufferCat_APIParam_2  the #xmlChar string.
Signature for a C14N callback on visible nodes.
Callback called when a validity error is found.
Evaluates if a specific facet can be used in conjunction with a xmlSchemaIsBuiltInTypeFacet_APIParam_1.
xmlAutomataNewEpsilon_APIParam_2  the starting point of the transition xmlAutomataNewEpsilon_APIParam_3  the target point of the transition or NULL.
xmlNewDoc_APIName returns  a new document.
xmlIOHTTPClose_APIParam_1  the I/O xmlIOHTTPClose_APIParam_1.
parse an Notation  attribute  type.
xmlReadMemory_APIParam_4  the document xmlReadMemory_APIParam_4, or NULL.
xmlDetectCharEncoding_APIName returns  one of the XML_CHAR_ENCODING_... values.
xmlACatalogAdd_APIParam_4  the replacement value for the match.
xmlParseAttribute_APIParam_1  an XML parser context.
xmlXPathRoundFunction_APIParam_1  the XPath Parser context.
xmlTextReaderMoveToElement_APIName returns  1 in case of success, -1 in case of error, 0 if not moved.
xmlSchemaSetValidErrors_APIParam_3  the warning function xmlSchemaSetValidErrors_APIParam_4  the functions context.
xmlTextWriterWriteFormatPI_APIParam_2 xmlTextWriterWriteFormatPI_APIParam_4 xmlTextWriterWriteFormatPI_APIParam_2.
xmlSchemaValueGetNext_APIName returns  the next value or NULL if there was none, or on API errors.
xmlSchemaNewQNameValue_APIParam_1  the namespace name.
xmlExpNewCtxt_APIParam_1  the maximum number of nodes.
xmlNewGlobalNs_APIParam_2  the URI associated.
elementDeclSAXFunc_APIParam_3  the element elementDeclSAXFunc_APIParam_3.
Implement the end of line normalization: 2.11 End-of-Line Handling Wherever an external parsed entity or the literal entity value of an internal parsed entity contains either the literal two-character sequence "#xD#xA" or a standalone literal #xD, an XML processor must pass to the application the single character #xA.
xmlDllMain_APIName returns .
Print the xpath error to libxml default error channel.
xmlTextWriterWriteVFormatString_APIParam_1  the  xmlTextWriterPtr.
namespace xmlNewNsProp_APIParam_3  the xmlNewNsProp_APIParam_3 of the  attribute.
This is the prototype for the link detection routine.
xmlGenericErrorFunc_APIParam_1  a parsing context.
xmlDOMWrapNewCtxt_APIName returns  the  xmlDOMWrapCtxtPtr  or NULL in case of an internal error.
xmlFreeAutomata_APIParam_1  an automata.
xmlDOMWrapAdoptNode_APIParam_3  the xmlDOMWrapAdoptNode_APIParam_3 to start with.
xmlShellValidate_APIParam_2  the DTD URI (optional).
Parse a content: [43] content ::= (element | CharData | Reference | CDSect | PI | Comment)*.
If the node-set is empty, an empty string is returned.
called when an entity  xmlSAX2Reference_APIName is detected.
xmlTextReaderQuoteChar_APIParam_1  the  xmlTextReaderPtr  used.
xmlGetProp_APIParam_2  the  attribute  xmlGetProp_APIParam_2.
[40] STag ::= '<' Name (S Attribute)* S?
xmlExpDump_APIParam_2  the compiled expression.
[8] Predicate ::= '[' PredicateExpr ']' [9] PredicateExpr ::= Expr Evaluate a predicate as in xmlXPathEvalPredicate_APIName but for a Location Set instead of a node set.
xmlTextWriterStartDTD_APIParam_4  the system identifier, which is the URI of the DTD.
Moves the position of the current instance to the first  attribute  associated with the current node.
xmlSchemaValPredefTypeNode_APIParam_4  the xmlSchemaValPredefTypeNode_APIParam_4 containing the xmlSchemaValPredefTypeNode_APIParam_2.
elementDeclSAXFunc_APIParam_2  the element elementDeclSAXFunc_APIParam_2.
xmlRelaxNGGetValidErrors_APIParam_1  a Relax-NG validation context.
A warning is generated to cover this case.
xmlXPathNextDescendantOrSelf_APIParam_1  the XPath Parser context.
Implement the starts-with_APIName XPath function boolean starts-with(string, string) The starts-with function returns true if the first argument string starts with the second argument string, and otherwise returns false.
xmlXIncludeSetFlags_APIParam_1  an XInclude processing context.
xmlListCreate_APIParam_1  an optional xmlListCreate_APIParam_1 function.
xmlFreeParserInputBuffer_APIParam_1  a buffered parser input.
xmlFreeParserCtxt_APIParam_1  an XML parser context.
xmlSetFeature_APIName returns  -1 in case or error, 0 otherwise.
Deprecated, unsafe, use  xmlSnprintfElementContent.
xmlXPathFreeObject_APIParam_1  the object to free.
xlinkExtendedLinkFunk_APIParam_7  pointer xlinkExtendedLinkFunk_APIParam_8 the array of source xlinkExtendedLinkFunk_APIParam_5 found on the arcs xlinkExtendedLinkFunk_APIParam_8  pointer xlinkExtendedLinkFunk_APIParam_8 the array of target xlinkExtendedLinkFunk_APIParam_5 found on the arcs.
xmlEncodeEntities_APIParam_2  A string to convert to XML.
Note the the internal subset (if present) is de-coupled (i.e.
xmlStrsub_APIParam_2  the index of the first char (zero based).
xmlSchemaValidityErrorFunc_APIParam_1  xmlSchemaValidityErrorFunc_APIParam_3 validation context.
xmlXPathDebugDumpCompExpr_APIParam_3  the indentation level.
xmlNewInputStream_APIName returns  the new input stream or NULL.
If xmlSAXParseFile_APIParam_1 is NULL, fallback to the default DOM tree building routines.
allocate a new copy of a given object.
User xmlSAXParseFileWithData_APIParam_4 (void *) is stored within the parser context in the context's _private member, so it is available nearly everywhere in libxml.
xmlNormalizeURIPath_APIParam_1  pointer to the xmlNormalizeURIPath_APIParam_1 string.
xmlTextWriterWriteDTDEntity_APIParam_1  the  xmlTextWriterPtr.
xmlSetNsProp_APIParam_4  the  attribute  xmlSetNsProp_APIParam_4.
xmlSchemaSAXPlug_APIParam_1  a schema validation context.
xmlXIncludeProcessTreeFlagsData_APIParam_1  an XML node.
Write a formatted xmlTextWriterWriteFormatAttributeNS_APIParam_6 attribute.with namespace support.
xmlParseNamespace: parse specific PI '<?namespace ...' constructs.
Create a new  xmlNodeSetPtr  of type double and of value @val.
endElementNsSAX2Func_APIParam_4  the element namespace name if available.
xmlLsCountNode_APIParam_1  the xmlLsCountNode_APIParam_1 to count.
xmlGetDtdQAttrDesc_APIParam_1  a pointer to the DtD to search.
xmlGetDtdQAttrDesc_APIParam_4  the  attribute  namespace xmlGetDtdQAttrDesc_APIParam_4.
xmlOutputBufferCreateFile_APIName returns  the new parser output or NULL.
xmlFileClose_APIName returns  0 or -1 in case of error.
htmlReadMemory_APIParam_2  the htmlReadMemory_APIParam_2 of the array.
Implements the XML shell function "pwd" Show the full path from the root to the xmlShellPwd_APIParam_3, if needed building thumblers when similar elements exists at a given ancestor level.
not on raw input.
xmlRegNewExecCtxt_APIParam_2  a xmlRegNewExecCtxt_APIParam_2 function used for handling progresses in the automata matching phase.
xmlReaderNewWalker_APIParam_1  an XML xmlReaderNewWalker_APIParam_1.
Display errorSAXFunc_APIParam_3 format an error messages, callback.
xmlNewDocText_APIParam_2  the text xmlNewDocText_APIParam_2.
xmlNewDocFragment_APIName returns  a pointer to the new node object.
htmlDocDumpMemory_APIParam_1  the document.
xmlXPathNodeSetSort_APIParam_1  the node xmlXPathNodeSetSort_APIParam_1.
inputPush_APIParam_2  the parser input.
startElementSAXFunc_APIParam_3  An array of name/value attributes pairs, NULL terminated.
xmlReaderForMemory_APIName returns  the new reader or NULL in case of error.
xmlGetFeaturesList_APIParam_2  an array of string to be filled with the features name.
htmlParseEntityRef_APIParam_1  an HTML parser context.
A callback for the  xmlNanoFTPGet  command.
xmlMemShow_APIParam_2  number of entries to dump.
xmlHashScanner_APIParam_1  the.
Whether the node can have a text value.
NOTE: while public, this function usually doesn't need to be called in normal processing.
xmlSchemaSAXPlug_APIParam_2  a pointer to the original  xmlSAXHandlerPtr.
Accessor for the string value of a computed value.
parse an end of tag [42] ETag ::= '</' Name S?
xmlParseElementMixedContentDecl_APIParam_1  an XML parser context.
xmlReadIO_APIParam_3  an I/O handler.
Provides the specified content length from the HTTP header.
create and initialize an enumeration  attribute  node.
htmlIsAutoClosed_APIParam_1  the HTML document.
xmlParseSDDecl_APIParam_1  an XML parser context.
xmlAddChildList_APIParam_1  the xmlAddChildList_APIParam_1 node.
This may break on old application and is turned off by default.
xmlCopyError_APIParam_2  a target error.
xmlSchemaCollapseString_APIName returns  the new string or NULL if no change was required.
xmlTextReaderGetRemainder_APIParam_1  the  xmlTextReaderPtr  used.
[ WFC: No < in Attribute Values ] The replacement text of any entity referred to directly or indirectly in an  attribute  xmlParseAttribute_APIParam_2 (other than "&lt;") must not contain a <.
htmlSAXParseFile_APIParam_4  if using SAX, this pointer will be provided on callbacks.
xmlMemRealloc_APIParam_1  the initial memory block pointer.
xmlXPtrLocationSetCreate_APIName returns  the newly created object.
Parses an  attribute  value into one or more Text and EntityReference nodes.
xmlPatternStreamable_APIName returns  1 if streamable, 0 if not and -1 in case of error.
xmlRegisterInputCallbacks_APIParam_2  the  xmlInputOpenCallback.
xmlListReverseWalk_APIParam_3  a xmlListReverseWalk_APIParam_3 parameter passed to the xmlListReverseWalk_APIParam_2 function.
xmlNanoHTTPOpen_APIName returns  NULL in case of failure, otherwise a request handler.
namespace xmlTextWriterStartAttributeNS_APIParam_2 or NULL xmlTextWriterStartAttributeNS_APIParam_3  element local xmlTextWriterStartAttributeNS_APIParam_3.
xmlEncodeEntitiesReentrant_APIParam_2  A string to convert to XML.
getParameterEntitySAXFunc_APIName returns  the  xmlEntityPtr  if found.
xmlSAX2GetParameterEntity_APIParam_2  The entity xmlSAX2GetParameterEntity_APIParam_2.
xmlStringDecodeEntities_APIParam_4  an xmlStringDecodeEntities_APIParam_4 marker xmlChar, 0 if none.
parse an XML in-memory xmlSAXUserParseMemory_APIParam_3 and call the given SAX handler routines.
xmlXPtrRangeToFunction_APIParam_1  the XPointer Parser context.
xmlSAX2AttributeDecl_APIParam_7  the xmlSAX2AttributeDecl_APIParam_7 of enumerated value set.
externalSubsetSAXFunc_APIParam_3  the external ID.
Parse an external general entity within an existing parsing context An external general parsed entity is well-formed if it matches the production labeled extParsedEnt.
xmlStrndup_APIName returns  a new  xmlChar  * or NULL.
xlinkIsLink_APIParam_1  the document containing the.
The xmlNanoHTTPMethod_APIParam_4, if provided must be freed by the caller.
If @content is non NULL, a child TEXT node will be created containing the string @content.
xmlCatalogIsEmpty_APIName returns  1 if the catalog is empty, 0 if not, amd -1 in case of error.
xmlACatalogRemove_APIParam_1  a Catalog.
Replace the xmlNodeSetContentLen_APIParam_2 of a node.
xmlXPathEvalFunc_APIParam_1  an XPath parser context.
@ns is optional (NULL).
[14] CharData ::= [^<&]* - ([^<&]* ']]>' [^<&]*).
xmlStrncat_APIParam_3  the length of @add.
The original @cur is reallocated and should not be freed.
xmlSAX2GetSystemId_APIParam_1  the user data (XML parser context).
structure xmlParseURIReference_APIParam_2  the string to analyze.
xmlParseExternalSubset_APIParam_2  the external identifier.
xmlStringCurrentChar_APIParam_3  pointer to the length of the char read.
xmlStreamPushNode_APIParam_1  the xmlStreamPushNode_APIParam_1 context.
Free the resources associated to the schema parser context.
xmlXPathRegisterAllFunctions_APIParam_1  the XPath context.
xmlIOHTTPOpenW_APIParam_1  The destination URI for the document.
xmlSAX2CDataBlock_APIParam_3  the block length.
xmlXPathContextSetCache_APIParam_1  the XPath context.
xmlSAXParseMemory_APIParam_3  the xmlSAXParseMemory_APIParam_3 of the array.
xmlXPathEqualValues_APIName returns  0 or 1 depending on the results of the test.
xmlThrDefOutputBufferCreateFilenameDefault_APIName returns .
xmlTextReaderMoveToAttributeNs_APIParam_2  the local name of the attribute.
xmlParseCtxtExternalEntity_APIParam_3  the System xmlParseCtxtExternalEntity_APIParam_3 for the entity to load.
xmlNewDocTextLen_APIName returns  a pointer to the new node object.
xmlSAXParseDTD_APIParam_3  a NAME* containing the URL to the DTD.
Workaround to provide file error reporting information when this is not provided by current APIs.
xmlReaderNewIO_APIParam_5  the base xmlReaderNewIO_APIParam_5 to use for the document.
This function looks in DTD  attribute  declaration for #FIXED or default declaration values unless DTD use has been turned off.
xmlXPathLocalNameFunction_APIParam_1  the XPath Parser context.
This is a message oriented function similar to an *printf function.
xmlTextWriterWriteString_APIParam_1  the  xmlTextWriterPtr.
htmlElementAllowedHere_APIName returns  1 if allowed; 0 otherwise.
The current char value, if using UTF-8 this may actually span multiple bytes in the input buffer.
xmlNodeDump_APIParam_5  is formatting allowed.
xmlReadDoc_APIParam_3  the document xmlReadDoc_APIParam_3, or NULL.
xmlAutomataNewNegTrans_APIParam_1  an au.
xmlRegExecPushString2_APIName returns  1 if the regexp reached a final state, 0 if non-final, and a negative xmlRegExecPushString2_APIParam_2 in case of error.
Cleanup the error.
xmlStringCurrentChar_APIParam_1  the XML parser context.
xmlOutputBufferCreateFilename_APIParam_1  a C string containing the xmlOutputBufferCreateFilename_APIParam_1 or filename.
xmlDebugCheckDocument_APIName returns  the number of errors found.
Note: since the process of compiling a RelaxNG schemas modifies the document, the @doc parameter is duplicated internally.
xmlUTF8Size_APIParam_1  pointer to the UTF8 character.
xmlCheckHTTPInput_APIName returns  the input or NULL in case of HTTP error.
xmlGetUTF8Char_APIParam_1  a sequence of UTF-8 encoded bytes.
xmlOutputWriteCallback_APIParam_2  the xmlOutputWriteCallback_APIParam_2 of data to write.
Create a parser context for using the HTML parser in push mode The value of @filename is used for fetching external entities and error/warning reports.
xmlXPathRegisterVariableLookup_APIParam_1  the XPath context.
xmlNewNodeEatName_APIName returns  a pointer to the new node object, with pointer @name as new node's xmlNewNodeEatName_APIParam_2.
xmlBuildURI_APIParam_2  the xmlBuildURI_APIParam_2 value.
If @destParent is given, it ensures that the tree is namespace wellformed by creating additional ns-decls where needed.
xmlValidateAttributeValue_APIParam_2  an  attribute  xmlValidateAttributeValue_APIParam_2.
This handles only attributes in no namespace.
This is only needed for manipulating SGML Super Catalogs like adding and removing CATALOG or DELEGATE entries.
xmlRMutexLock_APIName is used to lock a libxml2 token_r.
xmlSAXUserParseFile_APIParam_1  a SAX handler.
xmlTextReaderRelaxNGValidate_APIName returns  0 in case the schemas validation could be (de)activated and -1 in case of error.
If @content is non NULL, a child list containing the TEXTs and ENTITY_REFs node will be created.
xmlXPathRoot_APIParam_1  the XPath Parser context.
For example, substring("12345",2) returns "2345".
xmlSchematronNewMemParserCtxt_APIParam_2  the xmlSchematronNewMemParserCtxt_APIParam_2 of the array.
xmlGetParameterEntity_APIParam_1  the document referencing the entity.
xmlRelaxNGValidatePushElement_APIName returns  1 if no validation problem was found or 0 if validating the element requires a full node, and -1 in case of error.
xmlCatalogAddLocal_APIParam_1  a document's list of xmlCatalogAddLocal_APIParam_1.
Parse an HTML in-memory document.
xmlParserPrintFileInfo_APIParam_1  an  xmlParserInputPtr  xmlParserPrintFileInfo_APIParam_1.
If activates XPath objects (xmlXPathObject) will be cached internally to be reused.
xmlOutputBufferWrite_APIParam_3  an char array.
xmlExpStringDerive_APIParam_1  the.
xmlMallocLoc_APIParam_2  the xmlMallocLoc_APIParam_2 name or NULL.
xmlXPathNextFollowing_APIParam_2  the current node in the traversal.
Close an I/O channel.
The xmlSchemaNewStringValue_APIParam_1 can be of XML_SCHEMAS_STRING.
Do not call unless sure the library is not in use anymore !.
Signature of xmlGenericErrorFunc_APIParam_3 function to xmlGenericErrorFunc_APIParam_3 when there is an error xmlGenericErrorFunc_APIParam_3 no parsing or validity context available .
htmlCtxtReadFile_APIName returns  the resulting document tree.
Get an entity by xmlSAX2GetEntity_APIParam_2.
xmlParserFindNodeInfoIndex  : Find the index that the info record for the given xmlParserFindNodeInfoIndex_APIParam_2 is or should be at in a sorted sequence.
Free the resources associated to the schema validation context.
xmlOutputBufferWriteEscape_APIParam_1  a buffered parser output.
xmlXPathOrderDocElems_APIName returns  the number of elements found in the document or -1 in case of error.
xmlLoadCatalog_APIName returns  0 in case of success -1 in case of error.
xmlTextWriterStartAttributeNS_APIParam_4  namespace URI or NULL.
xmlSAXParseFileWithData_APIParam_1  the SAX handler block.
allow access to the parser context of the schema validation context.
for (a, b) | c it will return the list [a, c].
xmlShellDir_APIParam_1  the shell context.
Dump an XML document in memory and return the #xmlChar * and it's xmlDocDumpMemory_APIParam_3 in bytes.
Name (S?
xmlCtxtReadFd_APIName returns  the resulting document tree.
xmlOutputWriteCallback_APIParam_3  the length of the xmlOutputWriteCallback_APIParam_2 in bytes.
xmlNewReference_APIParam_1  the document.
xmlBufferAdd_APIParam_1  the buffer to dump.
parse the declaration for a Mixed Element content The leading '(' and spaces have been skipped in  xmlParseElementContentDecl  [47] children ::= (choice | seq) ('?'
xmlTextWriterStartDocument_APIParam_1  the  xmlTextWriterPtr.
xmlSAX2StartElement_APIParam_3  An array of name/value attributes pairs, NULL terminated.
xmlAddID_APIParam_1  the validation context.
xmlParserInputBufferPush_APIParam_2  the size xmlParserInputBufferPush_APIParam_1 bytes of the array.
xmlACatalogResolveURI_APIName returns  the xmlACatalogResolveURI_APIParam_2 of the resource or NULL if not found, it must be freed by the caller.
xmlUnlockLibrary_APIName is used to release a re-entrant lock on the libxml2 library.
This cleanup proxy informations.
xmlParseExternalID_APIParam_1  an XML parser context.
Get the last global error registered.
xmlValidateNMToken_APIName returns  0 if this validates, a positive error code number otherwise and -1 in case of internal or API error.
cdataBlockSAXFunc_APIParam_2  The pcdata content.
Free an expression context.
attributeSAXFunc_APIParam_2  The  attribute  attributeSAXFunc_APIParam_2, including namespace prefix.
show in-extenso the memory blocks allocated.
Save a full document to a saving context TODO: The function is not fully implemented yet as it does not return the byte count but 0 instead.
xmlTextWriterWriteBinHex_APIParam_1  the  xmlTextWriterPtr.
xmlXPathNextDescendant_APIParam_1  the XPath Parser context.
htmlAutoCloseTag_APIName returns  1 if autoclose, 0 otherwise.
xmlRelaxNGValidatePushCData_APIParam_2  some character xmlRelaxNGValidatePushCData_APIParam_2 read.
xmlParserFindNodeInfo_APIParam_2  an XML xmlParserFindNodeInfo_APIParam_2 within the tree.
Function to get the length of a buffer.
Create a parser context for a file or URL content.
xmlDocDumpFormatMemoryEnc_APIParam_3  Length of the generated XML text.
Write an xml attribute.
xmlTextWriterWriteFormatComment_APIParam_2  xmlTextWriterWriteFormatComment_APIParam_2 string (see printf) xmlTextWriterWriteFormatComment_APIParam_3  extra parameters xmlTextWriterWriteFormatComment_APIParam_3 the xmlTextWriterWriteFormatComment_APIParam_2.
xmlSchemaGetValType_APIName returns  the  xmlSchemaValType  of the value.
xmlNewCharEncodingHandler_APIParam_1  the encoding xmlNewCharEncodingHandler_APIParam_1, in UTF-8 format (ASCII actually).
processingInstructionSAXFunc_APIParam_1  the user.
xmlXPathContextSetCache_APIName returns  0 if the setting succeeded, and -1 on API or internal errors.
xmlOutputMatchCallback_APIParam_1  the xmlOutputMatchCallback_APIParam_1 or URI.
xmlSAX2ProcessingInstruction_APIParam_3 (XML parser context).
xmlValidatePopElement_APIName returns  1 if no validation problem was found or 0 otherwise.
htmlCtxtReadIO_APIParam_7  a combination of htmlParserOption(s).
xmlNamespaceParseNCName_APIName returns  the namespace name or NULL.
xmlSAX2NotationDecl_APIParam_3  The public ID of the entity.
xmlXPathNextChild_APIParam_1  the XPath Parser context.
Implement the not_APIName XPath function boolean not(boolean) The not function returns true if its argument is false, and false otherwise.
xmlShellLoad_APIParam_2  the file name.
xmlNewStringInputStream_APIParam_2  an memory xmlNewStringInputStream_APIParam_2.
xmlTextReaderIsEmptyElement_APIParam_1  the  xmlTextReaderPtr  used.
xmlStrcmp_APIParam_1  the first  xmlChar  *.
Create a new  xmlLocationSetPtr  of type double and of value @val.
Deallocate a Schema Type structure.
xmlAddDocEntity_APIName returns  a pointer to the entity or NULL in case of error.
Check if such a node needs to be freed.
Digits [31] Digits ::= [0-9]+ Compile a Number in the string In complement of the Number expression, this function also handles negative values : '-' Number.
xmlThrDefDefaultBufferSize_APIName returns .
The given values are consumed and freed with the struct.
xmlReadDoc_APIParam_1  a pointer to a zero terminated string.
Search in the Function array of the context for the given function.
xmlDebugDumpNodeList_APIParam_3  the indentation level.
Additional initialisation for multi-threading.
When the argument to id is of any other type, the argument is converted to a string as if by a call to the string function; the string is split into a whitespace-separated list of tokens (whitespace is any sequence of  characters  matching the production S); the result is a node-set containing the elements in the same document as the context node that have a unique ID equal to any of the tokens in the list.
If the third argument is not specified, it returns the substring starting at the position specified in the second argument and continuing to the end of the string.
xmlNormalizeWindowsPath_APIName returns  a canonicalized version of the xmlNormalizeWindowsPath_APIParam_1.
Minimal parser for regexps, it understand the following constructs - string terminals - choice operator | - sequence operator , - subexpressions (...) - usual cardinality operators + * and ?
xmlXPathTranslateFunction_APIParam_1  the XPath Parser context.
xmlDumpAttributeTable_APIParam_2  An  attribute  xmlDumpAttributeTable_APIParam_2.
xmlNanoHTTPFetch_APIParam_1  The xmlNanoHTTPFetch_APIParam_1 to load.
xmlExpSubsume_APIParam_1  the.
xmlCheckUTF8_APIName returns  value true if @utf is valid.
xmlCatalogAdd_APIParam_3  the replacement value for the match.
xmlNewTextWriterMemory_APIParam_2  compress the output?.
Deallocates a xmlSchemaFreeWildcard_APIParam_1 structure.
xmlParseEntityValue_APIParam_1  an XML parser context.
xmlAddAttributeDecl_APIParam_3  the element.
xmlIOFTPOpen_APIParam_1  the URI for matching.
xmlBufferCat_APIName returns  0 successful, a positive error code number otherwise and -1 in case of internal or API error.
xmlTextWriterWriteVFormatCDATA_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlNewText_APIName returns  a pointer to the new node object.
xmlListMerge_APIParam_2  the new list.
Create an XML Schemas parse context for that file/resource expected to contain an XML Schemas file.
xmlXPathContextSetCache_APIParam_3  a xmlXPathContextSetCache_APIParam_3 with semantics dependant on @.
xmlTextWriterWriteVFormatString_APIParam_3  pointer to the first member of the variable argument list.
namespace xmlTextWriterWriteVFormatAttributeNS_APIParam_2 xmlTextWriterWriteVFormatAttributeNS_APIParam_3  attribute  local xmlTextWriterWriteVFormatAttributeNS_APIParam_3.
Implement the contains_APIName XPath function boolean contains(string, string) The contains function returns true if the first argument string contains the second argument string, and otherwise returns false.
xmlTextWriterWriteElementNS_APIParam_1  the  xmlTextWriterPtr.
xmlNanoFTPProxy_APIParam_2  the proxy xmlNanoFTPProxy_APIParam_2.
xmlCatalogLocalResolve_APIParam_1  a document's list of xmlCatalogLocalResolve_APIParam_1.
xmlChildElementCount_APIName returns  the count of element child or 0 if not available.
xmlParseMemory_APIParam_2  the xmlParseMemory_APIParam_2 of the array.
xmlBufferWriteCHAR_APIParam_2  the xmlBufferWriteCHAR_APIParam_2 to add.
xmlSaveToIO_APIParam_2  an I/O close function.
xmlOutputBufferCreateFd_APIParam_1  a file descriptor number.
xmlDecodeEntities_APIParam_2  the xmlDecodeEntities_APIParam_2 to decode (in bytes !
xmlXPathVariableLookupNS_APIName returns  the a copy of the value or NULL if not found.
xmlTextWriterWriteFormatDTDAttlist_APIParam_2  xmlTextWriterWriteFormatDTDAttlist_APIParam_4 xmlTextWriterWriteFormatDTDAttlist_APIParam_2 of xmlTextWriterWriteFormatDTDAttlist_APIParam_4 DTD ATTLIST.
Parse a well-balanced chunk of an XML document within the context (DTD, namespaces, etc ...) of the given xmlParseInNodeContext_APIParam_1.
xmlParserInputGrow_APIParam_1  an XML parser input.
htmlIsAutoClosed_APIParam_2  the HTML element.
Implements the XML shell function "write" Write the current xmlShellWrite_APIParam_3 to the xmlShellWrite_APIParam_2, it saves the serialization of the subtree under the @node specified.
xmlNewDocProp_APIParam_1  the document.
xmlSAXVersion_APIParam_1  the SAX handler.
Start an xml DTD ATTLIST.
xmlTextReaderXmlLang_APIParam_1  the  xmlTextReaderPtr  used.
This reuses the existing @ctxt parser context NOTE that the file descriptor will not be closed when the reader is closed or reset.
Pops the top XPath object from the value stack.
xmlShellDir_APIParam_2  unused.
xmlXPathNextNamespace_APIParam_1  the XPath Parser context.
xmlParseBalancedChunkMemoryRecover_APIParam_1  the document the chunk pertains to.
Allocate and initialize a new FTP context.
xmlParseCharData_APIParam_2  int indicating whether we are within a CDATA section.
xlinkExtendedLinkFunk_APIParam_9  array of values for the xlinkExtendedLinkFunk_APIParam_9 attributes found on the arcs.
xmlTextWriterWriteRawLen_APIParam_1  the  xmlTextWriterPtr.
xmlModuleOpen_APIName returns  a handle for the module or NULL in case of error.
xmlDocDumpFormatMemory_APIParam_3  OUT the memory length.
Provides the memory access functions set currently in use.
f. xmlSchemaValidateFacetWhtsp_APIParam_6  the whitespace type of the facet's.
The subtree may still hold pointers to namespace declarations outside the subtree or invalid/masked.
xmlIsIdeographic_APIParam_1  character to validate.
xmlSaveFormatFileEnc_APIParam_4  should formatting spaces be added.
xmlMemoryStrdup_APIParam_1  the initial string pointer.
xmlTextWriterWriteCDATA_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlTextReaderConstBaseUri_APIParam_1  the  xmlTextReaderPtr  used.
Converts an existing object to its string_APIName equivalent.
The caller is responsible for freeing the memory occupied by the returned string.
xmlSAX2AttributeDecl_APIParam_4  the  attribute  xmlSAX2AttributeDecl_APIParam_4.
expression context xmlExpFree_APIParam_2  the expression.
Accessor for the boolean value of a computed value.
Lookup the given entity in EntitiesTable TODO: the linear scan is really ugly, an hash table is really needed.
An entity definition has been parsed.
namePop_APIName returns  the name just removed.
-- Clear (release memory and reinitialize) node info sequence.
xmlExpNewOr_APIName returns  the node or NULL in case of error.
Reset a parser context.
parse an XML Nmtoken.
This function removes used input for the parser.
cdataBlockSAXFunc_APIParam_1  the user data (XML parser context).
htmlNodeDumpFileFormat_APIParam_1  the FILE pointer.
xmlReaderForFd_APIParam_2  the base xmlReaderForFd_APIParam_2 to use for the document.
xmlXPtrNewLocationSetNodes_APIName returns  the newly created object.
xmlTextWriterWriteFormatDTD_APIParam_3  xmlTextWriterWriteFormatDTD_APIParam_6 public identifier, which is an alternative to xmlTextWriterWriteFormatDTD_APIParam_6 system identifier.
Provides the amount of memory currently allocated.
What to do when an unparsed entity declaration is parsed.
xmlXPathCompiledEval_APIParam_2  the XPath context.
xmlAddDtdEntity_APIParam_5  the entity system ID if available.
Try to lookup the catalog  reference  associated to a system ID DEPRECATED, use xmlCatalogResolveSystem_APIName.
xmlRMutexUnlock_APIParam_1  the reentrant mutex.
xmlFileRead_APIName returns  the number of bytes written or < 0 in case of failure.
xmlSchemaWhiteSpaceReplace_APIParam_1  a xmlSchemaWhiteSpaceReplace_APIParam_1.
xmlRegFreeExecCtxt_APIParam_1  a regular expression evaulation context.
xmlTextReaderGetAttributeNo_APIName returns  a string containing the value of the specified attribute, or NULL in case of error.
xmlBufferCreateStatic_APIParam_2  the xmlBufferCreateStatic_APIParam_2 in byte.
xmlMallocLoc_APIParam_1  an int specifying the xmlMallocLoc_APIParam_1 in byte to allocate.
xmlXPathFalseFunction_APIParam_2  the number of arguments.
the root of the document.
xmlBufferWriteChar_APIParam_2  the xmlBufferWriteChar_APIParam_2 to add.
notationDeclSAXFunc_APIParam_1  the user data (XML parser context).
xmlAddAttributeDecl_APIParam_6  the  attribute  xmlAddAttributeDecl_APIParam_6.
parse <!ENTITY declarations [70] EntityDecl ::= GEDecl | PEDecl [71] GEDecl ::= '<!ENTITY' S Name S EntityDef S?
xmlTextReaderConstLocalName_APIParam_1  the  xmlTextReaderPtr  used.
xmlXPathNormalizeFunction_APIParam_1  the XPath Parser context.
xmlTextReaderMoveToAttributeNs_APIParam_1  the  xmlTextReaderPtr  used.
xmlOutputBufferWriteEscape_APIParam_3  an optional xmlOutputBufferWriteEscape_APIParam_3 function (or NULL).
xmlTextReaderSetErrorHandler_APIParam_2  the callback function to call on error and warnings.
xmlStringDecodeEntities_APIParam_5  an xmlStringDecodeEntities_APIParam_4 marker xmlChar, 0 if none.
xmlShellSave_APIParam_1  the shell context.
xmlNodeSetLang_APIParam_2  the language description.
xmlTextWriterStartDTDAttlist_APIParam_1  the  xmlTextWriterPtr.
xmlRelaxNGDumpTree_APIParam_2  a xmlRelaxNGDumpTree_APIParam_2 structure.
xmlDictLookup_APIParam_2  the xmlDictLookup_APIParam_2 of the userdata.
htmlReadIO_APIParam_5  the document htmlReadIO_APIParam_5, or NULL.
xmlNewRMutex_APIName returns  the new reentrant mutex pointer or NULL in case of error.
xmlXPathSubstringFunction_APIParam_1  the XPath Parser context.
xmlXPathNodeSetRemove_APIParam_2  the index to remove.
xmlPatternStreamable_APIParam_1  the precompiled pattern.
xmlRelaxNGGetParserErrors_APIParam_1  a Relax-NG validation context.
xmlXPathStartsWithFunction_APIParam_1  the XPath Parser context.
xmlReaderNewDoc_APIParam_5  a combination of  xmlParserOption.
xmlSchemaCompareValuesWhtsp_APIParam_2  the whitespace value of xmlSchemaCompareValuesWhtsp_APIParam_1.
If @to is NULL, this creates first a new target state in the automata and then adds a transition xmlAutomataNewTransition2_APIParam_2 the @from state xmlAutomataNewTransition2_APIParam_3 the target state activated by the value of @token.
xlinkExtendedLinkSetFunk_APIParam_4  pointer to the array of locator xlinkExtendedLinkSetFunk_APIParam_4.
xmlCatalogSetDefaults_APIParam_1  what catalogs should be accepted.
Dumps informations about the string, shorten it if necessary.
Register a new entity for this document.
Called when a pcdata block has been parsed.
xmlTextWriterWriteVFormatAttributeNS_APIParam_2 .
Write an xml PI.
xmlSAX2ExternalSubset_APIParam_4  the SYSTEM ID (e.g.
Close an FTP I/O channel.
xmlTextWriterWriteDTDElement_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlTextReaderGetAttributeNo_APIParam_2  the zero-based index of the  attribute  relative to the containing element.
xmlValidateNmtokenValue_APIName returns  1 if valid or 0 otherwise.
xmlGetDocEntity_APIParam_2  the entity xmlGetDocEntity_APIParam_2.
htmlSaveFileFormat_APIParam_3  the document htmlSaveFileFormat_APIParam_3.
xmlXPathNodeSetContains_APIParam_1  the node-set.
Create an XML RelaxNGs parser context for that document.
xmlParseDocument_APIName returns  0, -1 in case of error.
xmlParseInNodeContext_APIParam_3  the input string length in bytes.
If the function returns the value @max the caller is invited to grow the receiving array and retry.
xmlXIncludeProcess_APIName returns  0 if no substitution were done, -1 if some processing failed or the number of substitutions done.
xmlParseDTD_APIParam_2  a NAME* containing the URL to the DTD.
xmlStopParser_APIParam_1  an XML parser context.
xmlXPathNextAttribute_APIParam_1  the XPath Parser context.
xmlXPathNsLookup_APIParam_1  the XPath context.
htmlSAXParseDoc_APIName returns  the resulting document tree unless SAX is NULL or the document is not well formed.
Called when an entity  reference  is detected.
xmlMemoryStrdup_APIName returns  a pointer to the new string or NULL if allocation error occurred.
htmlCtxtReadFile_APIParam_1  an HTML parser context.
xmlRelaxNGValidatePushElement_APIParam_3  an element instance.
xmlIsMainThread_APIName check whether the current thread is the main thread.
htmlReadFd_APIParam_4  a combination of htmlParserOption(s).
If @to is NULL, this creates first a new target state in the automata and then adds a transition xmlAutomataNewNegTrans_APIParam_2 the @from state xmlAutomataNewNegTrans_APIParam_3 the target state activated by any value except (@token,@token2) Note that if @token2 is not NULL, then (X, NULL) won't match xmlAutomataNewNegTrans_APIParam_3 follow # the semantic of XSD ##other.
xmlAddEncodingAlias_APIName returns  0 in case of success, -1 in case of error.
xmlGetDtdAttrDesc_APIParam_3 name  the  attribute  xmlGetDtdAttrDesc_APIParam_3.
xmlHashQLookup2_APIParam_2  the xmlHashQLookup2_APIParam_2 of the userdata.
xmlHashAddEntry_APIParam_3 userdata  a pointer to the xmlHashAddEntry_APIParam_3.
xmlAutomataNewAllTrans_APIName returns  the target state or NULL in case of error.
xmlExpCtxtNbCons_APIName returns  the number of nodes ever allocated or -1 in case of error.
xmlThrDefLineNumbersDefaultValue_APIParam_1 .
xmlExpSubsume_APIName returns  1 if true 0 if false and -1 in case of failure.
xmlTextReaderConstString_APIParam_2  the string to intern.
Provides the text value of the node if present.
xmlGetNsProp_APIParam_3  the URI of the namespace.
xmlCopyNodeList_APIParam_1  the first xmlCopyNodeList_APIParam_1 in the list.
xmlNodeAddContentLen_APIParam_3  the size of @content.
xmlNodeListGetString_APIParam_2  a Node xmlNodeListGetString_APIParam_2.
xmlSAX2SetDocumentLocator_APIParam_2  A SAX Locator.
Try to validate the subtree under an element.
Dumps the canonized image of given XML document into memory.
xmlTextWriterWriteAttribute_APIParam_2  attribute  xmlTextWriterWriteAttribute_APIParam_2.
xmlSAX2AttributeDecl_APIParam_6  the  attribute  default value.
xmlHashUpdateEntry_APIParam_2  the xmlHashUpdateEntry_APIParam_2 o. xmlHashUpdateEntry_APIParam_4 the.
Free up all the structures associated to the chained namespaces.
Computes he final xmlBuildURI_APIParam_1 of the  reference  done by checking that the given xmlBuildURI_APIParam_1 is valid, and building the final xmlBuildURI_APIParam_1 using the xmlBuildURI_APIParam_2 xmlBuildURI_APIParam_1.
xmlHashLookup3_APIParam_4  a third xmlHashLookup3_APIParam_2 of the userdata.
htmlNodeDumpFileFormat_APIParam_3  the current node.
References of out-of scope ns-decls are remapped to point to @destDoc: 1) If @destParent is given, then nsDef entries on element-nodes are used 2) If *no* @destParent is given, then @destDoc->oldNs entries are used.
Create a buffered parser input for the progressive parsing for the input from an I/O handler.
Check whether the given xlinkIsLink_APIParam_2 carries the attributes needed to be a link element (or is one of the linking elements issued from the (X)HTML DtDs).
Create a new  xmlXPathObjectPtr  of type range from a not to an object.
Create a new property carried by a document.
Get the validation context options.
xmlXPtrNewRangeNodes_APIName returns  the newly created object.
xmlCatalogGetSystem_APIParam_1  the system ID string.
xmlParserInputGrow_APIName returns  the amount of char read, or -1 xmlParserInputGrow_APIParam_1 case of error, 0 indicate the end of this entity.
xmlCtxtGetLastError_APIName returns  NULL if no error occurred or a pointer to the error.
xmlReaderForMemory_APIParam_2  the xmlReaderForMemory_APIParam_2 of the array.
xmlStringLenGetNodeList_APIParam_2  the xmlStringLenGetNodeList_APIParam_2 of the text.
update all nodes under the xmlSetTreeDoc_APIParam_1 to point to the right document.
Initial state lookup.
xmlNamespaceParseQName_APIParam_2  a  xmlChar  **.
NOTE: @content is supposed to be a piece of XML CDATA, so it allow entities references, but XML special chars need to be escaped first by using xmlEncodeEntitiesReentrant_APIName.
Copy an enumeration  attribute  node (recursive).
xmlStringDecodeEntities_APIName returns  A newly allocated string with the substitution done.
xmlSearchNsByHref_APIParam_3  the namespace value.
Get the node type of the current node Reference: http://www.gnu.org/software/dotgnu/pnetlib-doc/System/Xml/XmlNodeType.html.
xmlCreateDocParserCtxt_APIParam_1  a pointer to an array of  xmlChar.
xmlXPathDistinctSorted_APIName returns  a subset of the xmlXPathDistinctSorted_APIParam_1 contained in @nodes, or @nodes if it is empty.
htmlCtxtReadFd_APIParam_2  an open file descriptor.
xmlXPtrNewCollapsedRange_APIName returns  the newly created object.
xmlShellList_APIParam_4  unused.
xmlNanoHTTPSave_APIName returns  -1 in case of failure, 0 incase of success.
xmlSchemaValidityErrorFunc_APIParam_2  xmlSchemaValidityErrorFunc_APIParam_3 message xmlSchemaValidityErrorFunc_APIParam_3  extra arguments.
xmlParserGetDirectory_APIName returns  a new allocated string containing the directory, or NULL.
Find the userdata specified by the @name and remove it from the hash @table.
xmlValidBuildContentModel_APIParam_2  an element declaration node.
xmlACatalogResolveSystem_APIParam_1  a Catalog.
xmlTextWriterEndDTDAttlist_APIParam_1  the  xmlTextWriterPtr.
xmlXIncludeProcessTreeFlagsData_APIParam_2  a set of  xmlParserOption  used for parsing XML includes.
xmlCharEncFirstLine_APIName returns  the number of byte written if success, or -1 general error -2 if the transcoding fails (for *in is not valid utf8 string or the result of transformation can't fit into the encoding we want), or.
xmlDocFormatDump_APIParam_1  the FILE*.
Write a DTD ATTLIST.
xmlEncodeSpecialChars_APIName.
xmlShellPwd_APIParam_2  the output xmlShellPwd_APIParam_2.
xmlNodeSetContentLen_APIParam_1  the node being modified.
xmlNewTextLen_APIParam_1  the text xmlNewTextLen_APIParam_1.
xmlListDeallocator_APIParam_1  the data to deallocate.
unparsedEntityDeclSAXFunc_APIParam_3  The public ID of the entity.
xmlSaveTree_APIParam_1  a document saving context.
xmlSchemaGetParserErrors_APIParam_1  a XMl-Schema parser context.
xmlStrEqual_APIParam_1  the first  xmlChar  *.
xmlCopyNode_APIParam_1  the xmlCopyNode_APIParam_1.
xmlBufferFree_APIParam_1  the buffer to free.
Register the char encoding xmlRegisterCharEncodingHandler_APIParam_1, surprising, isn't it ?.
When neither object to be compared is a node-set and the operator is <=, <, >=, >, then the objects are compared by converted both objects to numbers and comparing the numbers according to IEEE 754.
xmlGetNsList_APIParam_1  the document.
Note: the leading 'NOTATION' S part has already being parsed... [58] NotationType ::= 'NOTATION' S '(' S?
Search in the Variable array of the context for the given variable value.
xmlCopyNamespace_APIParam_1  the namespace.
xmlBuildRelativeURI_APIParam_1  the xmlBuildRelativeURI_APIParam_1  reference  under consideration.
xmlParserInputBufferCreateFile_APIName returns  the new parser input or NULL.
Removes the first element in the list.
| '-' | '_' | ':' | CombiningChar | Extender [5] Name ::= (Letter | '_' | ':') (NameChar)*.
xmlTextReaderCurrentDoc_APIParam_1  the  xmlTextReaderPtr  used.
Deallocate all the resources associated to the xmlFreeTextReader_APIParam_1.
Register a new ref declaration.
xmlNewEntity_APIParam_4  the entity external ID if available.
parse PEReference declarations The entity content is handled directly by pushing it's content as a new input stream.
This will dump the content of the notation xmlDumpNotationTable_APIParam_2 as an XML DTD definition.
Check that a xmlValidateNMToken_APIParam_1 conforms to the lexical xmlValidateNMToken_APIParam_2 of NMToken.
UTF8ToHtml_APIName returns  0 if success, -2 if the transcoding fails, or -1 otherwise The value of @inlen after return is the number of octets consumed as the return value is positive, else unpredictable.
htmlCtxtReadIO_APIParam_1  an HTML parser context.
We need this for anySimpleType as well.
In the case the document is not Well Formed, it attempts to build a tree anyway.
[27] Misc ::= Comment | PI | S.  xmlParseMisc_APIParam_1  an XML parser context.
xmlParseEntity_APIParam_1  the xmlParseEntity_APIParam_1.
Search the DTD for the description of this element.
Implement the multiply operation on XPath objects: The numeric operators convert their operands to numbers as if by calling the number function.
Search the list in reverse order for an existing value of @data.
xmlShellReadlineFunc_APIName returns  a string which will be freed by the Shell.
xmlTextReaderGetAttribute_APIParam_2  the qualified xmlTextReaderGetAttribute_APIParam_2 of the attribute.
xmlSaveUri_APIParam_1  pointer to an  xmlURI.
xmlSchemaValidityWarningFunc_APIParam_1  xmlSchemaValidityWarningFunc_APIParam_3 validation context.
Signature for a free_APIName implementation.
xmlXPtrLocationSetAdd_APIParam_1  the initial range set.
xmlFreeFunc_APIParam_1  an already allocated block of memory.
xmlXPathIsInf_APIParam_1  a double value.
xmlModuleFree_APIName returns  0 in case of success, -1 in case of argument error.
htmlSaveFileFormat_APIParam_1  the htmlSaveFileFormat_APIParam_1.
[ VC: Attribute Default Legal ] The declared default xmlParseDefaultDecl_APIParam_2 must meet the lexical constraints of the declared  attribute  type c.f.
This can later be retrieved by using the (@name, @name2) tuple.
The value has to be freed by the caller.
xmlReaderNewDoc_APIName returns  0 in case of success and -1 in case of error.
unparsedEntityDeclSAXFunc_APIParam_1  the user data (XML parser context).
Signature of a warning callback from an xmlSchemaValidityWarningFunc_APIParam_3 validation.
the values of the xml:space  attribute  or the one carried by the nearest ancestor.
xmlHashScannerFull_APIParam_1  the.
Concat the given string at the end of the existing xmlTextConcat_APIParam_1 xmlTextConcat_APIParam_2.
xmlTextReaderSetStructuredErrorHandler_APIParam_1  the  xmlTextReaderPtr  used.
Read the first UTF8 character from @utf.
xmlXPathOrderDocElems_APIParam_1  an input document.
parse an HTML document (and build a tree if using the standard SAX interface).
xmlCtxtResetLastError_APIParam_1  an XML parser context.
Thus: - substring("12345", 1.5, 2.6) returns "234" - substring("12345", 0, 3) returns "12" - substring("12345", 0 div 0, 3) returns "" - substring("12345", 1, 0 div 0) returns "" - substring("12345", -42, 1 div 0) returns "12345" - substring("12345", -1 div 0, 1 div 0) returns "".
commentSAXFunc_APIParam_2  the  comment  content.
xmlTextWriterWriteElementNS_APIParam_4  namespace URI.
xmlXPathEvaluatePredicateResult_APIParam_1  the XPath Parser context.
xmlNanoFTPGetResponse_APIParam_1  an FTP context.
xmlTextReaderIsDefault_APIParam_1  the  xmlTextReaderPtr  used.
xmlXPathCtxtCompile_APIParam_2  the XPath expression.
xmlRelaxNGSetParserStructuredErrors_APIParam_1  a Relax-NG parser context.
xmlBuildQName_APIParam_3  preallocated xmlBuildQName_APIParam_3.
xmlSchemaSAXPlug_APIParam_3  a pointer to the original SAX user data pointer.
The context xmlXPathNodeEval_APIParam_1 is not restored.
htmlAttrAllowed_APIParam_2  HTML  attribute.
Add the @userdata to the hash @table.
Build a copy of an element xmlCopyElementTable_APIParam_1.
xmlRemoveProp_APIParam_1  an  attribute.
xmlHashRemoveEntry_APIParam_2  the xmlHashRemoveEntry_APIParam_2 o. xmlHashRemoveEntry_APIParam_3 the userdata xmlHashRemoveEntry_APIParam_3  the deallocator function for removed item (if any).
xmlNanoHTTPReturnCode_APIName returns  the HTTP return code for the request.
xmlTextWriterWriteRawLen_APIParam_2  text string.
Creation of a new text node.
xmlReaderForDoc_APIParam_1  a pointer to a zero terminated string.
xmlXPathDistinct_APIParam_1  a node-set.
xmlGetNoNsProp_APIName returns  the  attribute  value or NULL if not found.
Do a copy of the attribute.
xmlXPathLangFunction_APIParam_2  the number of arguments.
xmlParseAttribute_APIParam_2  a  xmlChar  ** used to store the xmlParseAttribute_APIParam_2 of the  attribute.
xmlSchemaValidateDoc_APIParam_2  a parsed document tree.
xmlXPathSetContextNode_APIParam_2  the XPath context.
xmlValidateAttributeDecl_APIParam_1  the validation context.
xmlSetStructuredErrorFunc_APIParam_2  the new xmlSetStructuredErrorFunc_APIParam_2 function.
xmlHashRemoveEntry3_APIParam_2  the xmlHashRemoveEntry3_APIParam_2 o. xmlHashRemoveEntry3_APIParam_5 the userdata.
NOTE: if the call xmlPatterncompile_APIName indicated a dictionary, then strings for xmlStreamPush_APIParam_2 and xmlStreamPush_APIParam_3 will be expected to come from the dictionary.
xmlClearNodeInfoSeq_APIParam_1  a node info sequence pointer.
The list is kept in htmlStartClose array.
xmlXPathFunctionLookup_APIParam_2  the function xmlXPathFunctionLookup_APIParam_2.
xmlDOMWrapAdoptNode_APIParam_2  the optional xmlDOMWrapAdoptNode_APIParam_2.
xmlIsID_APIName returns  0 or 1 depending on the lookup result.
xmlXPathTrailingSorted_APIParam_1  a node-set, sorted by document order.
xmlCtxtReadIO_APIParam_2  an I/O read function.
xmlSAX2Reference_APIParam_2  The entity xmlSAX2Reference_APIParam_2.
xmlNodeSetContentLen_APIParam_3  the size of @content.
Implement the range-to_APIName XPointer function Obsolete.
xmlReaderForMemory_APIParam_1  a pointer to a char array.
xmlXPathCastNodeSetToBoolean_APIParam_1  a node-set.
Converts a number to its string value.
xmlReadIO_APIParam_6  a combination of  xmlParserOption.
xmlSplitQName3_APIParam_2  an int *.
xmlStreamPushAttr_APIParam_3  the namespace xmlStreamPushAttr_APIParam_2.
xmlTextWriterWriteFormatAttribute_APIParam_2  attribute  xmlTextWriterWriteFormatAttribute_APIParam_2.
xmlAutomataNewOnceTrans2_APIParam_5  the second input string associated xmlAutomataNewOnceTrans2_APIParam_3 that transition.
xmlXPathRegisterVariable_APIName returns  0 in case of success, -1 in case of error.
xmlXPathNotEqualValues_APIName returns  0 or 1 depending on the results of the test.
xmlLastElementChild_APIParam_1  the xmlLastElementChild_APIParam_1 node.
Write a xmlTextWriterWriteFormatDTD_APIParam_6 with a formatted markup declarations part.
Implement the normalize-space_APIName XPath function string normalize-space(string?)
xmlParserInputBufferCreateFd_APIName returns  the new parser input or NULL.
Lookup an encoding name for the given xmlGetEncodingAlias_APIParam_1.
calculates the internal size of a UTF8 character.
Compile a xmlPatterncompile_APIParam_1.
xmlNanoHTTPMethodRedir_APIParam_4  the Content-Type information IN and OUT.
xmlNodeSetBase_APIParam_2  the new base URI.
xmlSchemaSetParserErrors_APIParam_1  a schema validation context.
xmlNanoFTPGetSocket_APIParam_1  an FTP context.
xmlSchemaValidateListSimpleTypeFacet_APIParam_2  the lexical repr of the xmlSchemaValidateListSimpleTypeFacet_APIParam_2 to validate.
xmlTextWriterWriteFormatElementNS_APIName returns  xmlTextWriterWriteFormatElementNS_APIParam_6 bytes written (may be 0 because of buffering) or -1 in case of error.
Load the catalog and makes its definitions effective for the default external entity loader.
xmlParserAddNodeInfo_APIParam_1  an XML parser context.
Search in the DtDs whether an element accept Mixed content (or ANY) basically if it is supposed to accept text childs.
Use W3C XSD schema context to validate the document as it is processed.
xmlTextWriterWriteFormatDTDInternalEntity_APIParam_4  xmlTextWriterWriteFormatDTDInternalEntity_APIParam_4 string (see printf) xmlTextWriterWriteFormatDTDInternalEntity_APIParam_5  extra parameters xmlTextWriterWriteFormatDTDInternalEntity_APIParam_5 the xmlTextWriterWriteFormatDTDInternalEntity_APIParam_4.
xmlReaderForFile_APIParam_1  a file or URL.
xmlSchemaCheckFacet_APIName returns  0 if valid, a positive error code if not valid and -1 in case of an internal or API error.
If @cur was already inserted in a document it is first unlinked from its existing context.
xmlDocDumpMemory_APIParam_1  the document.
xmlDOMWrapAdoptNode_APIName returns  0 if the operation succeeded, 1 if a xmlDOMWrapAdoptNode_APIParam_3 of unsupported type was given, 2 if a xmlDOMWrapAdoptNode_APIParam_3 of not yet supported type was given and -1 on API/internal errors.
xmlNormalizeURIPath_APIName returns  0 or an error code.
xmlValidateDtd_APIParam_2  a document instance.
xmlTextWriterWriteDTD_APIParam_4  the system identifier, which is the URI of the DTD.
As much as possible the function try to reuse the existing namespaces found in the new environment.
xmlHashCopy_APIName returns  the new xmlHashCopy_APIParam_1 or NULL in case of error.
Callback function used when one needs to be able to track back the provenance of a chunk of nodes inherited from an entity replacement.
routine which manage and grows an output buffer.
xmlParseURIRaw_APIName returns  a newly built  xmlURIPtr  or NULL in case of error.
add a new  xmlNodePtr  to an existing NodeSet, optimized version when we are sure the node is not already in the set.
Free a property and all its siblings, all the children are freed too.
xmlAddNotationDecl_APIParam_1  the validation context.
xmlNanoFTPProxy_APIParam_4  the proxy password.
xmlParseCtxtExternalEntity_APIParam_2  the xmlParseCtxtExternalEntity_APIParam_2 for the entity to load.
xmlStrdup_APIParam_1  the input  xmlChar  *.
[ VC: Name Token ] Values of type NMTOKEN must match the Nmtoken production; values of type NMTOKENS must match Nmtokens.
Determine if a given  attribute  is a boolean attribute.
htmlCreatePushParserCtxt_APIParam_2  The user data returned on SAX callbacks.
htmlParseDoc_APIName returns  the resulting document tree.
xmlHashQLookup2_APIName returns  the pointer to the userdata.
Implement the true_APIName XPath function boolean true_APIName.
xmlDocFormatDump_APIParam_2  the document.
Contrary to xmlEncodeEntities, this routine is reentrant, and result must be deallocated.
Dump the given catalog to the given file.
xmlRegisterOutputCallbacks_APIParam_1  the  xmlOutputMatchCallback.
This function will refuse to create a namespace with a similar xmlNewNs_APIParam_3 than an existing one present on this xmlNewNs_APIParam_1.
xmlNewTextWriterTree_APIParam_3  compress the output?.
xmlSchemaSetParserErrors_APIParam_3  the warning callback xmlSchemaSetParserErrors_APIParam_4  contextual data for the callbacks.
xmlAddNotationDecl_APIParam_3  the entity xmlAddNotationDecl_APIParam_3.
xmlSplitQName_APIName returns  the local part, and xmlSplitQName_APIParam_3 is updated to get the Prefix if any.
Unregisters an encoding xmlDelEncodingAlias_APIParam_1 @alias.
xmlDOMWrapAdoptNode_APIParam_5  the optional new parent of @node in @destDoc.
xmlThrDefSubstituteEntitiesDefaultValue_APIParam_1 .
Free up the memory allocated by all the elements of @comp.
xmlTextReaderByteConsumed_APIParam_1  an XML xmlTextReaderByteConsumed_APIParam_1.
Initialize the char encoding support, it registers the default encoding supported.
xmlXPathLangFunction_APIParam_1  the XPath Parser context.
xmlXPathCastStringToNumber_APIName returns  the number value.
Currently implemented only for Readers built on a document.
xmlGcMemGet_APIName returns  0 on success.
It use the given SAX function block to handle the parsing callback.
Creates a new XInclude context.
0 is an indication of an end of connection.
xmlXPathFunctionLookup_APIParam_1  the XPath context.
Should produce a flat tree with only TEXTs and ENTITY_REFs.
resolveEntitySAXFunc_APIParam_1  the user data (XML parser context).
htmlCtxtReadFile_APIParam_4  a combination of htmlParserOption(s).
xmlValidateDtdFinal_APIParam_2  a document instance.
Signature of a warning callback from a Schematron validation.
Deprecated, use  xmlFreeDocElementContent  instead.
xmlModuleClose_APIParam_1  the xmlModuleClose_APIParam_1 handle.
Converts a xmlXPathCastNodeToString_APIParam_1 to its string value.
The "canonical" name for XML encoding.
Frees the DOM-wrapper context.
xmlTextWriterStartDTDElement_APIParam_1  the  xmlTextWriterPtr.
register an external mechanism to do variable lookup.
Registers an xmlAddEncodingAlias_APIParam_2 @alias for an encoding named @name.
xmlXPathSubstringAfterFunction_APIParam_1  the XPath Parser context.
xmlSchemaNewQNameValue_APIName returns  a pointer to the new value or NULL in case of an error.
xmlNanoFTPScanProxy_APIParam_1  The proxy xmlNanoFTPScanProxy_APIParam_1 used to initialize the proxy context.
xmlXPathNextFollowing_APIParam_1  the XPath Parser context.
htmlDocDumpMemory_APIParam_2  OUT the memory pointer.
xmlParseEndTag_APIParam_1  an XML parser context.
xmlFreeAttributeTable_APIParam_1  An  attribute  xmlFreeAttributeTable_APIParam_1.
Receiving some ignorable whitespaces from the parser.
parse a schema definition resource and build an internal XML Shema struture which can be used to validate instances.
xmlTextWriterWriteBinHex_APIParam_3  the position within the xmlTextWriterWriteBinHex_APIParam_2 of the first byte to encode.
Find all the strings used in @exp and store them in @list.
xmlSAXUserParseMemory_APIParam_3  an in-memory XML document input.
xmlTextMerge_APIParam_1  the xmlTextMerge_APIParam_1 text node.
xmlNewDocProp_APIParam_2  the xmlNewDocProp_APIParam_2 of the  attribute.
Implement the div operation on XPath objects @arg1 / @arg2: The numeric operators convert their operands to numbers as if by calling the number function.
xmlSetGenericErrorFunc_APIParam_1  the new error handling context.
xmlDumpEntitiesTable_APIParam_1  An XML buffer.
This function provides the current index of the parser used by the xmlTextReaderByteConsumed_APIParam_1, relative to the start of the current entity.
xmlXPathSetContextNode_APIName returns  -1 in case of error or 0 if successful.
xmlSchemaValidateOneElement_APIParam_1  a schema validation context.
xmlCharStrdup_APIParam_1  the input char *.
xmlNanoFTPGetConnection_APIParam_1  an FTP context.
xmlXPathEval_APIName returns  the  xmlXPathObjectPtr  resulting from the evaluation or NULL.
the parser context is augmented as a result of the parsing.
Write an xmlTextWriterWriteFormatComment_APIParam_3 comment.
xmlBufferDetach_APIParam_1  the buffer.
xmlParserInputBufferCreateMem_APIParam_3  the charset encoding if known.
xmlInputReadCallback_APIParam_2  the xmlInputReadCallback_APIParam_2 to store data read.
xmlXPathNextAttribute_APIParam_2  the current  attribute  in the traversal.
htmlReadIO_APIParam_6  a combination of htmlParserOption(s).
xmlThrDefDefaultBufferSize_APIParam_1 .
xmlHashRemoveEntry2_APIName returns  0 if the removal succeeded and -1 in case of error or not found.
xmlDeregisterNodeDefault_APIName returns  the previous value of the deregistration function.
xmlNewPI_APIParam_2  the PI xmlNewPI_APIParam_2.
It provides the namespace informations for the element.
xmlXPathNodeSetAddUnique_APIParam_2  a new  xmlNodePtr.
htmlTagLookup_APIName returns  the related  htmlElemDescPtr  or NULL if not found.
xmlAddDocEntity_APIParam_3  the entity xmlAddDocEntity_APIParam_3 XML_xxx_yyy_ENTITY.
xmlCatalogAdd_APIParam_2  the system, public or prefix to match.
xmlSAX2StartElement_APIParam_1  the user data (XML parser context).
xmlSchemaSetParserErrors_APIParam_2  the error callback.
clears the entire input callback table.
Write an xml text.
Takes a entity string content and process to do the adequate substitutions.
xmlNewMutex_APIName is used to allocate a libxml2 token struct for use in synchronizing access to data.
extSubsetDecl [31] extSubsetDecl ::= (markupdecl | conditionalSect | PEReference | S) *.
xmlSchemaValidCtxtGetParserCtxt_APIName returns  the parser context of the schema validation context or NULL in case of error.
xmlBufferGrow_APIName returns  the new available space or -1 in case of error.
xmlSchemaIsBuiltInTypeFacet_APIParam_2  the facet xmlSchemaIsBuiltInTypeFacet_APIParam_1.
Initialize the default DocBook SAX2 handler.
xmlMemGet_APIParam_1  place to save the free_APIName function in use.
End an xml DTD.
Free up the memory allocated by @comp.
xmlBufferSetAllocationScheme_APIParam_2  allocation xmlBufferSetAllocationScheme_APIParam_2 to use.
xmlDictGetUsage_APIName returns  the amount of strings allocated.
Provides the number of memory areas currently allocated.
xmlTextReaderConstName_APIParam_1  the  xmlTextReaderPtr  used.
xmlParseEnumeratedType_APIParam_1  an XML parser context.
It does not clean up parser state, it cleans up memory allocated by the library itself.
xmlThrDefIndentTreeOutput_APIParam_1 .
xmlURIEscapeStr_APIName returns  a new escaped string or NULL in case of error.
This function is not super-strict, as it will allow longer UTF-8 sequences than necessary.
xmlInputCloseCallback_APIName returns  0 or -1 in case of error.
a strdup for char's to xmlChar's.
xmlSchemaCompareValues_APIParam_1  a first value.
Provides the value of the  attribute  with the specified qualified xmlTextReaderGetAttribute_APIParam_2.
xmlGetFeature_APIParam_2  the feature xmlGetFeature_APIParam_2.
xmlRelaxNGValidityErrorFunc_APIParam_2  xmlRelaxNGValidityErrorFunc_APIParam_3 message xmlRelaxNGValidityErrorFunc_APIParam_3  extra arguments.
Search and get the value of an  attribute  associated to a xmlGetNsProp_APIParam_1 This  attribute  has to be anchored in the namespace specified.
xmlParseBalancedChunkMemory_APIParam_4  Used for loop detection, use 0. xmlParseBalancedChunkMemory_APIParam_5  the input xmlParseBalancedChunkMemory_APIParam_5 in UTF8 or ISO-Latin (zero terminated).
Hacking interface allowing to get the  xmlDocPtr  correponding to the current document being accessed by the xmlTextReader.
Creates a parser context for an XML in-memory document.
This function has to be used to change the default parser behavior SAX::substituteEntities_APIName has to be used for changing that on a file by file basis.
An element definition has been parsed.
xmlXPtrNewRange_APIParam_2  the xmlXPtrNewRange_APIParam_1 index.
[30a] Float ::= Number ('e' Digits?)?
xmlStringLenDecodeEntities_APIParam_3  the string length.
xmlParseVersionNum_APIParam_1  an XML parser context.
xmlTextWriterStartDTDEntity_APIParam_2  TRUE if this is a parameter entity, FALSE if not.
Add a string range to the beginning of an XML buffer.
xmlNodeSetBase_APIParam_1  the node being changed.
xmlTextMerge_APIName returns  the xmlTextMerge_APIParam_1 text node augmented.
Set indentation output.
xmlNewDoc_APIParam_1  xmlChar  string giving the xmlNewDoc_APIParam_1 of XML "1.0".
xmlSaveToFd_APIParam_2  the xmlSaveToFd_APIParam_2 name to use or NULL.
namespace if any xmlNewDocNodeEatName_APIParam_3  the node xmlNewDocNodeEatName_APIParam_3.
NOTE that the file descriptor will not be closed when the reader is closed or reset.
xmlDictQLookup_APIName returns  the internal copy of the QName or NULL in case of internal error.
xmlRelaxNGSetParserStructuredErrors_APIParam_2  the error callback xmlRelaxNGSetParserStructuredErrors_APIParam_3  contextual data for the callbacks.
Misc* (doctypedecl Misc*)?.
Called when an opening tag has been processed.
xmlUTF8Strpos_APIName returns  a pointer to the UTF8 character or NULL.
xmlAddDocEntity_APIParam_4  the entity external ID if available.
xmlTextWriterFlush_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlSchemaValueGetNext_APIParam_1  the value.
tomata.
Registers a callback for URI input file handling.
This is not reentrant.
Implements the EXSLT - Sets trailing_APIName function: node-set set:trailing (node-set, node-set) @nodes is sorted by document order, then #xmlXPathNodeTrailingSorted is called.
xmlHashAddEntry3_APIName returns  0 the addition succeeded and -1 in case of error.
xmlNanoHTTPOpenRedir_APIParam_2  if available the Content-Type information will be returned at that location.
If one of the names is null, the comparison is considered to match.
xmlDocFormatDump_APIParam_3  should formatting spaces been added.
xmlReaderNewMemory_APIParam_2  a pointer to a char array.
Register a new set of I/O callback for handling parser input.
htmlParseChunk_APIParam_1  an HTML parser context.
The xmlNanoHTTPFetch_APIParam_3, if provided must be freed by the caller.
xmlListReverseSearch_APIName returns  the value associated to @data or NULL in case of error.
xmlDecodeEntities_APIParam_5  an xmlDecodeEntities_APIParam_4 marker xmlChar, 0 if none.
xmlBuildQName_APIParam_4  preallocated xmlBuildQName_APIParam_3 length.
xmlSaveFormatFile_APIParam_3  should formatting spaces been added.
We canot guarantee that an UTF-8 string would work, which is why xmlModuleOpen_APIParam_1 is a const char * and not a const  xmlChar  * .
htmlNodeDumpFileFormat_APIParam_2  the document.
xmlTextWriterWriteVFormatAttributeNS_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlDllMain_APIParam_1 .
xmlValidateDocumentFinal_APIParam_2  a document instance.
Accessor for the next sibling of a list of computed values.
Query if the streaming pattern additionally needs to be fed with text-, cdata-section-, comment- and processing-instruction-nodes.
xmlXPtrNewRangePoints_APIParam_1  the starting point.
xmlValidCtxtNormalizeAttributeValue_APIName returns  a new normalized string if normalization is needed, NULL otherwise the caller must free the returned xmlValidCtxtNormalizeAttributeValue_APIParam_5.
xmlTextReaderConstName_APIName returns  the local name or NULL if not available, the string is deallocated with the xmlTextReaderConstName_APIParam_1.
xmlSAX2EntityDecl_APIParam_4  The public ID of the entity.
xmlNanoFTPProxy_APIParam_1  the proxy xmlNanoFTPProxy_APIParam_1 name.
xmlNanoHTTPRead_APIParam_2  a buffer.
Get the callback information used to handle errors for a parser context.
xmlCopyProp_APIName returns  a new #xmlAttrPtr, or NULL in case of error.
htmlElementAllowedHere_APIParam_1  HTML htmlElementAllowedHere_APIParam_1 element.
xmlStrPrintf_APIParam_2  xmlStrPrintf_APIParam_4 result buffer length.
This value also affect autogeneration of indentation when saving code if blanks sections are kept, indentation is not generated.
xmlReaderNewFd_APIParam_3  the base xmlReaderNewFd_APIParam_3 to use for the document.
xmlSwitchToEncoding_APIParam_1  the parser context.
xmlTextWriterEndDTDAttlist_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlNewEntityInputStream_APIParam_1  an XML parser context.
xmlAddDocEntity_APIParam_2  the entity xmlAddDocEntity_APIParam_2.
The local-name function returns a string containing the local part of the name of the node in the argument node-set that is first in document order.
xmlValidateDocumentFinal_APIParam_1  the validation context.
xmlGetRefs_APIParam_1  pointer to the document.
Finds the first child node of that element which is a Element node Note the handling of entities references is different than in the W3C DOM element traversal spec since we don't have back  reference  from entities content to entities references.
xmlExpNewAtom_APIParam_1  the expression context.
Dumps the canonized image of given XML document into the file.
xmlAutomataNewOnceTrans2_APIParam_7  the maximum successive occurences of xmlAutomataNewOnceTrans2_APIParam_4.
xmlSchemaNewNOTATIONValue_APIName returns  a pointer to the new value or NULL in case of error.
xmlXPathNextAncestor_APIParam_2  the current node in the traversal.
xmlStrstr_APIName returns  the  xmlChar  * for the first occurrence or NULL.
xmlSetFeature_APIParam_2  the feature xmlSetFeature_APIParam_2.
parse an UTF8 encoded XML qualified xmlSplitQName_APIParam_2 string [NS 5] QName ::= (Prefix ':')?
xmlTextWriterWriteVFormatDTDAttlist_APIParam_3  xmlTextWriterWriteVFormatDTDAttlist_APIParam_3 string (see printf).
Create a buffered parser input for the progressive parsing of a file If filename is "-' then we use stdin as the input.
xmlGetID_APIParam_2  the xmlGetID_APIParam_2 value.
xmlRegExecErrInfo_APIName returns 0 in case of success or -1 in case of error.
xmlUnsetNsProp_APIParam_2  the.
xlinkExtendedLinkFunk_APIParam_10  array of values for the xlinkExtendedLinkFunk_APIParam_10 attributes found on the arcs.
This one add C chars at the end of the array.
xmlXPathCompareValues_APIParam_2  less than (1) or greater than (0).
xmlXPathNodeLeadingSorted_APIName returns  the xmlXPathNodeLeadingSorted_APIParam_1 in @nodes that precede @node in document order, @nodes if @node is NULL or an empty node-set if @nodes doesn't contain @node.
Create a buffered parser input for the progressive parsing for the input from a file descriptor.
xmlDictFree_APIParam_1  the dictionary.
xmlTextWriterWriteAttributeNS_APIParam_2 .
xmlValidateAttributeDecl_APIParam_3  an  attribute  definition.
Register a new element declaration.
xmlExpMaxToken_APIName returns  the maximum length or -1 in case of error.
Try to validate a single  attribute  for an element basically it does the following checks as described by the XML-1.0 recommendation: - [ VC: Attribute Value Type ] - [ VC: Fixed Attribute Default ] - [ VC: Entity Name ] - [ VC: Name Token ] - [ VC: ID ] - [ VC: IDREF ] - [ VC: Entity Name ] - [ VC: Notation Attributes ] The ID/IDREF uniqueness and matching are done separately.
xmlTextWriterWriteFormatDTD_APIName returns  xmlTextWriterWriteFormatDTD_APIParam_6 bytes written (may be 0 because of buffering) or -1 in case of error.
Implement the lang_APIName XPath function boolean lang(string) The lang function returns true or false depending on whether the language of the context node as specified by xml:lang attributes is the same as or is a sublanguage of the language specified by the argument string.
Extract informations from the regexp execution, the parameter @values must point to an array of @nbval string pointers on return xmlRegExecNextValues_APIParam_2 will contain the number of possible strings in that state and the @values array will be updated with them.
xmlIsBlank_APIParam_1  character to validate.
xmlSetNs_APIParam_2  a namespace pointer.
Automatic support for ZLIB/Compress compressed document is provided.
attributeDeclSAXFunc_APIParam_7  the attributeDeclSAXFunc_APIParam_7 of enumerated value set.
Note: so fatalErrorSAXFunc_APIParam_3 fatalError_APIName fatalErrorSAXFunc_APIParam_3 callbacks fatalErrorSAXFunc_APIParam_3 not used, error_APIName fatalErrorSAXFunc_APIParam_3 all fatalErrorSAXFunc_APIParam_3 callbacks fatalErrorSAXFunc_APIParam_3 errors.
xmlCatalogLocalResolveURI_APIParam_2  the xmlCatalogLocalResolveURI_APIParam_2.
The arguments (if any) are popped out from the context stack and the result is pushed on the stack.
xmlExpIsNillable_APIParam_1  the expression.
xmlNewTextReaderFilename_APIParam_1  the xmlNewTextReaderFilename_APIParam_1 of the resource to process.
xmlThrDefDeregisterNodeDefault_APIParam_1 .
xmlStringLenDecodeEntities_APIParam_7  an xmlStringLenDecodeEntities_APIParam_5 marker xmlChar, 0 if none.
xmlTextWriterWriteVFormatString_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlFreeDoc_APIParam_1  pointer to the document.
xmlParserInputBufferCreateIO_APIParam_2  an I/O close function.
xmlSnprintfElementContent_APIParam_3  An element table.
xmlHashRemoveEntry3_APIParam_3  a second xmlHashRemoveEntry3_APIParam_2 of the userdata.
xmlXPathDistinctSorted_APIParam_1  a node-set, sorted by document order.
xmlIOHTTPClose_APIName returns  0.
Dump an XML document in memory and return the #xmlChar * and it's xmlDocDumpFormatMemory_APIParam_3.
xmlDebugDumpOneNode_APIParam_2  the xmlDebugDumpOneNode_APIParam_2.
xmlNewDocElementContent_APIParam_3  the xmlNewDocElementContent_APIParam_3 of element content decl.
xmlSAXParseDoc_APIParam_1  the SAX handler block.
xlinkIsLink_APIName returns  the  xlinkType  of the xlinkIsLink_APIParam_2 (XLINK_TYPE_NONE if there is no link detected.
xmlTextWriterWriteVFormatElementNS_APIParam_1  the  xmlTextWriterPtr.
xmlParserInputBufferCreateIO_APIParam_1  an I/O read function.
xmlXPathNextAncestorOrSelf_APIName returns  the next element following that axis.
If @to is NULL, this creates first a new target state in the automata and then adds a transition xmlAutomataNewTransition_APIParam_2 the @from state xmlAutomataNewTransition_APIParam_3 the target state activated by the value of @token.
For details see "Canonical XML" (http://www.w3.org/TR/xml-c14n) or "Exclusive XML Canonicalization" (http://www.w3.org/TR/xml-exc-c14n).
tries to read no Well Formed documents.
The caller has to FREE the returned xmlSchemaGetCanonValue_APIParam_2.
Set and return the previous value for enabling line numbers in elements contents.
xmlCopyNamespaceList_APIName returns  a new #xmlNsPtr, or NULL in case of error.
nodePush_APIName returns  -1 in case of error, the index in the stack otherwise.
xmlUTF8Strsize_APIName returns  the storage size of the first 'len'  characters  of ARRAY.
xmlACatalogResolve_APIParam_2  the public ID string.
parse an XML document (and build a tree if using the standard SAX interface).
xmlSchematronNewMemParserCtxt_APIName returns  the parser context or NULL in case of error.
xmlDocDumpFormatMemoryEnc_APIParam_2  Memory pointer for allocated XML text.
xmlGetIntSubset_APIParam_1  the document pointer.
xmlTextWriterWriteFormatCDATA_APIName returns  xmlTextWriterWriteFormatCDATA_APIParam_3 bytes written (may be 0 because of buffering) or -1 in case of error.
xmlTextWriterWriteFormatDTDElement_APIParam_1  xmlTextWriterWriteFormatDTDElement_APIParam_4  xmlTextWriterPtr.
The 2.x and later version will switch to the XML standard way and ignorableWhitespace_APIName are only generated when running the parser in validating mode and when the current element doesn't allow CDATA or mixed content.
xmlTextReaderMoveToAttributeNo_APIParam_1  the  xmlTextReaderPtr  used.
Create a new  xmlXPathObjectPtr  of type LocationSet and initialize it with all the nodes from @set.
xmlXPathNewString_APIParam_1  the  xmlChar  * value.
Parse escaped pure raw content.
xmlRecoverFile_APIName returns  the resulting document tree or NULL in case of failure.
Is this document tagged standalone ?.
Use xmlDocNewPI preferably to get string interning.
This function was internal and is deprecated.
xmlListSize_APIParam_1  a list.
Create a new  xmlXPathObjectPtr  of type range using 2 nodes.
htmlReadIO_APIName returns  the resulting document tree.
xmlNoNetExternalEntityLoader_APIParam_1  the xmlNoNetExternalEntityLoader_APIParam_1 for the entity to load.
xmlSAX2GetEntity_APIParam_2  The entity xmlSAX2GetEntity_APIParam_2.
In case of doubt abstain from calling this function or do it just before calling exit_APIName to avoid leak reports from valgrind !.
The 1.x version of the parser used an heuristic to try to detect ignorable white spaces.
Search and get the value of an  attribute  associated to a xmlGetNoNsProp_APIParam_1 This does the entity substitution.
xmlTextReaderGetAttributeNs_APIName returns  a string containing the value of the specified attribute, or NULL in case of error.
Grow up the content of the input buffer, the old data are preserved This routine handle the I18N transcoding to internal UTF-8 This routine is used when operating the parser xmlParserInputBufferGrow_APIParam_1 normal (pull) mode TODO: one should be able to remove one extra copy by copying directly onto in->buffer or in->raw.
xmlCatalogLocalResolveURI_APIName returns  the xmlCatalogLocalResolveURI_APIParam_2 of the resource or NULL if not found, it must be freed by the caller.
Get a parameter entity by xmlSAX2GetParameterEntity_APIParam_2.
Deprecated, use  xmlCopyDocElementContent  instead.
htmlReadDoc_APIParam_3  the document htmlReadDoc_APIParam_3, or NULL.
Scan the hash @table and applied @f to each value.
xmlListWalker_APIParam_2  extra xmlListWalker_APIParam_2 provided xmlListWalker_APIParam_1 to the walker.
xmlTextWriterWriteFormatDTDInternalEntity_APIName returns  xmlTextWriterWriteFormatDTDInternalEntity_APIParam_5 bytes written (may be 0 because of buffering) or -1 in case of error.
if @schema is NULL, then RelaxNG validation is desactivated.
Setup an XML xmlTextReaderSetup_APIParam_1 with new xmlTextReaderSetup_APIParam_5.
Both @name and @ns being NULL means the / i.e.
xmlParseElementChildrenContentDecl_APIParam_2  the input used for the current entity, needed for boundary checks.
if true a xmlSchemaValPredefTypeNode_APIParam_2 is computed and returned in @val.
xmlParserInputRead_APIParam_2  an indicative size for the lookahead.
Write an xml CDATA.
parse an XML Literal [11] SystemLiteral ::= ('"' [^"]* '"') | ("'" [^']* "'").
xmlValidateRoot_APIName returns  1 if valid or 0 otherwise.
Check if there is a response from the FTP server after a command.
Pop the element end from the validation stack.
'/>'.
htmlNodeDumpOutput_APIParam_1  the HTML buffer output.
startElementNsSAX2Func_APIParam_1  the user data (XML parser context).
xmlTextReaderSchemaValidateCtxt_APIParam_3  xmlTextReaderSchemaValidateCtxt_APIParam_3 (not used yet).
xmlIOFTPClose_APIName returns  0.
xmlGetDtdNotationDesc_APIParam_1  a pointer to the DtD to search.
xmlTextReaderConstPrefix_APIName returns  the prefix or NULL if not available, the string is deallocated with the xmlTextReaderConstPrefix_APIParam_1.
To create an internal subset, use xmlCreateIntSubset_APIName.
xmlPopInput_APIParam_1  an XML parser context.
xmlTextReaderNextSibling_APIName returns  1 if the node was read successfully, 0 if there is no more nodes to read, or -1 in case of error.
function xmlXPathRegisterFuncNS_APIParam_2.
Moves the position of the current instance to the next  attribute  associated with the current node.
attributeSAXFunc_APIParam_3  The  attribute  attributeSAXFunc_APIParam_3.
xmlCopyDoc_APIParam_1  the document.
xmlXPathTrailing_APIParam_2  a node-set.
namespace xmlTextWriterWriteVFormatElementNS_APIParam_2 xmlTextWriterWriteVFormatElementNS_APIParam_3  element local xmlTextWriterWriteVFormatElementNS_APIParam_3.
xmlEncodeEntities_APIName returns  NULL.
xmlParseCharData_APIParam_1  an XML parser context.
Signature for the registration callback of a created xmlRegisterNodeFunc_APIParam_1.
notationDeclSAXFunc_APIParam_2  The notationDeclSAXFunc_APIParam_2 of the notation.
xmlShellList_APIParam_1  the shell context.
content This correspond to a "Well Balanced" chunk.
Remove the first instance associated to xmlListRemoveFirst_APIParam_2 in the list.
ftpListCallback_APIParam_4  the ftpListCallback_APIParam_4 string.
Create a new  xmlNewTextWriter  structure with @ctxt as output NOTE: the @ctxt context will be freed with the resulting writer (if the call succeeds).
Ensures that the tree is namespace wellformed by creating additional ns-decls where needed.
The qualified name of the node, equal to Prefix :LocalName.
Create a parser context for using the XML parser in push mode.
xmlPatterncompile_APIParam_1  the xmlPatterncompile_APIParam_1 to compile.
xmlTextReaderGetParserColumnNumber_APIName returns  an int or 0 if not available.
Reads the contents of the current node and the full subtree.
The last xmlNanoFTPGet_APIParam_2 has a size of 0 block.
xmlDictExists_APIName returns  the internal copy of the xmlDictExists_APIParam_2 or NULL if not found.
htmlCtxtUseOptions_APIName returns  0 in case of success, the set of unknown or unimplemented htmlCtxtUseOptions_APIParam_2 in case of error.
Deprecated in favor of  xmlNewDocElementContent.
Implements the EXSLT - Sets leading_APIName function: node-set set:leading (node-set, node-set) @nodes1 and @nodes2 are sorted by document order, then #exslSetsLeadingSorted is called.
xmlNanoHTTPFetch_APIParam_3  if available the Content-Type information will be returned at that location.
xmlSchemaFreeFacet_APIParam_1  a schema xmlSchemaFreeFacet_APIParam_1 structure.
xmlBuildQName_APIName returns  the new string which must be freed by the caller if different from @memory and @ncname or NULL in case of error.
htmlParseElement_APIParam_1  an HTML parser context.
- Carl Douglas.
xmlSchemaValidateFacetWhtsp_APIParam_3  the built-in type of the xmlSchemaValidateFacetWhtsp_APIParam_4 value  the lexical (or normalized for pattern) repr of the xmlSchemaValidateFacetWhtsp_APIParam_4 to validate xmlSchemaValidateFacetWhtsp_APIParam_5  the precomputed xmlSchemaValidateFacetWhtsp_APIParam_4 xmlSchemaValidateFacetWhtsp_APIParam_6  the whitespace type of the xmlSchemaValidateFacetWhtsp_APIParam_4.
Implement the ceiling_APIName XPath function number ceiling(number) The ceiling function returns the smallest (closest to negative infinity) number that is not less than the argument and that is an integer.
xmlTextReaderGetParserProp_APIParam_2  the  xmlParserProperties  to get.
xmlExpNewRange_APIParam_3  the lower bound for the repetition.
Deletes the list and its associated data.
xmlXPathVariableLookupFunc_APIName returns  the XPath object value or NULL if not found.
xmlNewEntity_APIParam_1  the document.
xmlTextWriterWriteFormatElementNS_APIParam_2 .
xmlXPathNodeSetAddNs_APIParam_1  the initial.
xmlByteConsumed_APIName returns  the index in bytes from the beginning of the entity or -1 in case the index could not be computed.
xmlReaderNewMemory_APIParam_4  the base xmlReaderNewMemory_APIParam_4 to use for the document.
xmlAutomataNewNegTrans_APIParam_6  xmlAutomataNewNegTrans_APIParam_6 passed xmlAutomataNewNegTrans_APIParam_3 the callback function if the transition is activated.
xmlShellList_APIName returns  0.
xmlParseEncodingDecl_APIName returns  the encoding value or NULL.
xmlCreateEntitiesTable_APIName returns  the  xmlEntitiesTablePtr  just created or NULL in case of error.
Create a document saving context serializing to a xmlSaveToFilename_APIParam_1 or possibly to an URL (but this is less reliable) with the xmlSaveToFilename_APIParam_2 and the xmlSaveToFilename_APIParam_3 given.
xmlDebugDumpDocumentHead_APIParam_1  the FILE * for the xmlDebugDumpDocumentHead_APIParam_1.
xmlSetProp_APIParam_1  the xmlSetProp_APIParam_1.
Parses a regular expression conforming to XML Schemas Part 2 Datatype Appendix F and builds an automata suitable for testing strings against that regular expression.
Checks whether an  attribute  is valid for an element Has full knowledge of Required and Deprecated attributes.
xmlTextReaderCurrentNode_APIParam_1  the  xmlTextReaderPtr  used.
xmlStringLenDecodeEntities_APIParam_5  an xmlStringLenDecodeEntities_APIParam_5 marker xmlChar, 0 if none.
xmlXPathNextFollowingSibling_APIName returns  the next element following that axis.
charactersSAXFunc_APIParam_2  a  xmlChar  string.
An XPath function.
xmlIsBaseChar_APIParam_1  character to validate.
xmlFreeRefTable_APIParam_1  An ref xmlFreeRefTable_APIParam_1.
Dereference the expression.
xmlNewDocComment_APIParam_2  the  comment  xmlNewDocComment_APIParam_2.
Callback function when doing a transition in the automata.
xmlSaveToFilename_APIName returns  a new serialization context or NULL in case of error.
xmlSAX2HasExternalSubset_APIName returns  1 if true.
xmlTextReaderSetParserProp_APIName returns  0 if the call was successful, or -1 in case of error.
xmlReaderNewIO_APIParam_2  an I/O read function.
xmlC14NDocSave_APIParam_7  the xmlC14NDocSave_APIParam_7 level (zlib requred) -1 - libxml default, 0 - uncompressed, >0 - xmlC14NDocSave_APIParam_7 level.
Create a new  xmlHashTablePtr  which will use @dict as the internal dictionary.
xmlRecoverFile_APIParam_1  the xmlRecoverFile_APIParam_1.
xmlNanoFTPList_APIName returns  -1 incase of error, 0 otherwise.
Note that the comparison is case insensitive accordingly to the section [XML] 4.3.3 Character Encoding in Entities.
xmlTextWriterWriteFormatComment_APIName returns  xmlTextWriterWriteFormatComment_APIParam_3 bytes written (may be 0 because of buffering) or -1 in case of error.
xmlNodeDump_APIParam_2  the document.
xmlCreateMemoryParserCtxt_APIParam_2  the xmlCreateMemoryParserCtxt_APIParam_2 of the array.
xmlStrncmp_APIParam_1  the first  xmlChar  *.
xmlDOMWrapReconcileNamespaces_APIParam_2  the element-node.
xmlSchemaIsBuiltInTypeFacet_APIParam_1  the built-in xmlSchemaIsBuiltInTypeFacet_APIParam_1.
xmlRegExecPushString2_APIParam_4  xmlRegExecPushString2_APIParam_4 associated to the token to reuse in callbacks.
xmlDumpElementTable_APIParam_1  the XML buffer output.
check if the URI matches an HTTP one.
parse a namespace prefix declaration TODO: this seems not in use anymore, the namespace handling is done on top of the SAX interfaces, i.e.
xmlValidateNmtokensValue_APIName returns  1 if valid or 0 otherwise.
xmlFileRead_APIParam_2  where to drop data.
Start an xml DTD element.
Deallocate the memory used by an element hash xmlFreeElementTable_APIParam_1.
xmlXPathNewString_APIName returns  the newly created object.
xmlGcMemGet_APIParam_3  place to save the atomic malloc_APIName function in use.
xmlShellDu_APIName returns  0 or -1 in case of error.
UNUSED: by default the DOM building will use  xmlSAX2Characters.
xmlKeepBlanksDefault_APIParam_1  int 0 or 1. xmlKeepBlanksDefault_APIName returns  the last value for 0 for no substitution, 1 for substitution.
xmlTextWriterWriteVFormatString_APIParam_2  xmlTextWriterWriteVFormatString_APIParam_2 string (see printf).
Used to set the user preference w.r.t.
xmlAutomataNewCountedTrans_APIName returns  the target state or NULL in case of error.
xmlSetGenericErrorFunc_APIParam_2  the new xmlSetGenericErrorFunc_APIParam_2 function.
Set and return the previous value for default entity support.
xmlRegisterOutputCallbacks_APIParam_3  the  xmlOutputWriteCallback.
xmlStrlen_APIParam_1  the  xmlChar  * array.
htmlReadFile_APIName returns  the resulting document tree.
xmlFindCharEncodingHandler_APIParam_1  a string describing the char encoding.
xmlTextConcat_APIParam_1  the xmlTextConcat_APIParam_1.
Read the parser internal property.
[7] Nmtoken ::= (NameChar)+ [8] Nmtokens ::= Nmtoken (#x20 Nmtoken)*.
xmlSaveFlush_APIParam_1  a document saving context.
xmlRelaxNGGetValidErrors_APIName returns  -1 in case of error and 0 otherwise.
Create a buffered output for the progressive saving to a file descriptor.
xmlNewChild_APIParam_1  the xmlNewChild_APIParam_1 node.
xmlXPathNewValueTree_APIParam_1  the NodePtr value.
Register a new notation declaration.
This is the prototype for a simple link detection callback.
xmlValidateNmtokenValue_APIParam_1  an Nmtoken xmlValidateNmtokenValue_APIParam_1.
xmlElemDump_APIParam_1  the FILE * for the output.
xmlShellValidate_APIParam_1  the shell context.
xmlShellSave_APIName returns  0 or -1 in case of error.
If @buffer and @size are non-NULL, the data is used to detect the encoding.
xmlTextReaderPreservePattern_APIParam_1  the  xmlTextReaderPtr  used.
Implements the EXSLT - Sets trailing_APIName function: node-set set:trailing (node-set, node-set) @nodes1 and @nodes2 are sorted by document order, then #xmlXPathTrailingSorted is called.
xmlACatalogResolve_APIParam_3  the system ID string.
xmlXPtrNewRangePointNode_APIParam_2  the ending node.
xmlNanoFTPNewCtxt_APIName returns  an FTP context or NULL in case of error.
fatalErrorSAXFunc_APIParam_2  fatalErrorSAXFunc_APIParam_3 message to display/transmit fatalErrorSAXFunc_APIParam_3  extra parameters fatalErrorSAXFunc_APIParam_3 the message display.
xmlCtxtReadIO_APIParam_1  an XML parser context.
xmlValidateName_APIName returns  0 if this validates, a positive error code number otherwise and -1 in case of internal or API error.
expressions context xmlExpParse_APIParam_2  the 0 terminated string.
xmlXPathFreeParserContext_APIParam_1  the context to free.
xmlTextWriterSetIndentString_APIParam_1  the  xmlTextWriterPtr.
xmlDictLookup_APIParam_1  the dictionary.
xmlReaderNewFile_APIParam_4  a combination of  xmlParserOption.
xmlSaveDoc_APIParam_1  a. document saving context xmlSaveDoc_APIParam_2  a document.
xmlRelaxNGDump_APIParam_1  the file xmlRelaxNGDump_APIParam_1.
Constructs an URI expressing the existing xmlPathToURI_APIParam_1.
Write a formatted DTD element.
xmlShellValidate_APIName returns  0 or -1 in case of error.
xmlXPathNodeTrailingSorted_APIParam_1  a node-set, sorted by document order xmlXPathNodeTrailingSorted_APIParam_2  a xmlXPathNodeTrailingSorted_APIParam_2.
xmlConvertSGMLCatalog_APIName returns  the number of entries converted if successful, -1 otherwise.
xmlDebugDumpDTD_APIParam_1  the FILE * for the xmlDebugDumpDTD_APIParam_1.
xmlSchemaValidateFacet_APIParam_3  the lexical repr of the xmlSchemaValidateFacet_APIParam_3 to validate xmlSchemaValidateFacet_APIParam_4  the precomputed xmlSchemaValidateFacet_APIParam_3.
xmlHashUpdateEntry_APIParam_1  the hash xmlHashUpdateEntry_APIParam_1.
xmlURIEscape_APIParam_1  the string of the URI to escape.
xmlExpParse_APIParam_1  the.
xmlReaderForDoc_APIName returns  the new reader or NULL in case of error.
The original @saxptr and @dataptr data are replaced by new pointers but the calls to the original will be maintained.
xmlDebugDumpAttrList_APIParam_1  the FILE * for the xmlDebugDumpAttrList_APIParam_1.
xmlNanoHTTPContentLength_APIParam_1  the HTTP context.
htmlNodeStatus_APIParam_1  an  htmlNodePtr  in a tree.
xmlStreamPushNode_APIName returns  -1 in case of error, 1 if the current state in the xmlStreamPushNode_APIParam_1 is a match and 0 otherwise.
xmlGetLineNo_APIParam_1  valid xmlGetLineNo_APIParam_1.
Plug a SAX based validation layer in a SAX parsing event flow.
xmlTextWriterWriteVFormatAttribute_APIParam_3  xmlTextWriterWriteVFormatAttribute_APIParam_3 string (see printf).
xmlParseEntityValue_APIName returns  the EntityValue parsed with  reference  substituted or NULL.
Check if the pattern is streamable i.e.
parse an XML in-memory block and build a tree.
htmlParseFile_APIParam_1  the htmlParseFile_APIParam_1.
xmlInputMatchCallback_APIName returns  1 if yes and 0 if another Input module should be used.
Write an xml comment.
xmlTextWriterSetQuoteChar_APIName returns  -1 on error or 0 otherwise.
xmlDictCreateSub_APIName returns  the newly created dictionary, or NULL if an error occurred.
htmlCtxtUseOptions_APIParam_1  an HTML parser context.
xmlDocGetRootElement_APIName returns  the #xmlNodePtr for the root or NULL.
Display xmlParserError_APIParam_3 format an error messages, gives file, line, position xmlParserError_APIParam_3 extra parameters.
xmlShellBase_APIParam_1  the shell context.
xmlACatalogResolveSystem_APIName returns  the resource if found or NULL otherwise, the value returned must be freed by the caller.
htmlCtxtReadDoc_APIParam_2  a pointer to a zero terminated string.
xmlTextReaderGetRemainder_APIName returns  the  xmlParserInputBufferPtr  attached to the XML or NULL in case of error.
xmlHashAddEntry2_APIParam_2  the xmlHashAddEntry2_APIParam_2 of the.
[ VC: Attribute Value Type ] The  attribute  must have been declared; the xmlParseAttribute_APIParam_2 must be of the type declared for it.
xmlFreeCatalog_APIParam_1  a Catalog.
xmlCharEncodingInputFunc_APIParam_1  a po.
xmlListPopBack_APIParam_1  a list.
Display xmlParserValidityWarning_APIParam_3 format a validity warning messages, gives file, line, position xmlParserValidityWarning_APIParam_3 extra parameters.
If @filename is "-" the stdout file is used.
xmlSAX2Characters_APIParam_3  the number of  xmlChar.
Allocate a new Facet structure.
Pops an external object from the stack, handling conversion if needed.
Write a formatted xml text.
xmlMallocAtomicLoc_APIParam_3  the xmlMallocAtomicLoc_APIParam_3 number.
Get the canonical representation of the value.
- [ VC: Notation Declared ].
Prototype for callbacks used to plug function lookup in the XPath engine.
xmlACatalogAdd_APIName returns  0 if successful, -1 otherwise.
xmlGetUTF8Char_APIName returns  the char value or -1 in case of error, and sets *len to the actual number of bytes consumed (0 in case of error).
xmlListEmpty_APIParam_1  a list.
- Included in literal in entity values - Included as Parameter Entity  reference  within DTDs.
xmlHashUpdateEntry3_APIParam_3  a second xmlHashUpdateEntry3_APIParam_2 of the xmlHashUpdateEntry3_APIParam_5.
This routine escapes a string to hex, ignoring reserved  characters  (a-z) and the  characters  in the exception xmlURIEscapeStr_APIParam_2.
xmlTextWriterWriteDTD_APIParam_2  the xmlTextWriterWriteDTD_APIParam_2 of the DTD.
xmlParseExternalEntity_APIParam_2  the SAX handler bloc (possibly NULL).
Normalization occurs directly on the string, no new allocation is done.
xmlTextWriterEndDTDEntity_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlReadFd_APIParam_3  the document xmlReadFd_APIParam_3, or NULL.
xmlCharInRange_APIParam_1  character to be validated.
xmlStringCurrentChar_APIParam_2  pointer to the beginning of the char.
xmlXIncludeProcessFlagsData_APIParam_2  a set of  xmlParserOption  used for parsing XML includes.
xmlThrDefBufferAllocScheme_APIName returns .
Build a copy of an element content description.
Implements the XML shell function "base" dumps the current XML base of the xmlShellBase_APIParam_3.
xmlDebugDumpDTD_APIParam_2  the DTD.
xmlSchemaFreeWildcard_APIParam_1  a xmlSchemaFreeWildcard_APIParam_1 structure.
xmlRegExecPushString_APIParam_2  a string token input.
Debugging facility provides the number of allocated nodes over lifetime.
xmlTextWriterWriteVFormatElement_APIParam_4  pointer to the first member of the variable argument list.
xmlXPathCompile_APIParam_1  the XPath expression.
xmlAutomataNewCounterTrans_APIParam_4  the xmlAutomataNewCounterTrans_APIParam_4 associated xmlAutomataNewCounterTrans_APIParam_3 that transition.
xmlTextWriterEndDTD_APIParam_1  the  xmlTextWriterPtr.
xmlSAX2StartElementNs_APIParam_4  the element namespace name if available.
xmlXPatherror_APIParam_2  the xmlXPatherror_APIParam_2 name.
Entity references are substituted.
xmlGetDtdQElementDesc_APIParam_2  the element xmlGetDtdQElementDesc_APIParam_2.
elementDeclSAXFunc_APIParam_4  the element value tree.
xmlTextWriterEndCDATA_APIParam_1  the  xmlTextWriterPtr.
Dump in-extenso the memory blocks allocated to the file .memorylist.
xmlXPathPopString_APIParam_1  an XPath parser context.
Create a parser context for an XML in-memory document.
nodePush_APIParam_1  an XML parser context.
xmlInputReadCallback_APIParam_3  the length of the xmlInputReadCallback_APIParam_2 in bytes.
xmlSAX2StartElementNs_APIParam_8  the number of defaulted xmlSAX2StartElementNs_APIParam_9.
xmlLockLibrary_APIName is used to take out a re-entrant lock on the libxml2 library.
Determine whether an  attribute  is of type ID.
parse Markup declarations [29] markupdecl ::= elementdecl | AttlistDecl | EntityDecl | NotationDecl | PI | Comment [ VC: Proper Declaration/PE Nesting ] Parameter-entity replacement text must be properly nested with markup declarations.
xmlTextReaderRelaxNGValidateCtxt_APIParam_3  xmlTextReaderRelaxNGValidateCtxt_APIParam_3 (not used yet).
xmlXPtrNewLocationSetNodes_APIParam_2  the xmlXPtrNewLocationSetNodes_APIParam_2 NodePtr value or NULL.
xmlNewTextWriterFilename_APIParam_1  the URI of the resource for the output.
xmlRelaxNGSetParserErrors_APIParam_3  the warning callback xmlRelaxNGSetParserErrors_APIParam_4  contextual data for the callbacks.
xmlListWalk_APIParam_1  a list.
Find the userdata specified by the QNames tuple.
It provides the namespace informations for the element, as well as the new namespace declarations on the element.
xmlParseElementContentDecl_APIParam_2  the xmlParseElementContentDecl_APIParam_2 of the element being defined.
Write a DTD internal entity.
xmlShellCat_APIParam_2  unused.
xmlSchemaValidCtxtGetOptions_APIName returns  the option combination or -1 on error.
xmlLoadExternalEntity_APIParam_3  the context in which the entity is called or NULL.
xmlDebugDumpNode_APIParam_1  the FILE * for the xmlDebugDumpNode_APIParam_1.
xmlTextWriterStartAttribute_APIParam_1  the  xmlTextWriterPtr.
xmlDOMWrapAcquireNsFunction_APIParam_2  the context xmlDOMWrapAcquireNsFunction_APIParam_2 (element or attribute).
parse a CharData section.
xmlValidatePopElement_APIParam_4  the qualified name as appearing in the serialization.
For example, substring("12345",2,3) returns "234".
xmlSetTreeDoc_APIParam_2  the document.
xmlNewTextWriterPushParser_APIParam_1  xmlParserCtxtPtr  to hold the new XML document tree.
Unescaping routine, but does not check that the string is an URI.
E.g.
Deallocate a RelaxNG structure.
Try to validate a single element definition basically it does the following checks as described by the XML-1.0 recommendation: - [ VC: One ID per Element Type ] - [ VC: No Duplicate Types ] - [ VC: Unique Element Type Declaration ].
xmlNoNetExternalEntityLoader_APIParam_3  the context in which the entity is called or NULL.
xmlTextWriterWriteDTDInternalEntity_APIParam_1  the  xmlTextWriterPtr.
Do a complete resolution lookup of an External Identifier using a document's private catalog list.
xmlNanoFTPClose_APIName returns  -1 incase of error, 0 otherwise.
xmlSAXDefaultVersion_APIParam_1  the xmlSAXDefaultVersion_APIParam_1, 1 or 2. xmlSAXDefaultVersion_APIName returns  the previous value in case of success and -1 in case of error.
Save the URI as an escaped string.
xmlGetGlobalState_APIName is called to retrieve the global state for a thread.
xmlValidateQName_APIName returns  0 if this validates, a positive error code number otherwise and -1 in case of internal or API error.
xmlSAX2UnparsedEntityDecl_APIParam_3  The public ID of the entity.
xmlAutomataIsDeterminist_APIName returns  1 if true, 0 if not, and -1 in case of error.
xmlNormalizeWindowsPath_APIParam_1  the input file xmlNormalizeWindowsPath_APIParam_1.
xmlFileRead_APIParam_1  the I/O xmlFileRead_APIParam_1.
xmlXPathNextDescendant_APIParam_2  the current node in the traversal.
xmlNamespaceParseQName_APIName returns  the local part, and xmlNamespaceParseQName_APIParam_2 is updated to get the Prefix if any.
xmlNewDocPI_APIParam_1  the target document.
xmlValidateElement_APIParam_3  an element instance.
xmlXPathPopBoolean_APIName returns  the boolean.
Write a formatted xmlTextWriterWriteFormatElementNS_APIParam_6 element with namespace support.
xmlRelaxNGDumpTree_APIParam_1  the file xmlRelaxNGDumpTree_APIParam_1.
xmlStrncmp_APIName returns  the integer result of the comparison.
xmlHashUpdateEntry3_APIParam_1  the hash xmlHashUpdateEntry3_APIParam_1.
xmlHashLookup2_APIParam_1  the hash xmlHashLookup2_APIParam_1.
xmlCharEncodingOutputFunc_APIParam_4  the length of @in.
xmlGcMemGet_APIParam_2  place to save the malloc_APIName function in use.
xmlOutputBufferCreateBuffer_APIParam_1  a  xmlBufferPtr.
Applies the XPath boolean_APIName function on the result of the given compiled expression.
xmlIsChar_APIName returns  true if argument valid, false otherwise.
xmlIOHTTPOpen_APIParam_1  the URI for matching.
xmlSchemaValidateLengthFacetWhtsp_APIParam_5  the actual xmlSchemaValidateLengthFacetWhtsp_APIParam_5 of the xmlSchemaValidateLengthFacetWhtsp_APIParam_3.
Add a string range to an XML buffer.
xmlGcMemSetup_APIParam_4  the realloc_APIName function to use.
xmlSaveFile_APIParam_2  the document.
Implement the local-name_APIName XPath function string local-name(node-set?)
xmlXPathStringLengthFunction_APIParam_1  the XPath Parser context.
xmlTextReaderSchemaValidateCtxt_APIParam_2  the XML Schema validation context or NULL.
xmlAddSibling_APIParam_2  the new node.
xmlOutputBufferWriteEscape_APIName returns  the number of chars immediately written, or -1 in case of error.
Signature of the function to use when there is an xmlStructuredErrorFunc_APIParam_2 and the module handles the new xmlStructuredErrorFunc_APIParam_2 reporting mechanism.
xmlGcMemGet_APIParam_1  place to save the free_APIName function in use.
htmlEntityValueLookup_APIParam_1  the entity's unicode htmlEntityValueLookup_APIParam_1.
xmlAddChild_APIParam_2  the child node.
xmlValidateNameValue_APIName returns  1 if valid or 0 otherwise.
xmlParseCharEncoding_APIName returns  one of the XML_CHAR_ENCODING_... values or  XML_CHAR_ENCODING_NONE  if not recognized.
xmlSAXParseFile_APIName returns  the resulting document tree.
xmlParseNotationType_APIName returns  the notation  attribute  tree built while parsing.
get the default compression mode used, ZLIB based.
xmlXPathCastBooleanToString_APIName returns  a newly allocated string.
xmlNanoHTTPMimeType_APIName returns  the specified Mime-Type or NULL if not available.
xmlNodeAddContent_APIParam_1  the node being modified.
xmlXPathValueFlipSign_APIParam_1  the XPath Parser context.
xmlAutomataNewCountTrans2_APIParam_4  the input string associated xmlAutomataNewCountTrans2_APIParam_3 that transition.
xmlBufNodeDump_APIName returns  the number of bytes written to the buffer, in case of error 0 is returned or @buf stores the error.
xmlIsLetter_APIName returns  0 if not, non-zero otherwise.
a case-ignoring strstr for xmlChar's.
xmlSAX2AttributeDecl_APIParam_5  the xmlSAX2AttributeDecl_APIParam_4 of default value.
xmlExpNewRange_APIParam_2  the expression to be repeated.
xmlTextWriterWriteBinHex_APIParam_2  binary xmlTextWriterWriteBinHex_APIParam_2.
xmlSaveUri_APIName returns  a new string (to be deallocated by caller).
xmlParserValidityError_APIParam_1 xmlParserValidityError_APIParam_3 XML parser context.
htmlAutoCloseTag_APIParam_3  the HTML element.
xmlNanoHTTPMethod_APIParam_2  the HTTP xmlNanoHTTPMethod_APIParam_2 to use.
xmlXPathNumberFunction_APIParam_2  the number of arguments.
Create an XML Schematrons parse context for that file/resource expected to contain an XML Schematrons file.
xmlParseStartTag_APIName returns  the element name parsed.
xmlIOHTTPOpenW_APIParam_2  The xmlIOHTTPOpenW_APIParam_2 desired for the document.
htmlSaveFileEnc_APIParam_2  the document.
xmlParserInputBufferGrow_APIParam_1  a buffered parser input.
Create an XML Schematrons parse context for that document.
htmlCtxtReadFile_APIParam_2  a file or URL.
xmlReaderForIO_APIParam_6  a combination of  xmlParserOption.
xmlNewNsPropEatName_APIParam_1  the holding xmlNewNsPropEatName_APIParam_1.
xmlIOFTPRead_APIParam_1  the I/O xmlIOFTPRead_APIParam_1.
xmlNanoFTPGet_APIParam_2  the user xmlNanoFTPGet_APIParam_2.
parse an XML name.
xmlRelaxNGNewValidCtxt_APIName returns  the validation context or NULL in case of error.
xmlDictLookup_APIParam_3  the length of the xmlDictLookup_APIParam_2, if -1 it is recomputed.
change the input functions when discovering the character encoding of a given entity.
xmlSchemaNewParserCtxt_APIName returns  the parser context or NULL in case of error.
xmlParserInputBufferCreateIO_APIParam_3  an I/O handler.
xmlNanoHTTPClose_APIParam_1  the HTTP context.
Creation of a new character  reference  node.
Duplicate names generate errors.
xmlAutomataNewAllTrans_APIParam_2  the starting point of the transition xmlAutomataNewAllTrans_APIParam_3  the target point of the transition or NULL.
Load an SGML super catalog.
xmlReallocFunc_APIParam_2  the new xmlReallocFunc_APIParam_2 requested in bytes.
Validate that the given xmlValidateNmtokenValue_APIParam_1 match Nmtoken production [ VC: Name Token ].
htmlSaveFileFormat_APIParam_4  should formatting spaces been added.
If @value is NULL it unregisters the variable.
xmlValidityErrorFunc_APIParam_1  usually xmlValidityErrorFunc_APIParam_3 xmlValidCtxtPtr xmlValidityErrorFunc_APIParam_3 a validity error context, xmlValidityErrorFunc_APIParam_3 comes from ctxt->userData (which normally contains such a pointer); ctxt->userData xmlValidityErrorFunc_APIParam_3 be changed by xmlValidityErrorFunc_APIParam_3 user.
This will dump the content of the  attribute  xmlDumpAttributeTable_APIParam_2 as an XML DTD definition.
xmlParserInputBufferCreateFilename_APIParam_1  a C string containing the xmlParserInputBufferCreateFilename_APIParam_1 or filename.
Both the return value and the xmlSplitQName2_APIParam_2 must be freed by the caller.
xmlShellCat_APIParam_1  the shell context.
xmlHashUpdateEntry_APIName returns  0 the addition succeeded and -1 in case of error.
xmlCtxtResetPush_APIParam_3  number of chars in the array.
xmlListCopy_APIParam_2  the xmlListCopy_APIParam_2 list.
xmlMemFree_APIParam_1  the memory block pointer.
xmlExpGetLanguage_APIName returns  the number of unique strings found, -1 in case of errors and -2 if there is more than @len strings.
xmlGetParameterEntity_APIName returns  the corresponding parameter entity, if found.
xmlBufNodeDump_APIParam_4  the imbrication xmlBufNodeDump_APIParam_4 for indenting.
xmlStringLenDecodeEntities_APIParam_1  the parser context.
xmlNamespaceParseNSDef_APIParam_1  an XML parser context.
xmlNanoHTTPRedir_APIName returns  the specified redirection URL or NULL if not redirected.
xmlOutputBufferWriteString_APIParam_1  a buffered parser output.
htmlCtxtReadMemory_APIParam_2  a pointer to a char array.
xmlXPathEval_APIParam_2  the XPath context.
xmlXPathCastToNumber_APIParam_1  an XPath object.
xmlSAXParseDoc_APIParam_2  a pointer to an array of  xmlChar.
All open elements are closed, and the content is flushed to the output.
xmlParseCharRef_APIName returns  the value parsed (as an int), 0 in case of error.
xmlSchemaSetValidErrors_APIParam_2  the error function.
xmlC14NDocSaveTo_APIParam_5  include comments in the result (!=0) or not (==0).
xmlIsRef_APIParam_2  the element carrying the.
xmlMemGet_APIName returns  0 on success.
If @to is NULL, this creates first a new target state in the automata and then adds a transition xmlAutomataNewOnceTrans_APIParam_2 the @from state xmlAutomataNewOnceTrans_APIParam_3 the target state activated by a succession of input of value @token and whose number is between @min and @max, moreover that transition can only be crossed once.
xmlXPtrNewRangePoints_APIName returns  the newly created object.
xmlTextReaderSchemaValidateCtxt_APIName returns  0 in case the schemas validation could be (de)activated and -1 in case of error.
xmlTextConcat_APIParam_3  @content length.
xmlSaveToFd_APIName returns  a new serialization context or NULL in case of error.
.
xmlClearParserCtxt_APIParam_1  an XML parser context.
Retrieve the validity status from the parser context.
xmlXPtrNewRange_APIParam_3  the ending point.
xmlACatalogResolvePublic_APIName returns  the local resource if found or NULL otherwise, the value returned must be freed by the caller.
xmlTextWriterStartDTD_APIParam_3  the public identifier, which is an alternative to the system identifier.
xmlUTF8Strloc_APIName returns  the relative character position of the desired char or -1 if not found.
namespace definition xmlSetNsProp_APIParam_3  the  attribute  xmlSetNsProp_APIParam_3.
The right angle bracket (>) may be represented using the string "&gt;", and must, for compatibility, be escaped using "&gt;" or a character  reference  when it appears in the string "]]>" in content, when that string is not marking the end of a CDATA section.
xmlStringGetNodeList_APIParam_2  the xmlStringGetNodeList_APIParam_2 of the  attribute.
or if the parser was asked to switch to that mode.
xmlSnprintfElementContent_APIParam_1  an output buffer.
Merges two rangesets, all ranges from @val2 are added to @val1.
inter to an array of bytes to store the result.
The allowed sequence for the xmlParseInNodeContext_APIParam_2 is a Well Balanced Chunk defined by the content production in the XML grammar: [43] content ::= (element | CharData | Reference | CDSect | PI | Comment)*.
Display xmlParserValidityError_APIParam_3 format an validity error messages, gives file, line, position xmlParserValidityError_APIParam_3 extra parameters.
initGenericErrorDefaultFunc_APIParam_1  the initGenericErrorDefaultFunc_APIParam_1.
xmlRegExecNextValues_APIParam_5  return value if this was a xmlRegExecNextValues_APIParam_5 state.
Allocate an element content structure for the document.
open an FTP I/O channel.
Move all the element from the xmlListCopy_APIParam_2 list in the new list.
xmlHashDeallocator_APIParam_2  the xmlHashDeallocator_APIParam_2 associated.
Dump an XML document to a file.
xmlInitNodeInfoSeq_APIParam_1  a node info sequence pointer.
xmlRegExecPushString_APIParam_3  xmlRegExecPushString_APIParam_3 associated to the token to reuse in callbacks.
xmlNanoHTTPEncoding_APIName returns  the specified encoding or NULL if not available.
), -1 for no size limit.
[NS 3] NCName ::= (Letter | '_') (NCNameChar)* [NS 4] NCNameChar ::= Letter | Digit | '.'
NOTE: Use xmlNewChild_APIName if @content will contain entities that need to be preserved.
xmlGetDtdNotationDesc_APIParam_2  the notation xmlGetDtdNotationDesc_APIParam_2.
Builds the QName @prefix:@ncname in @memory if there is enough space and xmlBuildQName_APIParam_2 is not NULL nor empty, otherwise allocate a new string.
parse a start of tag either for rule element or EmptyElement.
xmlIOParseDTD_APIParam_3  the charset encoding if known.
xmlListFront_APIParam_1  a list.
htmlEntityLookup_APIName returns  the associated  htmlEntityDescPtr  if found, NULL otherwise.
xmlSearchNs_APIParam_1  the document.
xmlHasNsProp_APIName returns  the  attribute  or the  attribute  declaration or NULL if neither was found.
xmlDocSetRootElement_APIParam_1  the document.
add the new xmlListPushFront_APIParam_2 at the beginning of the list.
http://www.w3.org/TR/REC-xml#charencoding Section 4.3.3 Character Encoding in Entities.
xmlDOMWrapAdoptNode_APIParam_4  the destination doc.
xmlRegisterInputCallbacks_APIParam_3  the  xmlInputReadCallback.
Wrap the Nodeset @val in a new  xmlXPathObjectPtr.
The xmlNanoHTTPOpen_APIParam_2, if provided must be freed by the caller.
xmlTextWriterWriteCDATA_APIParam_1  the  xmlTextWriterPtr.
Change the current xmlSetFeature_APIParam_3 of one feature of this parser instance.
xmlTextWriterWriteDTDNotation_APIParam_2  the xmlTextWriterWriteDTDNotation_APIParam_2 of the xml notation.
It also checks for HTTP errors in which case the input is cleanly freed up and an appropriate error is raised in context.
xmlTextWriterWriteDTDElement_APIParam_1  the  xmlTextWriterPtr.
xmlParseCtxtExternalEntity_APIParam_4  the return value for the set of parsed nodes.
This function checks if the element or one of it's children would autoclose the given tag.
xmlXPathNewContext_APIName returns  the  xmlXPathContext  just allocated.
xmlGetEncodingAlias_APIParam_1  the xmlGetEncodingAlias_APIParam_1 name as parsed, in UTF-8 format (ASCII actually).
xmlEntityReferenceFunc_APIParam_1  the entity.
Validate a document tree in memory.
xmlCreateMemoryParserCtxt_APIName returns  the new parser context or NULL.
xmlSchematronFree_APIParam_1  a xmlSchematronFree_APIParam_1 structure.
xmlTextReaderQuoteChar_APIName returns  " or ' and -1 in case of error.
xmlGetNsList_APIName returns  an NULL terminated array of all the #xmlNsPtr found that need to be freed by the caller or NULL if no namespace if defined.
xmlParseNotationType_APIParam_1  an XML parser context.
Write a formatted xml CDATA.
xmlTextWriterWriteDTDExternalEntity_APIParam_4  the public identifier, which is an alternative to the system identifier.
Creation of a new text node with an extra xmlNewDocTextLen_APIParam_2 length parameter.
xmlShellPwd_APIParam_1  the shell context.
xmlAutomataIsDeterminist_APIParam_1  an automata.
xmlReconciliateNs_APIName returns  the number of namespace declarations created or -1 in case of error.
xmlTextWriterWriteCDATA_APIParam_2  CDATA xmlTextWriterWriteCDATA_APIParam_2.
xmlTextReaderGetParserLineNumber_APIParam_1  the user data (XML xmlTextReaderGetParserLineNumber_APIParam_1 context).
xmlGetFeaturesList_APIName returns  -1 in case or error, or the total number of features, xmlGetFeaturesList_APIParam_1 is updated with the number of strings copied, strings must not be deallocated.
Set the character used for quoting attributes.
xmlThrDefSetGenericErrorFunc_APIParam_1 .
xmlTextWriterWriteVFormatAttributeNS_APIParam_1  the  xmlTextWriterPtr.
htmlCtxtReadFd_APIParam_4  the document htmlCtxtReadFd_APIParam_4, or NULL.
htmlNodeDump_APIName returns  the number of byte written or -1 in case of error.
xmlNodeAddContentLen_APIParam_1  the node being modified.
xmlAutomataNewOnceTrans_APIName returns  the target state or NULL in case of error.
xmlXPathDebugDumpObject_APIParam_3  indentation level.
xmlThrDefSetStructuredErrorFunc_APIParam_2 .
Everything is available on the context, so this is useless in our case.
xmlXPathNextPreceding_APIParam_2  the current node in the traversal.
xmlCopyAttributeTable_APIName returns  the new  xmlAttributeTablePtr  or NULL in case of error.
xmlTextReaderSetErrorHandler_APIParam_1  the  xmlTextReaderPtr  used.
An  attribute  definition has been parsed.
xmlSAX2StartElementNs_APIParam_9  pointer to the array of (localname/prefix/URI/value/end)  attribute  values.
xmlTextReaderSetStructuredErrorHandler_APIParam_2  the callback function to call on error and warnings.
internalSubsetSAXFunc_APIParam_3  the external ID.
xmlCtxtReadMemory_APIParam_3  the xmlCtxtReadMemory_APIParam_3 of the array.
htmlParseChunk_APIParam_3  the htmlParseChunk_APIParam_3 in byte of the htmlParseChunk_APIParam_2.
Signature for a realloc_APIName implementation.
xmlHashAddEntry2_APIParam_1  the hash xmlHashAddEntry2_APIParam_1.
xmlNanoFTPConnectTo_APIParam_1  an FTP xmlNanoFTPConnectTo_APIParam_1 name.
xmlAutomataNewTransition_APIName returns  the target state or NULL in case of error.
xmlSAXUserParseMemory_APIParam_1  a SAX handler.
filename or URL).
xmlPreviousElementSibling_APIParam_1  the current xmlPreviousElementSibling_APIParam_1.
Copy at most *@len feature names into the @result array.
xmlTextWriterWriteRawLen_APIParam_3  length of the text string.
xmlTextReaderPreservePattern_APIParam_3  the prefix definitions, array of [URI, prefix] or NULL.
xmlReadMemory_APIParam_3  the base xmlReadMemory_APIParam_3 to use for the document.
xmlXPathConvertString_APIName returns  the new object, the old one is freed (or the operation is done directly on @val).
xmlRemoveProp_APIName returns  0 if success and -1 in case of error.
Nmtoken (S?
xmlFreeURI_APIParam_1  pointer to an  xmlURI.
Do a copy of an namespace list.
In a node set the namespace nodes are duplicated and the next pointer is set to the parent node in the XPath semantic.
xmlBuildQName_APIParam_2  the xmlBuildQName_APIParam_2.
xmlParserHandlePEReference_APIParam_1  the parser context.
xmlDebugDumpAttrList_APIParam_2  the  attribute  list.
xmlC14NExecute_APIParam_2  the function to use to determine is node visible or not.
xmlAutomataNewTransition2_APIName returns  the target state or NULL in case of error.
xmlNanoHTTPOpenRedir_APIName returns  NULL in case of failure, otherwise a request handler.
xmlOutputBufferWriteString_APIName returns  the number of chars immediately written, or -1 in case of error.
Use xmlDocCopyNodeList_APIName if possible to ensure string interning.
[57] EnumeratedType ::= NotationType | Enumeration [58] NotationType ::= 'NOTATION' S '(' S?
xmlTextWriterWriteFormatAttributeNS_APIName returns  xmlTextWriterWriteFormatAttributeNS_APIParam_6 bytes written (may be 0 because of buffering) or -1 in case of error.
xmlRegExecErrInfo_APIParam_3  pointer to the number of accepted.
xmlStrncatNew_APIParam_1  first  xmlChar  string.
That is to say, if either the first character or the last character of a markup declaration (markupdecl above) is contained in the replacement text for a parameter-entity reference, both must be contained in the same replacement text.
xmlCreateURLParserCtxt_APIParam_2  a combination of  xmlParserOption.
Create a new XPointer context.
xmlValidityWarningFunc_APIParam_2  xmlValidityWarningFunc_APIParam_3 string to format *printf like vararg xmlValidityWarningFunc_APIParam_3  remaining arguments to xmlValidityWarningFunc_APIParam_3 format.
xmlCtxtResetPush_APIParam_1  an XML parser context.
xmlRegExecErrInfo_APIParam_5 IN/OUT.
are part of the set.
If @to is NULL, this creates first a new target state in the automata and then adds an epsilon transition xmlAutomataNewCountedTrans_APIParam_2 the @from state xmlAutomataNewCountedTrans_APIParam_3 the target state which will increment the xmlAutomataNewCountedTrans_APIParam_4 provided.
Types are  XML_BUFFER_ALLOC_EXACT  - use exact sizes, keeps memory usage down  XML_BUFFER_ALLOC_DOUBLEIT  - double buffer when extra needed, improves performance  XML_BUFFER_ALLOC_HYBRID  - use exact sizes on small strings to keep memory usage tight in normal usage, and doubleit on large strings to avoid pathological performance.
xmlBufUse_APIParam_1  the buffer.
xmlXPathLastFunction_APIParam_1  the XPath Parser context.
Fills up the buffer @buf with this value.
xmlRelaxNGNewMemParserCtxt_APIParam_1  a pointer to a char array containing the schemas.
xmlValidateName_APIParam_1  the xmlValidateName_APIParam_1 to check.
xmlSchemaValPredefTypeNode_APIParam_2  the xmlSchemaValPredefTypeNode_APIParam_2 to check xmlSchemaValPredefTypeNode_APIParam_3  the return computed xmlSchemaValPredefTypeNode_APIParam_2.
xmlFileRead_APIParam_3  number of bytes to write.
Dumps debug information for the element xmlDebugDumpNode_APIParam_2, it is recursive.
xmlCurrentChar_APIParam_2  pointer to the length of the char read.
xmlCtxtReadIO_APIParam_5  the base xmlCtxtReadIO_APIParam_5 to use for the document.
xmlReaderNewMemory_APIParam_3  the xmlReaderNewMemory_APIParam_3 of the array.
If @rng is NULL, then RelaxNG schema validation is deactivated.
xmlSchematronParse_APIParam_1  a schema validation context.
[48] cp ::= (Name | choice | seq) ('?'
xmlValidateDocument_APIParam_1  the validation context.
xmlStrsub_APIParam_3  the length of the substring.
As a result of text merging @elem may be freed.
Start an xml  attribute  with namespace support.
xmlGetParameterEntity_APIParam_2  the entity xmlGetParameterEntity_APIParam_2.
xmlStructuredErrorFunc_APIParam_2 callback xmlStructuredErrorFunc_APIParam_2  the xmlStructuredErrorFunc_APIParam_2 being raised.
xmlDictExists_APIParam_3  the length of the xmlDictExists_APIParam_2, if -1 it is recomputed.
xmlXPathNodeSetMerge_APIName returns  @val1 once extended or NULL in case of error.
xmlStrncmp_APIParam_2  the second  xmlChar  *.
xmlSchemaGetCanonValueWhtsp_APIName returns  0 if the value could be built, 1 if the value type is not supported yet and -1 in case of API errors.
Start a new xml document.
update all nodes in the xmlSetListDoc_APIParam_1 to point to the right document.
resolveEntitySAXFunc_APIParam_2  The public ID of the entity.
xmlTextWriterStartDTDEntity_APIParam_3  the xmlTextWriterStartDTDEntity_APIParam_3 of the DTD ATTLIST.
xmlXPathNewNodeSet_APIParam_1  the NodePtr value.
xmlTextWriterStartComment_APIParam_1  the  xmlTextWriterPtr.
Pops a boolean from the stack, handling conversion if needed.
xmlDocDumpFormatMemoryEnc_APIParam_5  should formatting spaces been added.
xmlXPathNewBoolean_APIParam_1  the boolean value.
Checks @utf for being valid UTF-8.
xmlXPathWrapNodeSet_APIParam_1  the NodePtr value.
startElementSAXFunc_APIParam_1  the user data (XML parser context).
Traversal function for the "preceding" direction the preceding axis contains all nodes in the same document as the context node that are before the context node in document order, excluding any ancestors and excluding  attribute  nodes and namespace nodes; the nodes are ordered in reverse document order.
xmlTextWriterWriteDTDInternalEntity_APIParam_4  xmlTextWriterWriteDTDInternalEntity_APIParam_4 of the entity.
xmlSchemaGetValidErrors_APIParam_1  a XML-Schema validation context.
xmlNodeGetSpacePreserve_APIName returns  -1 if xmlspace is not inherited, 0 if "default", 1 if "preserve".
xmlSaveFileTo_APIName returns  the number of bytes written or -1 in case of failure.
Create a new xmlNewIOInputStream_APIParam_2 stream structure encapsulating the @input into a stream suitable for the parser.
xmlSaveFormatFileEnc_APIParam_1  the xmlSaveFormatFileEnc_APIParam_1 or URL to output.
xmlHashUpdateEntry3_APIParam_2  the xmlHashUpdateEntry3_APIParam_2 o. xmlHashUpdateEntry3_APIParam_6 the.
xmlListInsert_APIParam_2  the xmlListInsert_APIParam_2.
xmlThrDefOutputBufferCreateFilenameDefault_APIParam_1 .
a strstr for xmlChar's.
Do a listing on the server.
xmlNewDocRawNode_APIParam_2 .
xmlListSearch_APIParam_2  a search value.
xmlTextWriterStartDTD_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlRegisterNodeFunc_APIParam_1  the current xmlRegisterNodeFunc_APIParam_1.
Removes the last element in the list.
Create a new entity, this differs from xmlAddDocEntity_APIName that if the document is NULL or has no internal subset defined, then an unlinked entity structure will be returned, it is then the responsability of the caller to link it to the document later or free it when not needed anymore.
xmlNewStringInputStream_APIParam_1  an XML parser context.
xmlSchemaGetCanonValueWhtsp_APIParam_3  the whitespace type of the value.
xmlNewTextWriterMemory_APIParam_1  xmlBufferPtr.
Write a formatted xmlTextWriterWriteFormatDTDElement_APIParam_4 element.
xmlXPathFuncLookupFunc_APIParam_3  the namespace xmlXPathFuncLookupFunc_APIParam_2 hosting this function.
xmlTextWriterWriteVFormatDTDInternalEntity_APIParam_5  pointer to the first member of the variable argument list.
Dump an XML document to an open FILE.
xmlCtxtReadMemory_APIParam_4  the base xmlCtxtReadMemory_APIParam_4 to use for the document.
namePush_APIParam_1  an XML parser context.
xmlSAX2UnparsedEntityDecl_APIParam_1  the user data (XML parser context).
xmlReaderForMemory_APIParam_5  a combination of  xmlParserOption.
xmlXPathEvalExpr_APIParam_1  the XPath Parser context.
xmlNodeListGetRawString_APIParam_1  the document.
xmlTextWriterStartDocument_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlNodeDump_APIParam_4  the imbrication xmlNodeDump_APIParam_4 for indenting.
Remove the beginning of an XML buffer.
xmlDumpElementTable_APIParam_2  An element xmlDumpElementTable_APIParam_2.
xmlCurrentChar_APIParam_1  the XML parser context.
Experimental (the author only uses the HTML enhancements in a SAX parser).
xmlNanoFTPUpdateURL_APIName returns  0 if Ok, -1 in case of error (other host).
Resolves a namespace xmlTextReaderLookupNamespace_APIParam_2 in the scope of the current element.
htmlNodeDumpFile_APIParam_1  the FILE pointer.
namespace if any xmlNewDocNode_APIParam_3  the node xmlNewDocNode_APIParam_3.
Check that a xmlValidateNCName_APIParam_1 conforms to the lexical xmlValidateNCName_APIParam_2 of NCName.
xmlTextReaderNodeType_APIName returns  the xmlNodeType of the current node or -1 in case of error.
[ VC: Entity Name ] Values of type ENTITY must match the Name production, values of type ENTITIES must match Names; each Entity Name must match the name of an unparsed entity declared in the DTD.
xmlXPathNodeSetDel_APIParam_2  an  xmlNodePtr.
Checks whether the tree htmlNodeStatus_APIParam_1 is valid.
xmlGetProp_APIParam_1  the xmlGetProp_APIParam_1.
It's up to the caller to free the string memory with xmlFree_APIName.
xmlValidateDtdFinal_APIName returns  1 if valid or 0 if invalid and -1 if not well-formed.
Try to validate a single notation definition basically it does the following checks as described by the XML-1.0 recommendation: - it seems that no validity constraint exists on notation declarations But this function get called anyway .
It's up to the caller to free the memory.
xmlDictSetLimit_APIName returns  the previous xmlDictSetLimit_APIParam_2 of the dictionary or 0.
In the case of HTML documents parsed with the HTML parser, then ID detection is done systematically.
This should not be called by user level code.
'>'.
xmlParserInputDeallocate_APIParam_1  the string to deallocate.
htmlCtxtReadFd_APIParam_1  an HTML parser context.
xmlTextWriterSetIndent_APIParam_1  the  xmlTextWriterPtr.
xmlAutomataNewCounterTrans_APIName returns  the target state or NULL in case of error.
xmlListRemoveAll_APIName returns  the number of deallocation, or 0 if not found.
Create an XML RelaxNGs parse context for that file/resource expected to contain an XML RelaxNGs file.
xmlTextWriterWriteDTDEntity_APIParam_5  the system identifier, which is the URI of the DTD.
htmlCtxtReadMemory_APIParam_4  the base htmlCtxtReadMemory_APIParam_4 to use for the document.
xmlParseNmtoken_APIName returns  the Nmtoken parsed or NULL.
xmlOutputMatchCallback_APIName returns  1 if yes and 0 if another Output module should be used.
xmlNanoHTTPMethodRedir_APIParam_3  the xmlNanoHTTPMethodRedir_APIParam_3 string if any.
xmlTextReaderLocatorLineNumber_APIName returns  the line number or -1 in case of error.
xmlUTF8Strsub_APIName returns  a pointer to a newly created string or NULL if any problem.
Check if the regular expression is determinist.
xmlExpCtxtNbNodes_APIParam_1  an expression context.
xmlValidGetValidElements_APIName returns  the number of element in the list, or -1 in case of error.
xmlXPathStringEvalNumber_APIName returns  the double value.
xmlNewEntity_APIName returns  a pointer to the entity or NULL in case of error.
htmlDocContentDumpFormatOutput_APIParam_4  should formatting spaces been added.
xmlXPathNumberFunction_APIParam_1  the XPath Parser context.
Obtain the line number for the given xmlTextReaderLocatorLineNumber_APIParam_1.
Parse a Chunk of memory.
xmlNewProp_APIName returns  a pointer to the  attribute.
xmlMemRealloc_APIName returns  a pointer to the allocated area or NULL in case of lack of memory.
Register a new namespace.
Deallocate a Schema Facet structure.
ftpListCallback_APIParam_8  the ftpListCallback_APIParam_8.
xmlMemGet_APIParam_3  place to save the realloc_APIName function in use.
xmlSchemaValPredefTypeNodeNoNorm_APIParam_1  the predefined xmlSchemaValPredefTypeNodeNoNorm_APIParam_1.
xmlFreeNotationTable_APIParam_1  An notation xmlFreeNotationTable_APIParam_1.
xmlParseAttributeType_APIParam_1  an XML parser context.
Add a new element @elem to the list of siblings of @cur merging adjacent TEXT nodes (@elem may be freed) If the new element was already inserted in a document it is first unlinked from its existing context.
Take a block of UTF-8 chars UTF8Toisolat1_APIParam_3 and try to convert it to an ISO Latin 1 block of chars UTF8Toisolat1_APIParam_1.
xmlTextWriterWriteDTD_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlMemGet_APIParam_4  place to save the strdup_APIName function in use.
Get the root element of the document (doc->children is a list containing possibly comments, PIs, etc ...).
Try to validate a the root element basically it does the following check as described by the XML-1.0 recommendation: - [ VC: Root Element Type ] it doesn't try to recurse or apply other check to the element.
xmlXPtrLocationSetDel_APIParam_1  the initial range set.
xmlXPathSubstringFunction_APIParam_2  the number of arguments.
xmlXPathCmpNodes_APIParam_2  the second node.
Search all the namespace applying to a given element.
xmlSAX2EndElementNs_APIParam_2  the local name of the element.
xmlReallocLoc_APIName returns  a pointer to the allocated area or NULL in case of lack of memory.
Set the function to call call back when a xml  reference  has been made.
xmlHashFree_APIParam_1  the hash xmlHashFree_APIParam_1.
Write a formatted xml element with namespace support.
xmlSaveFileEnc_APIParam_2  the document.
xmlIsMainThread_APIName returns  1 if the current thread is the main thread, 0 otherwise.
xmlTextWriterWriteVFormatDTD_APIParam_5  xmlTextWriterWriteVFormatDTD_APIParam_5 string (see printf).
If @f is NULL it unregisters the function.
xmlTextReaderLookupNamespace_APIParam_2  the xmlTextReaderLookupNamespace_APIParam_2 whose namespace URI is to be resolved.
Write a formatted xmlTextWriterWriteFormatElement_APIParam_4 element.
xmlHashFree_APIParam_2  the deallocator function for items in the hash.
A specific entity loader disabling network accesses, though still allowing local catalog accesses for resolution.
The userdata is deallocated with @f if provided.
xmlRegisterNodeDefault_APIName returns  the old value of the registration function.
Free up an xmlFreeInputStream_APIParam_1 stream.
This one adds xmlChars at the end of the buffer.
endDocumentSAXFunc_APIParam_1  the user data (XML parser context).
xmlShellSave_APIParam_4  unused.
xmlParserInputBufferCreateStatic_APIParam_3  the charset encoding if known.
xmlValidateNmtokensValue_APIParam_1  an Nmtokens xmlValidateNmtokensValue_APIParam_1.
We don't allow to cross entities boundaries.
xmlPathToURI_APIParam_1  the resource locator in a filesystem notation.
xmlOutputBufferCreateIO_APIName returns  the new parser output or NULL.
NOTE: This function was not intensively tested.
xmlCreateURLParserCtxt_APIParam_1  the xmlCreateURLParserCtxt_APIParam_1 or URL.
xmlHashRemoveEntry_APIName returns  0 if the removal succeeded and -1 in case of error or not found.
Search the DTD for the description of this  attribute  on this element.
This function returns the list of authorized children to insert within an existing tree while respecting the validity constraints forced by the Dtd.
xmlXPtrNewRangeNodeObject_APIParam_2  the ending object.
Initialize the default XML SAX handler according to the xmlSAXVersion_APIParam_2.
xmlUnsetProp_APIParam_2  the  attribute  xmlUnsetProp_APIParam_2.
Build a copy of an entity xmlCopyEntitiesTable_APIParam_1.
xmlResetError_APIParam_1  pointer to the error.
xmlXPathNextFollowingSibling_APIParam_1  the XPath Parser context.
Get an interned string from the xmlTextReaderConstString_APIParam_1, allows for example to speedup string name comparisons.
xmlParserInputBufferRead_APIName returns  the number of chars read and stored xmlParserInputBufferRead_APIParam_1 the buffer, or -1 xmlParserInputBufferRead_APIParam_1 case of error.
xmlReaderForIO_APIName returns  the new reader or NULL in case of error.
xmlXPathNodeTrailing_APIParam_1  a node-set xmlXPathNodeTrailing_APIParam_2  a xmlXPathNodeTrailing_APIParam_2.
[1] document ::= prolog element Misc* [22] prolog ::= XMLDecl?
Create an  xmlTextReader  structure fed with the resource at @URI.
Create an XML Schemas validation context based on the given xmlSchemaNewValidCtxt_APIParam_1.
xmlBufEnd_APIName returns  the end of the internal content or NULL in case of error.
xmlAutomataCompile_APIName returns  the compiled regexp or NULL in case of error.
End an xml CDATA section.
xmlParseURI_APIName returns  a newly built  xmlURIPtr  or NULL in case of error.
Deallocate the memory used by an entities hash xmlFreeEntitiesTable_APIParam_1.
xmlXPathNodeLeading_APIName returns  the xmlXPathNodeLeading_APIParam_1 in @nodes that precede @node in document order, @nodes if @node is NULL or an empty node-set if @nodes doesn't contain @node.
htmlCtxtUseOptions_APIParam_2  a combination of htmlParserOption(s).
xmlTextWriterWriteFormatCDATA_APIParam_2  xmlTextWriterWriteFormatCDATA_APIParam_2 string (see printf) xmlTextWriterWriteFormatCDATA_APIParam_3  extra parameters xmlTextWriterWriteFormatCDATA_APIParam_3 the xmlTextWriterWriteFormatCDATA_APIParam_2.
xmlParserInputBufferCreateIO_APIName returns  the new parser input or NULL.
xmlSaveSetAttrEscape_APIParam_1  a document saving context.
Create a buffered output for the progressive saving to an I/O handler.
xmlThrDefParserDebugEntities_APIName returns .
xmlPatternMatch_APIParam_2  a xmlPatternMatch_APIParam_2.
xmlCopyCharMultiByte_APIParam_1  pointer to an array of  xmlChar.
xmlIOHTTPOpenW_APIName returns  an I/O context or NULL in case of error.
xmlReadFd_APIParam_4  a combination of  xmlParserOption.
[15] Comment ::= '<!--' ((Char - '-') | ('-' (Char - '-')))* '-->'.
xmlTextReaderSchemaValidate_APIParam_2  the path to a W3C XSD schema or NULL.
xmlUTF8Charcmp_APIParam_1  pointer to first UTF8 char.
Merge two text nodes into one.
xmlParseExternalSubset_APIParam_3  the system identifier (or URL).
xmlCtxtReadDoc_APIParam_4  the document xmlCtxtReadDoc_APIParam_4, or NULL.
xmlXPtrLocationSetMerge_APIParam_1  the first LocationSet.
xmlSchematronFreeParserCtxt_APIParam_1  the schema parser context.
xmlSchematronValidityWarningFunc_APIParam_1  xmlSchematronValidityWarningFunc_APIParam_3 validation context.
parse an HTML in-memory document and build a tree.
xmlReaderForMemory_APIParam_4  the document xmlReaderForMemory_APIParam_4, or NULL.
htmlDocContentDumpFormatOutput_APIParam_2  the document.
TODO: Remove, now deprecated ... the test is done directly in the content parsing routines.
xmlMallocFunc_APIName returns  a pointer to the newly allocated block or NULL in case of error.
xmlAutomataNewCountTrans2_APIParam_7  the maximum successive occurences of xmlAutomataNewCountTrans2_APIParam_4.
xmlNanoFTPNewCtxt_APIParam_1  The xmlNanoFTPNewCtxt_APIParam_1 used to initialize the context.
xmlGcMemSetup_APIParam_3  the malloc_APIName function to use for atomic allocations.
xmlParseStartTag_APIParam_1  an XML parser context.
recurse on the parents until it finds the defined namespace or return NULL otherwise.
Get the first element in the list.
xmlHasFeature_APIName returns zero (0) if the xmlHasFeature_APIParam_1 does not exist or an unknown unknown xmlHasFeature_APIParam_1 is requested, non-zero otherwise.
It is a cleanup function for the XML library.
xmlHashScanner_APIParam_2 in the hash xmlHashScanner_APIParam_2  extra scannner xmlHashScanner_APIParam_2.
xmlInitParserCtxt_APIParam_1  an XML parser context.
The declaration of a parameter entity must precede any  reference  to it... [ VC: Entity Declared ] In a document with an external subset or external parameter entities with "standalone='no'", ... ...
Validate that the given xmlValidateNamesValue_APIParam_1 match Names production.
xmlAddAttributeDecl_APIParam_1  the validation context.
xmlSchemaCompareValues_APIParam_2  a second value.
xmlCtxtReadMemory_APIName returns  the resulting document tree.
Free a node and all its siblings, this is a recursive behaviour, all the children are freed too.
xmlBufferGrow_APIParam_1  the buffer.
xmlXIncludeProcessFlags_APIName returns  0 if no substitution were done, -1 if some processing failed or the number of substitutions done.
xmlSAXParseMemoryWithData_APIName returns  the resulting document tree.
Take a block of chars xmlCharEncodingInputFunc_APIParam_3 the original encoding and try to convert it to an UTF-8 block of chars xmlCharEncodingInputFunc_APIParam_1.
xmlNanoFTPCwd_APIParam_1  an FTP context.
xmlIOFTPRead_APIParam_2  where to drop data.
xmlStrcat_APIParam_2  the  xmlChar  * array added.
xmlStrPrintf_APIParam_3  xmlStrPrintf_APIParam_4 message with printf formatting.
token_r is a re-entrant lock and thus useful for synchronizing access to data structures that may be manipulated in a recursive fashion.
xmlOutputBufferCreateFilename_APIParam_2  the encoding converter or NULL.
xmlAutomataNewOnceTrans2_APIParam_4  the input string associated xmlAutomataNewOnceTrans2_APIParam_3 that transition.
Remove an  attribute  carried by a xmlUnsetProp_APIParam_1.
xmlTextWriterWritePI_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
htmlSAXParseDoc_APIParam_4  if using SAX, this pointer will be provided on callbacks.
parse a DOCTYPE declaration [28] doctypedecl ::= '<!DOCTYPE' S Name (S ExternalID)?
xmlSAXParseEntity_APIParam_2  the xmlSAXParseEntity_APIParam_2.
parse an XML qualified xmlSplitQName3_APIParam_1 string,i.
xmlSchemaValidateStream_APIParam_1  a schema validation context.
Create a new  xmlXPathObjectPtr  of type range using a single nodes.
xmlTextReaderReadString_APIParam_1  the  xmlTextReaderPtr  used.
xmlSnprintfElementContent_APIParam_2  the buffer xmlSnprintfElementContent_APIParam_2.
xmlSchemaValPredefTypeNode_APIParam_1  the predefined xmlSchemaValPredefTypeNode_APIParam_1.
xmlXPathIsNaN_APIParam_1  a double value.
xmlRelaxNGValidateDoc_APIParam_1  a Relax-NG validation context.
Moves the position of the current instance to the next node in the stream, exposing its properties.
xmlListWalk_APIParam_3  a xmlListWalk_APIParam_3 parameter passed to the xmlListWalk_APIParam_2 function.
xmlStrVPrintf_APIName returns  the number of  characters  written to @buf or -1 if an error occurs.
End an xml DTD  attribute  list.
xmlParseEntityRef_APIParam_1  an XML parser context.
xmlTextReaderNodeType_APIParam_1  the  xmlTextReaderPtr  used.
xmlSchemaCheckFacet_APIParam_3  the schema parser context or NULL.
xmlCharEncodingInputFunc_APIParam_4  the length of @in.
xmlHashQLookup3_APIParam_6  the third xmlHashQLookup3_APIParam_2 of the userdata.
Traversal function for the "following" direction The following axis contains all nodes in the same document as the context node that are after the context node in document order, excluding any descendants and excluding  attribute  nodes and namespace nodes; the nodes are ordered in document order.
htmlSetMetaEncoding_APIName returns  0 in case of success and -1 in case of error.
parse an XML document from I/O functions and source and build a tree.
Find the parser xmlParserFindNodeInfo_APIParam_2 info struct for a given xmlParserFindNodeInfo_APIParam_2.
xmlXPatherror_APIParam_1  the XPath Parser context.
xmlGetDtdEntity_APIName returns  the corresponding entity, if found.
xmlRelaxNGFreeParserCtxt_APIParam_1  the schema parser context.
xmlStrncat_APIName returns  a new  xmlChar  *, the original @cur is reallocated and should not be freed.
xmlSchemaValidateStream_APIParam_3  an optional encoding information.
xmlExpGetStart_APIParam_1  the.
xmlParseCharRef_APIParam_1  an XML parser context.
This simply means that @handler will be called for subsequent error messages while not parsing nor validating.
xmlTextReaderGetAttributeNs_APIParam_2  the local name of the attribute.
xmlValidateQName_APIParam_1  the xmlValidateQName_APIParam_1 to check.
xmlBufferResize_APIName returns  0 in case of problems, 1 otherwise.
[24] VersionInfo ::= S 'version' Eq (' VersionNum ' | " VersionNum ") [25] Eq ::= S?
One should call xmlCleanupParser_APIName only when the process has finished using the library and all XML/HTML documents built with it.
- A number is converted to a string as follows + NaN is converted to the string NaN + positive zero is converted to the string 0 + negative zero is converted to the string 0 + positive infinity is converted to the string Infinity + negative infinity is converted to the string -Infinity + if the number is an integer, the number is represented in decimal form as a Number with no decimal point and no leading zeros, preceded by a minus sign (-) if the number is negative + otherwise, the number is represented in decimal form as a Number including a decimal point with at least one digit before the decimal point and at least one digit after the decimal point, preceded by a minus sign (-) if the number is negative; there must be no leading zeros before the decimal point apart possibly from the one required digit immediately before the decimal point; beyond the one required digit after the decimal point there must be as many, but only as many, more digits as are needed to uniquely distinguish the number from all other IEEE 754 numeric values.
xmlStrQEqual_APIParam_3  the second  xmlChar  *.
xmlSAXParseMemoryWithData_APIParam_1  the SAX handler block.
xmlXPathNsLookup_APIName returns  the value or NULL if not found.
xmlNodeIsText_APIParam_1  the xmlNodeIsText_APIParam_1.
xmlTextReaderNormalization_APIParam_1  the  xmlTextReaderPtr  used.
xmlXPtrNewContext_APIName returns  the  xmlXPathContext  just allocated.
xmlTextWriterWriteVFormatDTD_APIParam_6  pointer to the first member of the variable argument list.
xmlShell_APIParam_1  the initial document.
xmlSAXParseMemory_APIParam_4  work in xmlSAXParseMemory_APIParam_4 mode, i.e.
Get the default xlink handler.
xmlTextWriterWriteVFormatRaw_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlStrncasecmp_APIParam_3  the max comparison length.
xmlTextReaderNextSibling_APIParam_1  the  xmlTextReaderPtr  used.
xmlDumpElementDecl_APIParam_2  An element table.
xmlSAX2HasExternalSubset_APIParam_1  the user data (XML parser context).
Constructs a canonic xmlCanonicPath_APIParam_1 from the specified xmlCanonicPath_APIParam_1.
xmlNewTextChild_APIParam_1  the xmlNewTextChild_APIParam_1 node.
This is a generic signature for the XML shell input function.
xmlNewEntityInputStream_APIParam_2  an Entity pointer.
Insert xmlListAppend_APIParam_2 in the ordered list at the end for this value.
Free the xmlFreeStreamCtxt_APIParam_1 context.
Get the response from the FTP server after a command.
Sets 'node' as the context xmlXPathSetContextNode_APIParam_1.
xmlPushInput_APIParam_2  an XML parser xmlPushInput_APIParam_2 fragment (entity, XML fragment ...).
Do a schemas validation of the given resource, it will use the SAX streamable validation internally.
This will substitute ns-references to node->nsDef for ns-references to doc->oldNs, thus ensuring the removed branch to be autark wrt ns-references.
Create a new  xmlXPathParserContext.
hasInternalSubsetSAXFunc_APIParam_1  the user data (XML parser context).
This call xmlOutputBufferClose_APIName on xmlSaveFileTo_APIParam_1 which is not available after this call.
xmlBufNodeDump_APIParam_3  the current node.
xmlSaveFileTo_APIParam_2  the document.
Use  xmlIsDigit_ch  or  xmlIsDigitQ  instead.
Do an entity lookup in the document entity hash table and.
xmlTextReaderMoveToAttribute_APIParam_2  the qualified xmlTextReaderMoveToAttribute_APIParam_2 of the attribute.
'|' S?
xmlValidityWarningFunc_APIParam_1  usually xmlValidityWarningFunc_APIParam_3 xmlValidCtxtPtr xmlValidityWarningFunc_APIParam_3 a validity error context, xmlValidityWarningFunc_APIParam_3 comes from ctxt->userData (which normally contains such a pointer); ctxt->userData xmlValidityWarningFunc_APIParam_3 be changed by xmlValidityWarningFunc_APIParam_3 user.
xmlNanoHTTPOpenRedir_APIParam_3  if available the redirected xmlNanoHTTPOpenRedir_APIParam_1 will be returned.
xmlAutomataNewOnceTrans2_APIParam_6  the minimum successive occurences of xmlAutomataNewOnceTrans2_APIParam_4.
xmlTextWriterWriteBase64_APIParam_2  binary xmlTextWriterWriteBase64_APIParam_2.
xmlTextWriterWriteFormatDTDAttlist_APIParam_3  xmlTextWriterWriteFormatDTDAttlist_APIParam_3 string (see printf) xmlTextWriterWriteFormatDTDAttlist_APIParam_4  extra parameters xmlTextWriterWriteFormatDTDAttlist_APIParam_4 the xmlTextWriterWriteFormatDTDAttlist_APIParam_3.
xmlSchemaValidateFacet_APIParam_1  the xmlSchemaValidateFacet_APIParam_1 type.
Increment the  reference  counter of a dictionary.
xmlValidateOneNamespace_APIParam_6  the  attribute  xmlValidateOneNamespace_APIParam_6 (without entities processing).
xmlDOMWrapReconcileNamespaces_APIParam_1  DOM wrapper context, unused at the moment.
Remove the string contained in a buffer and gie it back to the caller.
xmlExpParse_APIName returns  a new expression or NULL in case of failure.
xmlAutomataNewOnceTrans2_APIParam_1  an au.
Create a parser context for a file content.
xmlTextWriterWriteDTDElement_APIParam_3  xmlTextWriterWriteDTDElement_APIParam_3 of the element.
xmlDocCopyNode_APIName returns  a new #xmlNodePtr, or NULL in case of error.
xmlExpExpDerive_APIParam_3  the subexpression.
Note that Java is capable of producing these sequences if provoked.
Parse an URI based on RFC 3986 URI-reference = [ absoluteURI | relativeURI ] [ "#" fragment ].
xmlValidateOneAttribute_APIParam_2  a document instance.
xmlIsMixedElement_APIName returns  0 if no, 1 if yes, and -1 if no element description is available.
xmlACatalogRemove_APIParam_2  the xmlACatalogRemove_APIParam_2 to remove.
xmlParseBalancedChunkMemoryRecover_APIParam_7  return nodes even if the data is broken (use 0).
Allocate a new simple xmlSchemaNewStringValue_APIParam_1 xmlSchemaNewStringValue_APIParam_2.
xmlValidateOneNamespace_APIParam_1  the validation context.
xmlSchematronSetValidStructuredErrors_APIParam_2  the structured error function xmlSchematronSetValidStructuredErrors_APIParam_3  the functions context.
xmlSAX2ResolveEntity_APIParam_2  The public ID of the entity.
xlinkExtendedLinkSetFunk_APIParam_8  array of xmllang values for the xlinkExtendedLinkSetFunk_APIParam_7.
xmlCharEncOutFunc_APIParam_3  an  xmlBuffer  for the input.
Deallocate the memory used by an Ref hash xmlFreeRefTable_APIParam_1.
xmlCurrentChar_APIName returns  the current char value and its length.
xmlFreeElementTable_APIParam_1  An element xmlFreeElementTable_APIParam_1.
xmlListSearch_APIName returns  the value associated to @data or NULL in case of error.
Creation of a Namespace, the old way using PI and without scoping DEPRECATED !!!.
It tries to reclaim all related global memory allocated for the library processing.
The depth of the node in the tree.
xmlAutomataNewCountTrans2_APIParam_8  xmlAutomataNewCountTrans2_APIParam_8 associated xmlAutomataNewCountTrans2_APIParam_3 the transition.
xmlExpGetStart_APIParam_3  where to store the tokens.
Debugging facility provides the number of allocated nodes at a that point.
xmlTextWriterWriteVFormatElementNS_APIParam_4  namespace URI.
xmlXPathDebugDumpObject_APIParam_2  the object to inspect.
xmlTextWriterWriteElement_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlSaveToFilename_APIParam_1  a file name or an URL.
xmlListClear_APIParam_1  a list.
xmlListWalker_APIName returns  0 to stop walking the list, 1 otherwise.
htmlCreateMemoryParserCtxt_APIName returns  the new parser context or NULL.
| '-' | '_' | ':' | CombiningChar | Extender [5] Name ::= (Letter | '_' | ':') (NameChar)* [6] Names ::= Name (#x20 Name)*.
Simply creates an empty  xmlURI.
Validate that the given name match a notation declaration.
xmlSAX2IgnorableWhitespace_APIParam_2  a  xmlChar  string.
a strcat for array of xmlChar's.
End an xml document.
xmlIOHTTPRead_APIParam_2  where to drop data.
xmlShellPwd_APIName returns  0 or -1 in case of error.
htmlNodeDumpFileFormat_APIParam_5  should formatting spaces been added.
xmlSAX2Characters_APIParam_2  a  xmlChar  string.
a strcasecmp for xmlChar's.
xmlXIncludeProcessNode_APIName returns  0 if no substitution were done, -1 if some processing failed or the number of substitutions done.
xmlExpGetLanguage_APIParam_3  where to store the tokens.
This is what the older xml-name Working Draft specified, a bunch of other stuff may still rely on it, so support is still here as if it was declared on the root of the Tree:-( TODO: remove from library To be removed at next drop of binary compatibility.
xmlShellCat_APIParam_4  unused.
Create an XML Schemas parse context for that document.
xmlParseCDSect_APIParam_1  an XML parser context.
xmlStringDecodeEntities_APIParam_1  the parser context.
Checks whether this xmlIsBlankNode_APIParam_1 is an empty or whitespace only (and possibly ignorable) text-node.
xmlNewTextWriterDoc_APIParam_1  address of a  xmlDocPtr  to hold the new XML document tree.
xmlParseChunk_APIParam_4  last xmlParseChunk_APIParam_2 indicator.
'>' [NS 10] EmptyElement ::= '<' QName (S Attribute)* S?
xmlParsePubidLiteral_APIParam_1  an XML parser context.
parse an HTML element, this is highly recursive this is kept for compatibility with previous code versions [39] element ::= EmptyElemTag | STag content ETag [41] Attribute ::= Name Eq AttValue.
xmlRecoverMemory_APIParam_1  an pointer to a char array.
Write a formatted xmlTextWriterWriteFormatDTDAttlist_APIParam_4 ATTLIST.
xmlTextWriterWriteVFormatPI_APIParam_3  xmlTextWriterWriteVFormatPI_APIParam_3 string (see printf).
If there are two such numbers, then the one that is closest to positive infinity is returned.
xmlNewInputFromFile_APIParam_1  an XML parser context.
xmlStrcat_APIName returns  a new  xmlChar  * containing the concatenated string.
Searches for the BASE URL.
xmlXPathNodeSetAdd_APIName returns  0 in case of success, and -1 in case of error.
xmlTextWriterWriteElement_APIParam_3  element xmlTextWriterWriteElement_APIParam_3.
xmlShellLoad_APIParam_3  unused.
xmlNamespaceParseQName_APIParam_1  an XML parser context.
xmlGcMemGet_APIParam_4  place to save the realloc_APIName function in use.
If the node-set is empty, the first node has no name, or the expanded name has no namespace URI, an empty string is returned.
xmlAddID_APIParam_4  the  attribute  holding the ID.
xmlTextReaderLocatorLineNumber_APIParam_1  the  xmlTextReaderLocatorPtr  used.
xmlValidateDocumentFinal_APIName returns  1 if valid or 0 otherwise.
xmlEntityReferenceFunc_APIParam_2  the fist node in the chunk.
xmlXPathNodeTrailingSorted_APIName returns  the xmlXPathNodeTrailingSorted_APIParam_1 in @nodes that follow @node in document order, @nodes if @node is NULL or an empty node-set if @nodes doesn't contain @node.
xmlPushInput_APIName returns  -1 in case of error or the index in the xmlPushInput_APIParam_2 stack.
xmlRelaxNGValidatePushCData_APIParam_1  the RelaxNG validation context.
xmlTextWriterWriteVFormatDTD_APIParam_1  the  xmlTextWriterPtr.
xmlLsOneNode_APIParam_2  the xmlLsOneNode_APIParam_2 to dump.
This routine don't try to do full checking of the link validity but tries to detect and return the appropriate link type.
xmlValidGetPotentialChildren_APIName returns  the number of element in the list, or -1 in case of error.
xmlFreePropList_APIParam_1  the first property in the list.
xmlNewDocNode_APIParam_2 .
UTF8Toisolat1_APIParam_1  a po.
Formats @msg xmlStrPrintf_APIParam_4 places result into @buf.
xmlXPathStringLengthFunction_APIParam_2  the number of arguments.
xmlRelaxNGSetParserErrors_APIParam_1  a Relax-NG validation context.
xmlNanoFTPList_APIParam_2  the user xmlNanoFTPList_APIParam_2.
xmlListRemoveFirst_APIParam_2  list xmlListRemoveFirst_APIParam_2.
xmlStrVPrintf_APIParam_3  the message with printf formatting.
Create a new  xmlXPathObjectPtr  of type boolean and of value @val.
ftpListCallback_APIParam_10  the ftpListCallback_APIParam_10.
nbLoca.
Implement the namespace-uri_APIName XPath function string namespace-uri(node-set?)
xmlAddSibling_APIParam_1  the child node.
xmlNodeAddContentLen_APIParam_2  extra xmlNodeAddContentLen_APIParam_2.
Generic front-end for the encoding xmlCharEncInFunc_APIParam_1 input function.
xmlC14NDocSaveTo_APIName returns  non-negative value on success or a negative value on fail.
xmlRelaxNGSetValidStructuredErrors_APIParam_1  a Relax-NG validation context.
Initialize the default SAX handler.
xmlXPathNodeSetRemove_APIParam_1  the initial node set.
xmlMemRealloc_APIParam_2  an int specifying the xmlMemRealloc_APIParam_2 in byte to allocate.
xmlValidateNamesValue_APIName returns  1 if valid or 0 otherwise.
create a new Catalog.
xmlShellCmd_APIParam_2  a string argument.
xmlNewTextChild_APIParam_2  a. namespace if any xmlNewTextChild_APIParam_3  the xmlNewTextChild_APIParam_3 of the child.
xmlHashLookup2_APIParam_2  the xmlHashLookup2_APIParam_2 of the userdata.
xmlRegExecNextValues_APIParam_2  pointer to the number of accepted.
xmlRegExecCallbacks_APIParam_3  transition data.
parse an XML element, this is highly recursive [39] element ::= EmptyElemTag | STag content ETag [ WFC: Element Type Match ] The Name in an element's end-tag must match the element type in the start-tag.
As a result the SAX callback was generating xmlSAX2IgnorableWhitespace_APIName callbacks instead of characters_APIName one, and when using the DOM output text nodes containing those blanks were not generated.
xmlNewNsProp_APIName returns  a pointer to the  attribute.
xmlHashCopier_APIParam_1  the data in the hash.
Implement the sum_APIName XPath function number sum(node-set) The sum function returns the sum of the values of the nodes in the argument node-set.
xmlListReverseSearch_APIParam_2  a search value.
Implement the position_APIName XPath function number position_APIName The position function returns the position of the context node in the context node list.
xmlRelaxParserSetFlag_APIParam_2  a set of xmlRelaxParserSetFlag_APIParam_2 values.
xmlSAX2InternalSubset_APIParam_1  the user data (XML parser context).
Find all the strings that appears at the start of the languages accepted by @exp and store them in @list.
xmlCopyAttributeTable_APIParam_1  An  attribute  xmlCopyAttributeTable_APIParam_1.
Set the xmlXIncludeSetFlags_APIParam_2 used for further processing of XML resources.
Callback to free data from a hash.
xmlRegExecPushString_APIName returns  1 if the regexp reached a final state, 0 if non-final, and a negative xmlRegExecPushString_APIParam_2 in case of error.
xmlHashDeallocator_APIParam_1  the data in the hash.
xmlDOMWrapReconcileNamespaces_APIParam_3  option flags.
xmlListEnd_APIName returns  the last element in the list, or NULL.
xmlPopInputCallbacks_APIName returns  the number of input callback registered or -1 in case of error.
xmlShellValidate_APIParam_3  unused.
xmlNewIOInputStream_APIParam_1  an XML parser context.
xmlValidateDtd_APIParam_3  a xmlValidateDtd_APIParam_3 instance.
Try to validate a single element and it's attributes, basically it does the following checks as described by the XML-1.0 recommendation: - [ VC: Element Valid ] - [ VC: Required Attribute ] Then call xmlValidateOneAttribute_APIName for each  attribute  present.
xmlReadFd_APIParam_1  an open file descriptor.
xmlXPathFuncLookupFunc_APIParam_1  an XPath context.
xmlNanoFTPGetResponse_APIName returns  the code number.
xmlDelEncodingAlias_APIName returns  0 in case of success, -1 in case of error.
Otherwise the function will act as if it has been given an attribute-node.
xmlC14NDocSave_APIParam_5  include comments in the result (!=0) or not (==0).
xmlMemDisplayLast_APIParam_2  the amount of memory to dump.
xmlSAXParseEntity_APIParam_1  the SAX handler block.
xmlRegisterCharEncodingHandler_APIParam_1  the  xmlCharEncodingHandlerPtr  xmlRegisterCharEncodingHandler_APIParam_1 block.
xmlHasProp_APIParam_1  the xmlHasProp_APIParam_1.
check the CData parsed for validation in the current stack.
xmlGetNsProp_APIName returns  the  attribute  value or NULL if not found.
xmlGetNoNsProp_APIParam_1  the xmlGetNoNsProp_APIParam_1.
xmlHashAddEntry_APIName returns  0 the addition succeeded and -1 in case of error.
xmlTextReaderConstNamespaceUri_APIParam_1  the  xmlTextReaderPtr  used.
xmlNanoFTPGetConnection_APIName returns  -1 incase of error, 0 otherwise.
xmlNodeBufGetContent_APIParam_1  a xmlNodeBufGetContent_APIParam_1.
Use xmlNewDocRawNode_APIName if you don't need entities support.
xmlNodeSetContent_APIParam_1  the node being modified.
xmlTextReaderSetup_APIParam_5  a combination of  xmlParserOption.
Skip to the node following the current one in document order while avoiding the subtree if any.
xmlValidateNamesValue_APIParam_1  an Names xmlValidateNamesValue_APIParam_1.
xmlSetNs_APIParam_1  a xmlSetNs_APIParam_1 in the document.
Applies the 5 normalization steps to a xmlNormalizeURIPath_APIParam_1 string--that is, RFC 2396 Section 5.2, steps 6.c through 6.g.
xmlParserHandleReference_APIParam_1  the parser context.
Close the connection and both control and transport.
xmlSchemaValueGetAsBoolean_APIName returns  1 if true and 0 if false, or in case of an error.
xmlTextReaderConstEncoding_APIName returns  a string containing the encoding of the document or NULL in case of error.
xmlXPathWrapCString_APIParam_1  the char * value.
xmlTextWriterEndElement_APIParam_1  the  xmlTextWriterPtr.
xmlBuildURI_APIParam_1  the xmlBuildURI_APIParam_1 instance found in the document.
xmlSetBufferAllocationScheme_APIParam_1  allocation method to use.
A callback for the  xmlNanoFTPList  command.
xmlCtxtReadDoc_APIParam_2  a pointer to a zero terminated string.
Implements the XML shell This allow to load, validate, view, modify and save a document using a environment similar to a UNIX commandline.
xmlValidNormalizeAttributeValue_APIParam_3  the  attribute  xmlValidNormalizeAttributeValue_APIParam_3.
Implements the XML shell function "cat" dumps the serialization xmlShellCat_APIParam_3 content (XML or HTML).
xmlTextReaderGetErrorHandler_APIParam_2  the callback function or NULL is no callback has been registered.
Does this document has an external subset.
xmlBufShrink_APIParam_1  the buffer to dump.
Start an xml element with namespace support.
xmlTextWriterStartDTDAttlist_APIParam_2  the xmlTextWriterStartDTDAttlist_APIParam_2 of the DTD ATTLIST.
xmlSearchNsByHref_APIParam_1  the document.
xmlXPathCastNumberToString_APIParam_1  a number.
xmlSAX2InitDocbDefaultSAXHandler_APIParam_1  the SAX handler.
xmlValidateAttributeValue_APIName returns  1 if valid or 0 otherwise.
xmlShellBase_APIParam_2  unused.
xmlTextReaderSetParserProp_APIParam_1  the  xmlTextReaderPtr  used.
xmlXPtrNewRange_APIParam_1  the starting node.
xmlHashCopier_APIName returns  a copy of the data or NULL in case of error.
startDocumentSAXFunc_APIParam_1  the user data (XML parser context).
xmlSAX2StartElementNs_APIParam_6  number of namespace definitions on that node xmlSAX2StartElementNs_APIParam_6  pointer to the array of prefix/URI pairs namespace definitions.
xmlCharEncOutFunc_APIName returns  the number of byte written if success, or -1 general error -2 if the transcoding fails (for *in is not valid utf8 string or the result of transformation can't fit into the encoding we want), or.
xmlCopyProp_APIParam_2  the  attribute.
If there is a character in the second argument string with no character at a corresponding position in the third argument string (because the second argument string is longer than the third argument string), then occurrences of that character in the first argument string are removed.
Note that only one of ftpListCallback_APIParam_8 and ftpListCallback_APIParam_10;minute are specified.
xmlRelaxParserSetFlag_APIParam_1  a RelaxNG parser context.
[30] Number ::= Digits ('.'
xlinkSimpleLinkFunk_APIParam_3  the target of the link.
xmlTextWriterWriteVFormatComment_APIParam_2  xmlTextWriterWriteVFormatComment_APIParam_2 string (see printf).
xmlFreeNs_APIParam_1  the namespace pointer.
xmlListDataCompare_APIParam_2  the second data.
xmlXPtrNewContext_APIParam_3  the element from which a user or program initiated traversal of the link, or NULL.
isolat1ToUTF8_APIName returns  the number of bytes written if success, or -1 otherwise The value of @inlen after return is the number of octets consumed if the return value is positive, else unpredictable.
xmlTextWriterWriteVFormatAttribute_APIParam_2  attribute  xmlTextWriterWriteVFormatAttribute_APIParam_2.
xmlModuleOpen_APIParam_2  a set of  xmlModuleOption.
xmlTextWriterStartAttribute_APIParam_2  element xmlTextWriterStartAttribute_APIParam_2.
Create a document saving context serializing to a file descriptor with the xmlSaveToFd_APIParam_2 and the xmlSaveToFd_APIParam_3 given.
xmlNewDtd_APIParam_2  the DTD xmlNewDtd_APIParam_2.
xmlTextReaderGetParserProp_APIParam_1  the  xmlTextReaderPtr  used.
xlinkExtendedLinkFunk_APIParam_1  user data pointer.
xmlGetDtdQAttrDesc_APIParam_2  the element.
Hmm.
Extract the value of a xmlSchemaGetFacetValueAsULong_APIParam_1.
htmlDocContentDumpFormatOutput_APIParam_3  the htmlDocContentDumpFormatOutput_APIParam_3 string.
Dump an HTML document to a file.
xmlXIncludeProcessTree_APIParam_1  a node in an XML document.
xmlXPathLocalNameFunction_APIParam_2  the number of arguments.
xmlTextReaderReadString_APIName returns  a string containing the contents of the Element or Text node, or NULL if the xmlTextReaderReadString_APIParam_1 is positioned on any other type of node.
Moves the position of the current instance to the  attribute  with the specified index relative to the containing element.
xmlTextReaderMoveToFirstAttribute_APIParam_1  the  xmlTextReaderPtr  used.
xmlNanoFTPProxy_APIParam_3  the proxy xmlNanoFTPProxy_APIParam_3 name.
This can also act as a reset.
xmlRegExecErrInfo_APIParam_1  a regexp execution context generating an error.
warningSAXFunc_APIParam_2  warningSAXFunc_APIParam_3 message to display/transmit warningSAXFunc_APIParam_3  extra parameters warningSAXFunc_APIParam_3 the message display.
xmlGetDtdQAttrDesc_APIName returns  the  xmlAttributePtr  if found or NULL.
nodePop_APIName returns  the node just removed.
Build a node list tree copy of the XPointer result.
 xmlThrDefTreeIndentString_APIParam_1 .
A conversion function is associated to a xmlXPathConvertFunc_APIParam_2 and used to cast the new xmlXPathConvertFunc_APIParam_2 to primitive values.
xmlXPtrNewRangeNodes_APIParam_2  the ending node.
Generic front-end for encoding xmlCharEncCloseFunc_APIParam_1 close function.
xmlSchematronValidityErrorFunc_APIParam_2  xmlSchematronValidityErrorFunc_APIParam_3 message xmlSchematronValidityErrorFunc_APIParam_3  extra arguments.
Get the atom associated to the range (@subset){@min, @max} Note that @subset is consumed in the operation, to keep an handle on it use xmlExpRef_APIName and use xmlExpFree_APIName to release it, this is true even in case of failure (unless xmlExpNewRange_APIParam_1 == NULL).
xmlXPtrLocationSetRemove_APIParam_2  the index to remove.
xmlNodeGetBase_APIParam_2  the node being checked.
xmlXPathPopBoolean_APIParam_1  an XPath parser context.
Start an xml comment.
xmlGetDocCompressMode_APIParam_1  the document.
xmlPatterncompile_APIParam_2  an optional dictionary for interned strings.
xmlTextReaderErrorFunc_APIParam_4  a xmlTextReaderErrorFunc_APIParam_4 indicating where the error occurred.
Name)* S? ')'
xmlCatalogSetDebug_APIName returns  the previous value of the catalog debugging xmlCatalogSetDebug_APIParam_1.
xmlRemoveRef_APIName returns  -1 if the lookup failed and 0 otherwise.
xmlFreeDocElementContent_APIParam_2  the element content tree to free.
Dump an XML document to an I/O buffer.
xmlParserInputShrink_APIParam_1  an XML parser input.
xmlTextWriterWriteVFormatPI_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlTextWriterWriteVFormatDTDInternalEntity_APIParam_2  TRUE if this is a parameter entity, FALSE if not.
xmlParseChunk_APIParam_2  an char array.
xmlAutomataNewOnceTrans_APIParam_4  the input string associated xmlAutomataNewOnceTrans_APIParam_3 that transition.
xmlBufferEmpty_APIParam_1  the buffer.
This function try to open a connection to the indicated resource via HTTP using the given @method, adding the given extra xmlNanoHTTPMethodRedir_APIParam_6 and the xmlNanoHTTPMethodRedir_APIParam_3 buffer for the request content.
Search the DTD for the description of this notation.
xmlDumpNotationDecl_APIParam_1  the XML buffer output.
xmlStrdup_APIName returns  a new  xmlChar  * or NULL.
xmlParseVersionNum_APIName returns  the string giving the XML version number, or NULL.
xmlTextWriterWriteDTDExternalEntityContents_APIParam_3  the system identifier, which is the URI of the DTD.
xmlCatalogRemove_APIName returns  the number of entries removed if successful, -1 otherwise.
xmlCopyChar_APIParam_3  the char value.
xmlNewCharEncodingHandler_APIParam_2  the  xmlCharEncodingInputFunc  to read that encoding.
skip all blanks character found at that point in the input streams.
xmlPatternFromRoot_APIParam_1  the precompiled pattern.
The free operations free the data associated to the xmlModuleFree_APIParam_1 but does not unload the associated shared library which may still be in use.
xmlSAXUserParseFile_APIName returns  0 in case of success or a error number otherwise.
The >= comparison will be true if and only if the first number is greater than or equal to the second number.
xmlOutputBufferWrite_APIParam_2  the size in bytes of the array.
Initialize the default XML Schemas type library.
xmlTextReaderMoveToNextAttribute_APIParam_1  the  xmlTextReaderPtr  used.
xmlDebugDumpAttr_APIParam_1  the FILE * for the xmlDebugDumpAttr_APIParam_1.
However the parsed document in ctxt->myDoc is not freed.
xmlTextReaderSchemaValidate_APIName returns  0 in case the schemas validation could be (de)activated and -1 in case of error.
xmlURIEscapeStr_APIParam_1  string to escape.
xmlExpNewSeq_APIParam_2  xmlExpNewSeq_APIParam_2 expression.
xmlXPathFunctionLookupNS_APIName returns  the  xmlXPathFunction  or NULL if not found.
xmlCopyNotationTable_APIParam_1  A notation xmlCopyNotationTable_APIParam_1.
xmlParserError_APIParam_2  xmlParserError_APIParam_3 message to display/transmit xmlParserError_APIParam_3  extra parameters xmlParserError_APIParam_3 the message display.
xmlCatalogSetDefaultPrefer_APIName returns  the previous value of the default preference for delegation.
xmlIsID_APIParam_2  the element carrying the.
xmlXPathRegisteredFuncsCleanup_APIParam_1  the XPath context.
xmlTextWriterWriteDTDExternalEntityContents_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
Free up an  xmlXPathParserContext.
xmlDebugDumpAttrList_APIParam_3  the indentation level.
xmlXIncludeProcessTreeFlags_APIParam_1  a node in an XML document.
xmlStreamPush_APIParam_1  the xmlStreamPush_APIParam_1 context.
Check the minimum depth reachable by a pattern, 0 mean the / or .
xmlSchemaSetValidOptions_APIParam_2  a combination of  xmlSchemaValidOption.
Allocates and initializes a new DOM-wrapper context.
xmlParseAttValue_APIName returns  the AttValue parsed or NULL.
xmlNewDocText_APIName returns  a pointer to the new node object.
To traverse an axis, the engine calls the first time with xmlXPathAxisFunc_APIParam_2 == NULL and repeat until the function returns NULL indicating the end of the axis traversal.
xmlFreeElementContent_APIParam_1  the element content tree to free.
xmlListWalker_APIParam_1  the xmlListWalker_APIParam_1 found in the list.
Replace the xmlNodeSetContent_APIParam_2 of a node.
valuePop_APIParam_1  an XPath evaluation context.
parse a general parsed entity An external general parsed entity is well-formed if it matches the production labeled extParsedEnt.
xmlCharInRange_APIName returns  true if character valid, false otherwise.
The close operations unload the associated xmlModuleClose_APIParam_1 and free the data associated to the xmlModuleClose_APIParam_1.
xmlDictSetLimit_APIParam_2  the xmlDictSetLimit_APIParam_2 in bytes.
In the case the document is not Well Formed, an attempt to build a tree is tried anyway.
htmlCtxtReadIO_APIParam_5  the base htmlCtxtReadIO_APIParam_5 to use for the document.
xmlAutomataSetFinalState_APIName returns  0 or -1 in case of error.
Creation of a new text node with an extra parameter for the content's length.
xmlNanoHTTPRedir_APIParam_1  the HTTP context.
xmlXIncludeProcessNode_APIParam_1  an existing XInclude context.
Find the userdata specified by the QName @prefix:@name/@name.
xmlDebugDumpNode_APIParam_3  the indentation level.
Free an element content structure.
Additional cleanup for multi-threading.
xmlSchematronParse_APIName returns  the internal XML Schematron structure built from the resource or NULL in case of error.
xmlTextMerge_APIParam_2  the xmlTextMerge_APIParam_2 text node being merged.
C.f.
xmlPedanticParserDefault_APIParam_1  int 0 or 1. xmlPedanticParserDefault_APIName returns  the last value for 0 for no substitution, 1 for substitution.
if xmlBufferAdd_APIParam_3 == -1, the length of xmlBufferAdd_APIParam_2 is recomputed.
Does this document has an internal subset.
xmlStrsub_APIName returns  the  xmlChar  * for the first occurrence or NULL.
xmlSAX2EndElement_APIParam_2  The element xmlSAX2EndElement_APIParam_2.
htmlCtxtReadDoc_APIParam_3  the base htmlCtxtReadDoc_APIParam_3 to use for the document.
xmlNodeListGetRawString_APIName returns  a pointer to the string copy, the caller must free it with xmlFree_APIName.
xmlTextWriterSetIndentString_APIName returns  -1 on error or 0 otherwise.
htmlReadDoc_APIName returns  the resulting document tree.
xmlTextReaderSetParserProp_APIParam_2  the  xmlParserProperties  to set.
xmlCtxtUseOptions_APIParam_2  a combination of  xmlParserOption.
errorSAXFunc_APIParam_1 errorSAXFunc_APIParam_3 XML parser context.
xmlReaderForFd_APIParam_4  a combination of  xmlParserOption.
xmlNodeGetBase_APIName returns  a pointer to the base URL, or NULL if not found It's up to the caller to free the memory with xmlFree_APIName.
xmlC14NDocSave_APIParam_1  the XML document for canonization.
section 4.1.1 of the spec Values accepted are  XML_CATA_PREFER_PUBLIC  or  XML_CATA_PREFER_SYSTEM.
xmlReaderNewIO_APIParam_6  the document xmlReaderNewIO_APIParam_6, or NULL.
Check whether the character is allowed by the production [84] Letter ::= BaseChar | Ideographic.
xmlParseCtxtExternalEntity_APIParam_1  the existing parsing context.
xmlSAXParseMemoryWithData_APIParam_4  work in xmlSAXParseMemoryWithData_APIParam_4 mode, i.e.
xmlValidateElement_APIName returns  1 if valid or 0 otherwise.
xmlPatternGetStreamCtxt_APIName should work.
xlinkExtendedLinkSetFunk_APIParam_5  pointer to the array of locator xlinkExtendedLinkSetFunk_APIParam_5.
Indicate the maximum number of input a expression can accept.
xmlParseInNodeContext_APIParam_4  a combination of  xmlParserOption.
xmlThrDefSaveNoEmptyTags_APIParam_1 .
xmlAutomataNewCountTrans_APIParam_7  xmlAutomataNewCountTrans_APIParam_7 associated xmlAutomataNewCountTrans_APIParam_3 the transition.
xmlMemMalloc_APIName returns  a pointer to the allocated area or NULL in case of lack of memory.
xmlValidateNMToken_APIParam_1  the xmlValidateNMToken_APIParam_1 to check.
xmlAddRef_APIParam_2  pointer to the document.
xmlSetDocCompressMode_APIParam_1  the document.
'#PCDATA' (S?
xmlTextReaderStandalone_APIName returns  1 if the document was declared to be standalone, 0 if it was declared to be not standalone, or -1 if the document did not specify its standalone status or in case of error.
resolveEntitySAXFunc_APIParam_3  The system ID of the entity.
xmlSaveFile_APIName returns  the number of bytes written or -1 in case of failure.
xmlThrDefGetWarningsDefaultValue_APIName returns .
htmlDocDumpMemoryFormat_APIParam_4  should formatting spaces been added.
xmlRelaxNGValidateDoc_APIParam_2  a parsed document tree.
htmlAttrAllowed_APIParam_1  HTML element.
Signature of an error callback from an xmlSchemaValidityErrorFunc_APIParam_3 validation.
Finds the first closest next sibling of the xmlNextElementSibling_APIParam_1 which is an element xmlNextElementSibling_APIParam_1.
Other values for @options have currently no effect.
Add the @name to the dictionary @dict if not present.
Note that if @len < 0 then this is an API error and NULL will be returned.
xmlDOMWrapRemoveNode_APIName returns  0 on success, 1 if the xmlDOMWrapRemoveNode_APIParam_3 is not supported, -1 on API and internal errors.
xmlXPathDebugDumpCompExpr_APIParam_2  the precompiled XPath expression.
xmlNewTextChild_APIName returns  a pointer to the new node object.
xmlParsePEReference_APIParam_1  an XML parser context.
xmlXPathNextChild_APIParam_2  the current node in the traversal.
xmlHashAddEntry3_APIParam_5.
xmlDocDumpFormatMemory_APIParam_4  should formatting spaces been added.
xmlAutomataGetInitState_APIName returns  the initial state of the automata.
xmlTextWriterSetIndent_APIName returns  -1 on error or 0 otherwise.
xmlXPathEvalPredicate_APIName returns  1 if predicate is true, 0 otherwise.
htmlCreatePushParserCtxt_APIName returns  the new parser context or NULL.
namespace if any xmlNewDocRawNode_APIParam_3  the node xmlNewDocRawNode_APIParam_3.
xmlSchemaGetPredefinedType_APIParam_2  the URI of the namespace usually "http//www.w3.org/2001/XMLSchema".
xmlSAX2GetPublicId_APIName returns  a  xmlChar  *.
xmlDictReference_APIName returns  0 in case of success and -1 in case of error.
Start an xml CDATA section.
If htmlSAXParseDoc_APIParam_3 is NULL, fallback to the default DOM behavior and return a tree.
xmlParseExternalEntity_APIParam_3  The user data returned on SAX callbacks (possibly NULL).
xmlValidGetValidElements_APIParam_3  an array to store the list of child xmlValidGetValidElements_APIParam_3.
Create a new  xmlXPathObjectPtr  of type LocationSet and initialize it with the single range made of the two nodes @start and @end.
xmlSAXParseMemory_APIParam_1  the SAX handler block.
xmlOutputBufferCreateFilename_APIName returns  the new output or NULL.
xmlRelaxNGValidatePopElement_APIName returns  1 if no validation problem was found or 0 otherwise.
xmlNewComment_APIParam_1  the  comment  xmlNewComment_APIParam_1.
If @ctxt is NULL, then XML Schema validation is deactivated.
[38] NodeType ::= 'comment' | 'text' | 'processing-instruction' | 'node'.
xmlTextReaderSetup_APIName returns  0 in case of success and -1 in case of error.
xmlParserInputBufferCreateMem_APIName returns  the new parser input or NULL.
compute the length of an UTF8 string, it doesn't do a full UTF8 checking of the content of the string.
htmlSetMetaEncoding_APIParam_1  the document.
Allows to set a locator function to the validation context, which will be used to provide file and line information since those are not provided as part of the SAX validation flow Setting @f to NULL disable the locator.
xmlTextReaderName_APIParam_1  the  xmlTextReaderPtr  used.
xmlTextWriterFullEndElement_APIParam_1  the  xmlTextWriterPtr.
startElementNsSAX2Func_APIParam_6  number of namespace definitions on that node startElementNsSAX2Func_APIParam_6  pointer to the array of prefix/URI pairs namespace definitions.
Initially the parser always keep entity references instead of substituting entity values in the output.
a strndup for array of xmlChar's.
Wraps a string into an XPath object.
xmlExpGetStart_APIParam_4  the allocated length of @list.
xmlParseAttValue_APIParam_1  an XML parser context.
xmlMemSetup_APIParam_4  the strdup_APIName function to use.
xmlStreamPushNode_APIParam_2  the current xmlStreamPushNode_APIParam_2.
xmlRelaxNGSetValidErrors_APIParam_3  the warning function xmlRelaxNGSetValidErrors_APIParam_4  the functions context.
xmlReallocLoc_APIParam_3  the xmlReallocLoc_APIParam_3 name or NULL.
Initialization function for the XML parser.
xmlAddRef_APIParam_4  the  attribute  holding the Ref.
xmlSaveToFd_APIParam_3  a set of xmlSaveOptions.
Deallocate all the resources associated to the xmlFreeTextWriter_APIParam_1.
xmlAutomataNewTransition_APIParam_5  xmlAutomataNewTransition_APIParam_5 passed xmlAutomataNewTransition_APIParam_3 the callback function if the transition is activated.
xmlC14NDocSave_APIParam_2  the xmlC14NDocSave_APIParam_2 set to be included in the canonized image or NULL if all document xmlC14NDocSave_APIParam_2 should be included.
xmlNanoHTTPFetch_APIParam_2  the xmlNanoHTTPFetch_APIParam_2 where the content should be saved.
xmlNanoFTPConnectTo_APIName returns  an fTP context or NULL if it failed.
If called before any other catalog routine, allows to override the default shared catalog put in place by xmlInitializeCatalog_APIName;.
xmlMemStrdupLoc_APIParam_3  the xmlMemStrdupLoc_APIParam_3 number.
xmlSetupParserForBuffer_APIParam_2  a  xmlChar  * xmlSetupParserForBuffer_APIParam_2.
xmlXPathIsNaN_APIName returns  1 if the value is a NaN, 0 otherwise.
xmlXPathNodeSetAddUnique_APIName returns  0 in case of success and -1 in case of failure.
Fills up the xmlNodeBufGetContent_APIParam_1 @buffer with this value.
xmlParserInputBufferGrow_APIParam_2  indicative value of the amount of chars to read.
parse an HTML file and build a tree.
Convert all the SGML catalog entries as XML ones.
xmlCtxtReadFile_APIParam_1  an XML parser context.
If @ns is NULL, the newly created element inherits the namespace of @parent.
Determine whether an  attribute  is of type Ref.
xmlTextWriterWriteDTDInternalEntity_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
Dump an HTML document to a file using a given htmlSaveFileEnc_APIParam_3 and formatting returns/spaces are added.
Free the dictionary mutex.
xmlParseBalancedChunkMemory_APIParam_2  the SAX handler bloc (possibly NULL).
Search the  attribute  declaring the given xmlGetID_APIParam_2.
xmlSchemaDump_APIParam_1  the file xmlSchemaDump_APIParam_1.
xmlTextWriterWriteFormatDTDAttlist_APIParam_1  xmlTextWriterWriteFormatDTDAttlist_APIParam_4  xmlTextWriterPtr.
Get a streaming context for that pattern Use  xmlFreeStreamCtxt  to free the context.
Append the extra substring to the node xmlNodeAddContentLen_APIParam_2.
xmlXPathPopExternal_APIName returns  the object.
add a new namespace xmlXPathNodeSetAddNs_APIParam_2 to an existing NodeSet.
xmlXPathEvalFunc_APIParam_2  the number of arguments passed to the function.
xmlSAX2GetEntity_APIName returns  the  xmlEntityPtr  if found.
xmlNewDocProp_APIParam_3  the xmlNewDocProp_APIParam_3 of the  attribute.
xmlXPathFalseFunction_APIParam_1  the XPath Parser context.
Note: a first call designed to produce heading info is called with xmlCharEncodingOutputFunc_APIParam_3 = NULL.
Dump a Schema structure.
xmlReaderNewFile_APIParam_1  an XML xmlReaderNewFile_APIParam_1.
xmlUTF8Charcmp_APIParam_2  pointer to second UTF8 char.
xmlListPushFront_APIParam_2  new xmlListPushFront_APIParam_2.
parse an HTML ENTITY references [68] EntityRef ::= '&' Name ';'.
xmlReadMemory_APIParam_2  the xmlReadMemory_APIParam_2 of the array.
xmlNewDocFragment_APIParam_1  the document owning the fragment.
xmlCtxtReadMemory_APIParam_1  an XML parser context.
xmlSAX2InitHtmlDefaultSAXHandler_APIParam_1  the SAX handler.
xmlNamespaceParseNCName_APIParam_1  an XML parser context.
xmlInitializeGlobalState_APIParam_1  a pointer to a newly allocated global state.
xmlTextReaderHasValue_APIParam_1  the  xmlTextReaderPtr  used.
xmlUTF8Strsub_APIParam_3  total number to copy.
xmlIsBaseChar_APIName returns  true if argument valid, false otherwise.
xmlBuildQName_APIParam_1  the Name.
xlinkExtendedLinkFunk_APIParam_13  array of xmllang values for the xlinkExtendedLinkFunk_APIParam_12.
Trickery: parse an XML name but without consuming the input flow Needed for rollback cases.
xmlDumpAttributeDecl_APIParam_2  An  attribute  declaration.
xmlTextWriterWriteVFormatDTDInternalEntity_APIParam_1  the  xmlTextWriterPtr.
xmlParserInputBufferCreateFilename_APIParam_2  the charset encoding if known.
- finite sequences { min, max } - infinite sequences { min, * } There is minimal checkings made especially no checking on strings values.
Call once before processing in case of use in multithreaded programs.
Free up the memory associated to the catalog list.
xmlHashCreate_APIName returns  the newly created object, or NULL if an error occurred.
Write the contents of a DTD external entity.
xmlXPathCastStringToBoolean_APIName returns  the boolean value.
Creation of a new Fragment node.
xmlRegExecPushString2_APIParam_1  a regexp execution context or NULL to indicate the end.
xmlACatalogResolvePublic_APIParam_1  a Catalog.
xmlGetDocCompressMode_APIName returns  0 (uncompressed) to 9 (max compression).
In case we have DTD(s) then this is simple, otherwise we use an heuristic: name Ref (upper or lowercase).
Dumps the tree of the compiled XPath expression.
The original pointers used in the call are restored.
@ The @schema should not be freed until the xmlTextReaderRelaxNGSetSchema_APIParam_1 is deallocated or its use has been deactivated.
Registers a callback for node creation.
Set up the predefined entities.
xmlRegexpCompile_APIName returns  the compiled expression or NULL in case of error.
xmlDocDump_APIName returns  the number of bytes written or -1 in case of failure.
xmlTextWriterWriteBinHex_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
This is a generic signature for the XML shell functions.
xmlXPathNextAncestorOrSelf_APIParam_2  the current node in the traversal.
xmlReaderForIO_APIParam_2  an I/O close function.
xmlValidateOneNamespace_APIParam_3  an element instance.
xmlNewTextChild_APIParam_4  the text xmlNewTextChild_APIParam_4 of the child if any.
Does a binary search of the range table to determine if char is valid.
Register a new entity for this document DTD external subset.
xmlHashLookup_APIName returns  the pointer to the userdata.
xmlValidateNMToken_APIParam_2  allow spaces in front and end of the string.
xmlXPathIsInf_APIName returns  1 vi the value is +Infinite, -1 if -Infinite, 0 otherwise.
xmlCatalogResolvePublic_APIName returns  the resource if found or NULL otherwise, the value returned must be freed by the caller.
Duplicate entries generate errors.
Callback function used to compare 2 data.
xmlC14NDocDumpMemory_APIName returns  the number of bytes written on success or a negative value on fail.
xmlGetDtdQElementDesc_APIName returns  the  xmlElementPtr  if found or NULL.
xmlTextWriterWriteFormatDTDInternalEntity_APIParam_3  xmlTextWriterWriteFormatDTDInternalEntity_APIParam_5 xmlTextWriterWriteFormatDTDInternalEntity_APIParam_3 of xmlTextWriterWriteFormatDTDInternalEntity_APIParam_5 DTD entity.
xmlTextReaderReadState_APIName returns  the state value, or -1 in case of error.
Note that if entities are declared in the external subset or in external parameter entities, a non-validating processor is not obligated to read and process their declarations; for such documents, the rule that an entity must be declared is a well-formedness constraint only if standalone='yes'.
xmlCreateIOParserCtxt_APIParam_2  The user data returned on SAX callbacks.
Retrieve the error callback function and user argument.
xmlHashScanFull3_APIParam_3  a second xmlHashScanFull3_APIParam_2 of the userdata or NULL.
xmlDOMWrapReconcileNamespaces_APIName returns  0 if succeeded, -1 otherwise and on API/internal errors.
xlinkExtendedLinkFunk_APIParam_12 detected on the link xlinkExtendedLinkFunk_APIParam_12 .
xmlStrcasestr_APIParam_2  the  xmlChar  to search (needle).
Parse a well-balanced chunk of an XML document called by the parser The allowed sequence for the Well Balanced Chunk is the one defined by the content production in the XML grammar: [43] content ::= (element | CharData | Reference | CDSect | PI | Comment)*.
xmlSAX2NotationDecl_APIParam_1  the user data (XML parser context).
entityDeclSAXFunc_APIParam_3  the entity entityDeclSAXFunc_APIParam_3.
xmlXPathStringFunction_APIParam_1  the XPath Parser context.
Try to lookup the catalog local  reference  associated to a public ID in that catalog.
xmlXIncludeProcessFlags_APIParam_1  an XML document.
xmlRelaxNGValidateFullElement_APIParam_2  a document instance.
Check if an  attribute  is of content type Script.
xlinkExtendedLinkFunk_APIParam_6  the number of arcs detected on the link.
xmlXIncludeFreeContext_APIParam_1  the XInclude context.
xmlXPathFreeNodeSetList_APIParam_1  an existing NodeSetList object.
xmlListAppend_APIParam_2  the xmlListAppend_APIParam_2.
xmlXPathDifference_APIParam_1  a node-set.
xmlHashQLookup2_APIParam_4  the second xmlHashQLookup2_APIParam_2 of the userdata.
xmlMemShow_APIParam_1  a FILE descriptor used as the output file.
'>' Hence there is actually 3 choices: 'PUBLIC' S PubidLiteral 'PUBLIC' S PubidLiteral S SystemLiteral and 'SYSTEM' S SystemLiteral See the NOTE on xmlParseExternalID_APIName.
xmlSchemaNewQNameValue_APIParam_2  the local name.
xmlSAXParseFileWithData_APIParam_2  the xmlSAXParseFileWithData_APIParam_2.
Get the atom associated to this xmlExpNewAtom_APIParam_2 from that context.
xmlNewGlobalNs_APIParam_3  the xmlNewGlobalNs_APIParam_3 for the namespace.
xmlSchemaValidatePredefinedType_APIName returns  0 if this validates, a positive error code number otherwise and -1 in case of internal or API error.
xmlTextWriterWriteFormatAttribute_APIParam_3  xmlTextWriterWriteFormatAttribute_APIParam_3 string (see printf) xmlTextWriterWriteFormatAttribute_APIParam_4  extra parameters xmlTextWriterWriteFormatAttribute_APIParam_4 the xmlTextWriterWriteFormatAttribute_APIParam_3.
endElementSAXFunc_APIParam_2  The element endElementSAXFunc_APIParam_2.
Converts an XPath object to its number value.
xmlSchemaDump_APIParam_2  a xmlSchemaDump_APIParam_2 structure.
xmlBufferSetAllocationScheme_APIParam_1  the buffer to tune.
xmlCtxtReadIO_APIParam_3  an I/O close function.
xmlReaderNewFd_APIName returns  0 in case of success and -1 in case of error.
htmlReadIO_APIParam_3  an I/O handler.
xmlParseReference_APIParam_1  an XML parser context.
xmlSAX2Comment_APIParam_2  the  xmlSAX2Comment_APIName content.
The caller must free the returned string.
Append a zero terminated string to an XML buffer.
xmlRelaxNGNewMemParserCtxt_APIParam_2  the xmlRelaxNGNewMemParserCtxt_APIParam_2 of the array.
xmlNanoHTTPMethod_APIParam_6  xmlNanoHTTPMethod_APIParam_3 length.
xmlCreateIOParserCtxt_APIParam_1  a SAX handler.
to what catalogs should be accepted.
xmlFreePatternList_APIParam_1  an XSLT xmlFreePatternList_APIParam_1 list.
xmlTextReaderConstEncoding_APIParam_1  the  xmlTextReaderPtr  used.
htmlCtxtReadDoc_APIParam_5  a combination of htmlParserOption(s).
xmlXPathNamespaceURIFunction_APIParam_2  the number of arguments.
htmlSaveFileEnc_APIName returns  the number of byte written or -1 in case of failure.
Write a formatted DTD ATTLIST.
Handle a redefinition of  attribute  error.
xmlValidatePushElement_APIParam_4  the qualified name as appearing in the serialization.
xmlXPathStringFunction_APIParam_2  the number of arguments.
xmlTextWriterStartPI_APIParam_1  the  xmlTextWriterPtr.
xmlNewDocElementContent_APIParam_2  the subelement xmlNewDocElementContent_APIParam_2 or NULL.
namePop_APIParam_1  an XML parser context.
The defaulted ones are at the end of the array startElementNsSAX2Func_APIParam_9  pointer to the array of (localname/prefix/URI/value/end)  attribute  values.
xmlGetPredefinedEntity_APIName returns  NULL if not, otherwise the entity.
xmlTextWriterWriteFormatElementNS_APIParam_1  xmlTextWriterWriteFormatElementNS_APIParam_6  xmlTextWriterPtr.
Receive the document locator at startup, actually  xmlDefaultSAXLocator  Everything is available on the context, so this is useless in our case.
Gives a pointer to the data currently held in the output buffer.
xmlXPathLeading_APIName returns  the nodes in @nodes1 that precede the first node in @nodes2 in document order, @nodes1 if @nodes2 is NULL or empty or an empty node-set if @nodes1 doesn't contain @nodes2.
xmlHashScan3_APIParam_2  the xmlHashScan3_APIParam_2 o. xmlHashScan3_APIParam_5 the user.
xmlTextWriterWriteFormatAttribute_APIParam_1  xmlTextWriterWriteFormatAttribute_APIParam_4  xmlTextWriterPtr.
xmlOutputOpenCallback_APIName returns  an Output context or NULL in case or error.
This can also be done by using ftp_proxy ftp_proxy_user and ftp_proxy_password environment variables.
htmlSAXParseFile_APIParam_1  the htmlSAXParseFile_APIParam_1.
xmlValidateOneElement_APIName returns  1 if valid or 0 otherwise.
xmlParseFile_APIParam_1  the xmlParseFile_APIParam_1.
xmlDumpAttributeTable_APIParam_1  the XML buffer output.
Tries to open a control connection to the given server/port.
OBSOLETE: to be removed at some point.
inter to an array of bytes to store the UTF-8 result.
htmlSAXParseFile_APIParam_3  the SAX handler block.
xmlBufferCat_APIParam_1  the buffer to add to.
Create a new  xmlNewTextWriter  structure with @doc as output starting at @node.
htmlCtxtReadMemory_APIParam_6  a combination of htmlParserOption(s).
xmlTextWriterWriteVFormatAttribute_APIParam_1  the  xmlTextWriterPtr.
xmlReaderNewDoc_APIParam_4  the document xmlReaderNewDoc_APIParam_4, or NULL.
Currently it just checks for proxy informations, and get the hostname.
Create a new  xmlXPathObjectPtr  of type double and of value @val.
Provides the specified Mime-Type if specified in the HTTP headers.
xmlReplaceNode_APIParam_1  the xmlReplaceNode_APIParam_1 node.
xmlXPathCastNodeSetToNumber_APIParam_1  a node-set.
xmlTextReaderPrefix_APIParam_1  the  xmlTextReaderPtr  used.
xmlSaveClose_APIName returns  the number of byte written or -1 in case of error.
xmlSAX2StartElementNs_APIParam_9  the number of xmlSAX2StartElementNs_APIParam_9 on that node.
Associate a namespace to a xmlSetNs_APIParam_1, a posteriori.
Base URI within Document Content and 5.1.2.
xmlIOFTPOpen_APIName returns  an I/O context or NULL in case of error.
Finds if the expression is nillable, i.e.
xmlGetIntSubset_APIName returns  a pointer to the DTD structure or NULL if not found.
xmlSchemaFreeType_APIParam_1  a schema xmlSchemaFreeType_APIParam_1 structure.
Initialize the memory layer.
NOTE: as a result of this call, the xmlTextReaderCurrentDoc_APIParam_1 will not destroy the associated XML document and calling xmlFreeDoc_APIName on the result is needed once the xmlTextReaderCurrentDoc_APIParam_1 parsing has finished.
xmlXPathStringEvalNumber_APIParam_1  A string to scan.
xmlTextWriterWriteString_APIParam_2  text string.
xmlRegexpExec_APIName returns  1 if it matches, 0 if not and a negative value in case of error.
Existing entry for this tuple will be removed and freed with @f if found.
xmlTextWriterWriteDTDExternalEntity_APIParam_5  the system identifier, which is the URI of the DTD.
Implement the floor_APIName XPath function number floor(number) The floor function returns the largest (closest to positive infinity) number that is not greater than the argument and that is an integer.
Write a DTD entity.
parse an XML Processing Instruction.
xmlOutputBufferCreateFd_APIParam_2  the encoding converter or NULL.
xmlSchemaGetValidErrors_APIParam_2  the error function result.
Take a block of ISO Latin 1 chars isolat1ToUTF8_APIParam_3 and try to convert it to an UTF-8 block of chars isolat1ToUTF8_APIParam_1.
xmlIsExtender_APIParam_1  character to validate.
xmlSAX2GetEntity_APIParam_1  the user data (XML parser context).
Create an XML Schematrons parse context for that memory xmlSchematronNewMemParserCtxt_APIParam_1 expected to contain an XML Schematrons file.
xmlCopyEntitiesTable_APIParam_1  An entity xmlCopyEntitiesTable_APIParam_1.
xmlTextReaderMoveToAttributeNo_APIParam_2  the zero-based index of the  attribute  relative to the containing element.
xmlMemStrdupLoc_APIName returns  a pointer to the new string or NULL if allocation error occurred.
xmlTextWriterWriteElementNS_APIParam_5  element xmlTextWriterWriteElementNS_APIParam_5.
xmlDebugDumpDocumentHead_APIParam_2  the document.
Implements the EXSLT - Sets distinct_APIName function: node-set set:distinct (node-set).
xmlFreeStreamCtxt_APIParam_1  the xmlFreeStreamCtxt_APIParam_1 context.
xmlXPathRegisterNs_APIParam_3  the namespace name.
Whether the node has attributes.
xmlAttrSerializeTxtContent_APIParam_2  the document.
xmlValidateOneAttribute_APIParam_1  the validation context.
xlinkIsLink_APIParam_2 node  the xlinkIsLink_APIParam_2 pointer itself.
Use this function, xmlNewTextChild_APIName, if you need to ensure that reserved XML chars that might appear in @content, such as the ampersand, greater-than or less-than signs, are automatically replaced by their XML escaped entity representations.
This will dump the content of the  attribute  declaration as an XML DTD definition.
xmlNewDocComment_APIParam_1  the document.
Query the number of elements installed in the hash @dict.
Note that it is generally a better coding style to use xmlSAXVersion_APIName to set up the xmlSAXDefaultVersion_APIParam_1 explicitly for a given parsing context.
xmlSwitchEncoding_APIParam_2  the encoding value (number).
xmlRelaxNGParse_APIName returns  the internal XML RelaxNG structure built from the resource or NULL in case of error.
xmlSwitchEncoding_APIParam_1  the parser context.
xmlCopyElementContent_APIParam_1  An element content pointer.
htmlDocContentDumpFormatOutput_APIParam_1  the HTML buffer output.
xmlAddID_APIParam_2  pointer to the document.
Existing userdata for this tuple will be removed and freed with @f. xmlHashRemoveEntry3_APIParam_1  the hash xmlHashRemoveEntry3_APIParam_1.
[0-9]+ at that level.
xmlXPathModValues_APIParam_1  the XPath Parser context.
xmlC14NDocSave_APIName returns  the number of bytes written success or a negative value on fail.
Used to set the debug xmlCatalogSetDebug_APIParam_1 for catalog operation, 0 disable debugging, 1 enable it.
xmlSchemaWhiteSpaceReplace_APIName returns  the new string or NULL if no change was required.
htmlReadIO_APIParam_1  an I/O read function.
xmlReadFile_APIName returns  the resulting document tree.
xmlFreePattern_APIParam_1  an XSLT xmlFreePattern_APIParam_1.
xmlDictQLookup_APIParam_1  the dictionary.
xmlHashAddEntry_APIParam_2  the xmlHashAddEntry_APIParam_2 of the.
xmlAutomataNewCountTrans2_APIName returns  the target state or NULL in case of error.
Set string indentation.
xmlXPtrNewRange_APIName returns  the newly created object.
xmlReadMemory_APIParam_5  a combination of  xmlParserOption.
xmlNewIOInputStream_APIParam_3  the charset encoding if known.
externalSubsetSAXFunc_APIParam_4  the SYSTEM ID (e.g.
xmlRNewMutex_APIName is used to allocate a reentrant mutex for use in synchronizing access to data.
xmlTextReaderMoveToNextAttribute_APIName returns  1 in case of success, -1 in case of error, 0 if not found.
xmlOutputBufferWrite_APIParam_1  a. buffered parser output.
xmlStrndup_APIParam_2  the xmlStrndup_APIParam_2 of @cur.
xmlNewProp_APIParam_1  the holding xmlNewProp_APIParam_1.
xmlThrDefLoadExtDtdDefaultValue_APIName returns .
xmlSAXParseFileWithData_APIParam_4  the userdata.
Create an xmltextReader for a preparsed document.
xmlNewReference_APIParam_2  the  reference  xmlNewReference_APIParam_2, or the  reference  string with & and ;.
xmlListSize_APIName returns  the number of elements in the list or -1 in case of error.
xmlAutomataSetFinalState_APIParam_2  a xmlAutomataSetFinalState_APIParam_2 in this automata.
xmlParseName_APIParam_1  an XML parser context.
xmlXPathRegisterFuncLookup_APIParam_3  the lookup data.
xmlSAX2ElementDecl_APIParam_3  the element xmlSAX2ElementDecl_APIParam_3.
Create a new  xmlXPathContext.
Implements the XML shell function "du" show the structure of the subtree under node @tree If @tree is null, the command works on the current node.
xmlTextWriterWriteAttribute_APIParam_3  attribute  xmlTextWriterWriteAttribute_APIParam_3.
xmlTextWriterSetQuoteChar_APIParam_1  the  xmlTextWriterPtr.
The buffer is reset to an empty content.
The given xmlSchemaNewStringValue_APIParam_2 is consumed and freed with the struct.
xmlNanoFTPGetSocket_APIName returns  the socket for the data connection, or <0 in case of error.
xmlCreateEnumeration_APIParam_1  the enumeration xmlCreateEnumeration_APIParam_1 or NULL.
xmlTextWriterWriteBase64_APIParam_3  the position within the xmlTextWriterWriteBase64_APIParam_2 of the first byte to encode.
xmlCtxtReadMemory_APIParam_6  a combination of  xmlParserOption.
xmlOutputBufferCreateFilenameFunc_APIParam_1  the xmlOutputBufferCreateFilenameFunc_APIParam_1 to write to.
xmlXIncludeProcessFlags_APIParam_2  a set of  xmlParserOption  used for parsing XML includes.
xmlTextWriterWriteDTDEntity_APIParam_3  the xmlTextWriterWriteDTDEntity_APIParam_3 of the DTD entity.
Create a buffered output for the progressive saving of a file If filename is "-' then we use stdout as the output.
xmlNanoFTPConnect_APIName returns  -1 in case of error, 0 otherwise.
xmlBufferLength_APIParam_1  the buffer.
[45] elementdecl ::= '<!ELEMENT' S Name S contentspec S?
xmlParseQuotedString_APIName returns  the string parser or NULL.
Provides the system ID, basically URL or filename e.g.
xmlXPatherror_APIParam_4  the error number.
Creates a new HTML document.
xmlParseBalancedChunkMemoryRecover_APIParam_2  the SAX handler bloc (possibly NULL).
xmlEncodeEntitiesReentrant_APIParam_1  the document containing the string.
xmlXPathConcatFunction_APIParam_2  the number of arguments.
Semi private function used to pass informations to a parser context which are a combination of  xmlRelaxNGParserFlag  .
Do a copy of the document info.
xmlAddElementDecl_APIParam_4  the element xmlAddElementDecl_APIParam_4.
attribute xmlIsID_APIParam_3  the  attribute.
xmlTextWriterStartDTDEntity_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlBufferAddHead_APIName returns  0 successful, a positive error code number otherwise and -1 in case of internal or API error.
xmlXPathNextPrecedingSibling_APIParam_2  the current node in the traversal.
xmlSAX2GetColumnNumber_APIName returns  an int.
Callback: The entity loader, to control the loading of external entities, the application can either: - override this resolveEntity_APIName callback in the SAX block - or better use the xmlSetExternalEntityLoader_APIName function to set up it's own entity resolution routine.
xmlXPtrNewLocationSetNodes_APIParam_1  the xmlXPtrNewLocationSetNodes_APIParam_1 NodePtr value.
xmlHashScannerFull_APIParam_2 in the hash xmlHashScannerFull_APIParam_2  extra scannner xmlHashScannerFull_APIParam_2.
Converts a string to its number value.
PITarget (S (Char* - (Char* '?>' Char*)))?
The local name of the node.
-1 indicates a parameter error.
xmlSchemaValidateListSimpleTypeFacet_APIParam_1  the xmlSchemaValidateListSimpleTypeFacet_APIParam_1 to check.
xmlExpExpDerive_APIName returns  the resulting expression or NULL in case of internal error, the result must be freed.
xmlShellBase_APIParam_3  a xmlShellBase_APIParam_3.
xmlNodeGetContent_APIName returns  a new #xmlChar * or NULL if no content is available.
Receiving some chars from the parser.
xmlRegexpPrint_APIParam_1  the file for the xmlRegexpPrint_APIParam_1 debug.
xmlValidGetPotentialChildren_APIParam_1  an element content tree.
xmlParseExtParsedEnt_APIName returns  0, -1 in case of error.
(Re)Initialize the FTP Proxy context by parsing the xmlNanoFTPScanProxy_APIParam_1 and finding the protocol host port it indicates.
htmlCtxtReadMemory_APIParam_1  an HTML parser context.
xmlSaveToBuffer_APIParam_3  a set of xmlSaveOptions.
xmlOutputBufferCreateBuffer_APIName returns  the new parser output or NULL.
Search in the namespace declaration array of the context for the given namespace name associated to the given xmlXPathNsLookup_APIParam_2.
xmlNanoHTTPOpenRedir_APIParam_1  The xmlNanoHTTPOpenRedir_APIParam_1 to load.
Lookup the HTML htmlTagLookup_APIParam_1 in the ElementTable.
The output is compatible with XPath commands.
xmlNewNsProp_APIParam_2  the.
xmlRelaxNGValidityWarningFunc_APIParam_1  xmlRelaxNGValidityWarningFunc_APIParam_3 validation context.
xmlThrDefLoadExtDtdDefaultValue_APIParam_1 .
Free one attribute, all the content is freed too.
xmlOutputBufferCreateFile_APIParam_2  the encoding converter or NULL.
the caller has to free the object.
xmlXPathHasSameNodes_APIName returns  true (1) if @nodes1 shares any node with @nodes2, false (0) otherwise.
If xmlBuildQName_APIParam_2 is NULL or empty it returns xmlBuildQName_APIParam_1.
Parse the xmlStringGetNodeList_APIParam_2 string and build the node list associated.
| '.'
xmlBuildURI_APIName returns  a new xmlBuildURI_APIParam_1 string (to be freed by the caller) or NULL in case of error.
xmlXIncludeProcessTreeFlagsData_APIName returns  0 if no substitution were done, -1 if some processing failed or the number of substitutions done.
startElementNsSAX2Func_APIParam_9  the number of startElementNsSAX2Func_APIParam_9 on that node.
xmlRegExecPushString2_APIParam_3  the second string token input.
xmlTextWriterStartElementNS_APIParam_1  the  xmlTextWriterPtr.
xmlSaveClose_APIParam_1  a document saving context.
Implements the EXSLT - Sets leading_APIName function: node-set set:leading (node-set, node-set).
xmlNanoHTTPOpen_APIParam_1  The xmlNanoHTTPOpen_APIParam_1 to load.
Search a Ns aliasing a given URI.
xmlRelaxNGSetParserErrors_APIParam_2  the error callback.
It will recurse in SGML CATALOG entries.
Creates a new HTML document without a DTD node if @URI and @ExternalID are NULL.
xmlTextWriterStartCDATA_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlValidateNameValue_APIParam_1  an Name xmlValidateNameValue_APIParam_1.
xmlXPathAxisFunc_APIName returns  the next node in that axis or NULL if at the end of the axis.
xmlXPtrNewCollapsedRange_APIParam_1  the starting and ending node.
xmlRelaxNGFreeValidCtxt_APIParam_1  the schema validation context.
xmlSchemaNewStringValue_APIParam_1  the.
xmlReconciliateNs_APIParam_1  the document.
',' S?
xmlStringCurrentChar_APIName returns  the current char value and its length.
xmlExpGetLanguage_APIParam_1  the.
xmlSAX2ElementDecl_APIParam_1  the user data (XML parser context).
add a new  xmlNodePtr  to an existing NodeSet.
xmlNewElementContent_APIParam_2  the xmlNewElementContent_APIParam_2 of element content decl.
xmlHashQLookup3_APIParam_1  the hash xmlHashQLookup3_APIParam_1.
xmlCtxtReadFd_APIParam_4  the document xmlCtxtReadFd_APIParam_4, or NULL.
parse a notation declaration [82] NotationDecl ::= '<!NOTATION' S Name S (ExternalID | PublicID) S?
xmlFirstElementChild_APIParam_1  the xmlFirstElementChild_APIParam_1 node.
xmlXPathSetContextNode_APIParam_1  the xmlXPathSetContextNode_APIParam_1 to to use as the context xmlXPathSetContextNode_APIParam_1.
xmlSchemaValidateLengthFacet_APIParam_1  the built-in xmlSchemaValidateLengthFacet_APIParam_1.
xmlXPathNewParserContext_APIParam_2  the XPath context.
xmlXPathConvertFunc_APIParam_1  an XPath object.
xmlBufferAdd_APIParam_3  the number of #xmlChar to add.
xmlCatalogResolve_APIName returns  the URI of the resource or NULL if not found, it must be freed by the caller.
create and initialize an empty entities hash table.
The caller must deallocate it !.
xmlStringGetNodeList_APIParam_1  the document.
xmlParseDTD_APIName returns  the resulting  xmlDtdPtr  or NULL in case of error.
xmlListCopy_APIParam_1  the new list.
xmlExpNewAtom_APIParam_2  the atom xmlExpNewAtom_APIParam_2.
xmlNewNs_APIParam_2  the URI associated.
TODO: 1) What to do with XInclude?
This reuses the existing @ctxt parser context.
Create a new  xmlXPathObjectPtr  of type range using 2 Points.
Create a new automata.
xmlTextReaderMoveToAttribute_APIName returns  1 in case of success, -1 in case of error, 0 if not found.
called when a pcdata block has been parsed.
Set the xmlDocSetRootElement_APIParam_2 element of the document (doc->children is a list containing possibly comments, PIs, etc ...).
Create a new input stream based on an  xmlEntityPtr.
xmlHashUpdateEntry2_APIParam_4.
This will dump the content of the element declaration as an XML DTD definition.
htmlNodeDumpFormatOutput_APIParam_4  the htmlNodeDumpFormatOutput_APIParam_4 string.
Use  xmlIsCombiningQ  instead.
xmlSetTreeDoc_APIParam_1  the top element.
xmlXPathRegisterFuncNS_APIParam_2  the.
xmlSchemaValidateSetFilename_APIParam_2  the file name.
Implements the XML shell function "ls" Does an Unix like listing of the given xmlShellList_APIParam_3 (like a directory).
xmlCharEncodingInputFunc_APIParam_2  the length of @out xmlCharEncodingInputFunc_APIParam_3  a pointer to an array of chars xmlCharEncodingInputFunc_APIParam_3 the original encoding.
xmlTextWriterWriteDTDEntity_APIParam_6  the xml notation xmlTextWriterWriteDTDEntity_APIParam_3.
Dumps debug information for the list of element xmlDebugDumpNodeList_APIParam_2, it is recursive.
xmlTextReaderGetAttributeNs_APIParam_3  the namespace URI of the attribute.
xmlStrPrintf_APIParam_1  xmlStrPrintf_APIParam_4 result buffer.
xmlRegexpPrint_APIParam_2  the compiled xmlRegexpPrint_APIParam_2.
xmlParseDoc_APIName returns  the resulting document tree.
xmlXPathNodeEval_APIParam_2  the XPath expression.
xmlXPathNodeSetAddNs_APIParam_2 set xmlXPathNodeSetAddNs_APIParam_2  the hosting xmlXPathNodeSetAddNs_APIParam_2.
htmlSaveFileEnc_APIParam_3  the document htmlSaveFileEnc_APIParam_3.
This function is DEPRECATED.
xmlValidatePopElement_APIParam_1  the validation context.
xmlValidateNCName_APIParam_1  the xmlValidateNCName_APIParam_1 to check.
xmlLoadExternalEntity_APIParam_1  the xmlLoadExternalEntity_APIParam_1 for the entity to load.
xmlRelaxNGSetValidErrors_APIParam_1  a Relax-NG validation context.
Should be a bit more readable and faster than xmlStrcmp_APIName.
xmlXPathIntersection_APIParam_2  a node-set.
xmlXPathFreeContext_APIParam_1  the context to free.
Initialize the context to the root of the document.
xmlXPathRegisterVariable_APIParam_3  the variable xmlXPathRegisterVariable_APIParam_3 or NULL.
Dump an XML document to a file or an URL.
xmlCopyDocElementContent_APIParam_2  An element content pointer.
xmlNanoHTTPOpen_APIParam_2  if available the Content-Type information will be returned at that location.
xlinkExtendedLinkSetFunk_APIParam_6  the number of.
xmlHashUpdateEntry3_APIParam_4  a third xmlHashUpdateEntry3_APIParam_2 of the xmlHashUpdateEntry3_APIParam_5 userdata  a pointer to the xmlHashUpdateEntry3_APIParam_5 xmlHashUpdateEntry3_APIParam_6  the deallocator function for replaced item (if any).
xmlMemStrdupLoc_APIParam_2  the xmlMemStrdupLoc_APIParam_2 name or NULL.
Also check VC: Standalone Document Declaration in P32, and update ctxt->valid accordingly.
htmlNodeDumpFormatOutput_APIParam_1  the HTML buffer output.
xmlValidateAttributeDecl_APIName [ VC: Fixed Attribute Default ] if an  attribute  has a default xmlParseDefaultDecl_APIParam_2 declared with the #FIXED keyword, instances of that  attribute  must match the default xmlParseDefaultDecl_APIParam_2.
xmlHashAddEntry_APIParam_1  the hash xmlHashAddEntry_APIParam_1.
include all the elements of the second list in the first one and clear the second list.
xmlParseDoc_APIParam_1  a pointer to an array of  xmlChar.
Build/extend a list of potential children allowed by the content tree.
WARNING: This one is intended to be expanded for other string based types.
xmlXPathRegisterVariableLookup_APIParam_3  the lookup xmlXPathRegisterVariableLookup_APIParam_3.
Dump an XML/HTML node, recursive behaviour, children are printed too.
xmlReadIO_APIName returns  the resulting document tree.
Used only when parsing entities references.
xmlXPathTranslateFunction_APIParam_2  the number of arguments.
Cleanup the last global error registered.
xmlXPathDebugDumpObject_APIParam_1  the FILE * to dump the xmlXPathDebugDumpObject_APIParam_1.
xmlXPathRegisterFunc_APIName returns  0 in case of success, -1 in case of error.
Allows to set the preference between public and system for deletion in XML Catalog resolution.
xmlCopyEnumeration_APIName returns  the  xmlEnumerationPtr  just created or NULL in case of error.
xmlNoNetExternalEntityLoader_APIParam_2  the System xmlNoNetExternalEntityLoader_APIParam_2 for the entity to load.
xmlNanoFTPGet_APIParam_1  an FTP context.
xmlParseEnumeratedType_APIName returns  XML_ATTRIBUTE_ENUMERATION  or  XML_ATTRIBUTE_NOTATION.
xmlRemoveID_APIParam_1  the document.
xmlSchemaGetBuiltInType_APIName returns  the xmlSchemaGetBuiltInType_APIParam_1 if found, NULL otherwise.
Base URI from the Encapsulating Entity However it does not return the document base (5.1.3), use doc->URL in this case.
xmlXPtrFreeLocationSet_APIParam_1  the  xmlLocationSetPtr  to free.
Uses xmlStrdup_APIName to make copy of @name.
The xml:lang scope within which the node resides.
xmlRegisterInputCallbacks_APIParam_4  the  xmlInputCloseCallback.
'>' [53] AttDef ::= S Name S AttType S DefaultDecl.
xmlSAX2SetDocumentLocator_APIParam_1  the user data (XML parser context).
End an xml DTD element.
xmlFreeProp_APIParam_1  an  attribute.
Provides the public ID e.g.
xmlValidateOneNamespace_APIName returns  1 if valid or 0 otherwise.
a strndup for array of UTF8's.
xmlReallocFunc_APIName returns  a pointer to the newly reallocated block or NULL in case of error.
xmlIsBlankNode_APIName returns  1 yes, 0 no.
Pops the top parser input from the input stack.
xmlParseDocument_APIParam_1  an XML parser context.
xmlAddAttributeDecl_APIParam_5  the  attribute  namespace prefix.
xmlXPathNewParserContext_APIParam_1  the XPath expression.
xmlXPathConvertFunc_APIName returns  -1 in case of error, 0 otherwise.
xmlAutomataNewOnceTrans_APIParam_7  xmlAutomataNewOnceTrans_APIParam_7 associated xmlAutomataNewOnceTrans_APIParam_3 the transition.
xmlMemSetup_APIParam_2  the malloc_APIName function to use.
Creation of a new DTD for the external subset.
Pushes a new XPath object on top of the valuePush_APIParam_2 stack.
xmlXPathPopNumber_APIParam_1  an XPath parser context.
entityDeclSAXFunc_APIParam_6  the entity value (without processing).
Do a complete resolution lookup of an xmlCatalogResolveURI_APIParam_1.
tries to read not Well Formed documents.
Should be like http://myproxy/ or http://myproxy:3128/ A NULL xmlNanoHTTPScanProxy_APIParam_1 cleans up proxy informations.
xmlPatternMatch_APIName returns  1 if it matches, 0 if it doesn't and -1 in case of failure.
xmlBufferCreateStatic_APIParam_1  the memory area.
inputPush_APIName returns  -1 in case of error, the index in the stack otherwise.
If stateful this should also initialize the encoder state.
xmlDocDumpMemoryEnc_APIParam_3  Length of the generated XML text.
xmlUTF8Strsub_APIParam_1  a sequence of UTF-8 encoded bytes.
xmlHashQLookup3_APIParam_3  the xmlHashQLookup3_APIParam_3 of the userdata.
And @ctx will be passed as first argument to @handler One can simply force messages to be emitted to another FILE * than stderr by setting @ctx to this file handle and @handler to NULL.
xmlCreateIntSubset_APIName returns  a pointer to the new DTD structure.
xmlSearchNsByHref_APIParam_2  the current xmlSearchNsByHref_APIParam_2.
xmlParseExternalID_APIName returns  the function returns SystemLiteral and in the second case xmlParseExternalID_APIParam_2 receives PubidLiteral, is xmlParseExternalID_APIParam_3 is off it is possible to return NULL and have xmlParseExternalID_APIParam_2 set.
Create a parser context for using the XML parser with an existing I/O stream.
Add an entry in the catalog, it may overwrite existing but different entries.
xmlAddAttributeDecl_APIParam_4 name  the  attribute  xmlAddAttributeDecl_APIParam_4.
The value of @inlen after return is the number of octets consumed if the return value is positive, else unpredictiable.
xmlXPathCastToString_APIName returns  the allocated string value of the object, NULL in case of error.
xmlInitThreads_APIName is used to to initialize all the thread related data of the libxml2 library.
namespace xmlTextWriterStartElementNS_APIParam_2 or NULL xmlTextWriterStartElementNS_APIParam_3  element local xmlTextWriterStartElementNS_APIParam_3.
xmlTextWriterWriteDTDExternalEntityContents_APIParam_1  the  xmlTextWriterPtr.
Please see xmlURIFromPath in uri.c for a better solution.
xmlCopyDoc_APIParam_2  if not zero do a xmlCopyDoc_APIParam_2 copy.
Override the default memory access functions with a new set This has to be called before any other libxml routines !
By default, during initialization the default is set to 2.
xmlXPtrNewRangePoints_APIParam_2  the ending point.
If @format is set then the document will be indented on output.
Traversal function for the "self" direction The self axis contains just the context node itself.
xmlAutomataNewNegTrans_APIName returns  the target state or NULL in case of error.
Free the hash @table and its contents.
xlinkSimpleLinkFunk_APIParam_4  the xlinkSimpleLinkFunk_APIParam_4 string.
xmlDebugDumpOneNode_APIParam_3  the indentation level.
xmlXPathNormalizeFunction_APIParam_2  the number of arguments.
htmlNewDocNoDtD_APIParam_1  htmlNewDocNoDtD_APIParam_1 for the dtd, or NULL.
xmlDocDumpMemory_APIParam_3  OUT the memory length.
xmlXPathCastToBoolean_APIName returns  the boolean value.
xmlTextWriterWritePI_APIParam_3  PI xmlTextWriterWritePI_APIParam_3.
xmlParseXMLDecl_APIParam_1  an XML parser context.
xmlTextWriterWriteDTDNotation_APIParam_1  the  xmlTextWriterPtr.
xmlNanoFTPGet_APIParam_3  the user xmlNanoFTPGet_APIParam_2 data.
xmlHashScannerFull_APIParam_3  the xmlHashScannerFull_APIParam_3 associated.
Should this be blocked if there was already some allocations done ?.
parse an XML declaration header [23] XMLDecl ::= '<?xml' VersionInfo EncodingDecl?
Update an FTP context by parsing the xmlNanoFTPUpdateURL_APIParam_2 and finding new path it indicates.
xmlSwitchEncoding_APIName returns  0 in case of success, -1 otherwise.
xmlSetNsProp_APIParam_1  the xmlSetNsProp_APIParam_1.
called when the end of an element has been detected.
xmlXPathPopNodeSet_APIName returns  the node-set.
Create a buffered parser input for the progressive parsing for the input from a memory area.
xmlTextWriterWriteFormatDTDElement_APIName returns  xmlTextWriterWriteFormatDTDElement_APIParam_4 bytes written (may be 0 because of buffering) or -1 in case of error.
xmlXPathTrueFunction_APIParam_2  the number of arguments.
this function is deprecated.
xmlParseURIReference_APIParam_1  pointer to an URI.
TODO: what about entities and special chars??.
xmlParseName_APIName returns  the Name parsed or NULL.
UTF8ToHtml_APIParam_2  the length of @out UTF8ToHtml_APIParam_3  a pointer to an array of UTF-8 chars.
parse Reference declarations [66] CharRef ::= '&#' [0-9]+ ';' | '&#x' [0-9a-fA-F]+ ';' [ WFC: Legal Character ] Characters referred to using character references must match the production for Char.
xmlAutomataNewCounterTrans_APIParam_1  an au.
xmlParseCatalogFile_APIName returns  the resulting document tree or NULL in case of error.
xmlNewDocPI_APIParam_3  the PI xmlNewDocPI_APIParam_3.
xmlThrDefParserInputBufferCreateFilenameDefault_APIParam_1 .
xmlListRemoveAll_APIParam_2  list xmlListRemoveAll_APIParam_2.
The string is deallocated with the xmlTextReaderConstXmlVersion_APIParam_1.
xmlXPathRegisterFuncLookup_APIParam_1  the XPath context.
xmlExpCtxtNbNodes_APIName returns  the number of nodes in use or -1 in case of error.
This is needed for example after Copy or Cut and then paste operations.
xmlStreamPushAttr_APIParam_2  the current xmlStreamPushAttr_APIParam_2.
xmlTextReaderGetAttributeNo_APIParam_1  the  xmlTextReaderPtr  used.
xmlXPathVariableLookupNS_APIParam_2  the variable xmlXPathVariableLookupNS_APIParam_2.
That transition is an epsilon transition allowed only when all transitions xmlAutomataNewAllTrans_APIParam_2 the @from node have been activated.
xmlParseFile_APIName returns  the resulting document tree if the file was wellformed, NULL otherwise.
xmlSAX2InternalSubset_APIParam_2  the root element xmlSAX2InternalSubset_APIParam_2.
isolat1ToUTF8_APIParam_4  the length of @in.
xmlAutomataNewEpsilon_APIParam_1  an au.
xmlNodeSetLang_APIParam_1  the node being changed.
xmlOutputBufferClose_APIName returns  the number of byte written or -1 in case of error.
xmlShellDir_APIName returns  0.
Called when the document end has been detected.
Dump an XML node, recursive behaviour, children are printed too.
TODO: remove xmlEncodeEntities, once we are not afraid of breaking binary compatibility People must migrate their code to  xmlEncodeEntitiesReentrant  !
xmlValidNormalizeAttributeValue_APIParam_4  the  attribute  xmlValidNormalizeAttributeValue_APIParam_4.
xmlTextWriterWriteVFormatElement_APIParam_3  xmlTextWriterWriteVFormatElement_APIParam_3 string (see printf).
xmlHashQLookup2_APIParam_1  the hash xmlHashQLookup2_APIParam_1.
xmlSprintfElementContent_APIParam_2  An element table.
xmlSplitQName2_APIName returns  NULL if the xmlSplitQName2_APIParam_1 doesn't have a xmlSplitQName2_APIParam_2.
xmlParseEntityRef_APIName returns  the  xmlEntityPtr  if found, or NULL otherwise.
xmlTextWriterWriteFormatRaw_APIName returns  xmlTextWriterWriteFormatRaw_APIParam_3 bytes written (may be 0 because of buffering) or -1 in case of error.
[ WFC: Entity Declared ] In a document without any DTD, a document with only an internal DTD subset which contains no parameter entity references, or a document with "standalone='yes'", ... ...
xmlXPathCtxtCompile_APIName returns  the  xmlXPathCompExprPtr  resulting from the compilation or NULL.
Push a new element start on the RelaxNG validation stack.
xlinkExtendedLinkFunk_APIParam_11  the number of.
Write a BinHex encoded xml text.
[59] Enumeration ::= '(' S?
WARNING: if your application is multithreaded or has plugin support calling this may crash the application if another thread or a plugin is still using libxml2.
xmlFreeRMutex_APIParam_1  the reentrant mutex.
xmlValidateNotationUse_APIParam_1  the validation context.
xmlXPathCompiledEvalToBoolean_APIParam_1  the compiled XPath expression.
xmlXPtrNewRangeNodePoint_APIParam_2  the ending point.
xmlGetNoNsProp_APIParam_2  the  attribute  xmlGetNoNsProp_APIParam_2.
The implementation is not good, the parser certainly procgressed past what's left in reader->input, and there is an allocation problem.
Evaluate a predicate result for the current node.
xmlHashScan3_APIParam_3  a second xmlHashScan3_APIParam_2 of the userdata or NULL.
User xmlSAXParseMemoryWithData_APIParam_5 (void *) is stored within the parser context in the context's _private member, so it is available nearly everywhere in libxml.
xmlOutputBufferGetContent_APIName returns  a pointer to the data or NULL in case of error.
xmlReaderForIO_APIParam_4  the base xmlReaderForIO_APIParam_4 to use for the document.
xmlSchemaParse_APIParam_1  a schema validation context.
xmlTextWriterWriteFormatDTD_APIParam_4  xmlTextWriterWriteFormatDTD_APIParam_6 system identifier, which is xmlTextWriterWriteFormatDTD_APIParam_6 URI of xmlTextWriterWriteFormatDTD_APIParam_6 xmlTextWriterWriteFormatDTD_APIParam_6.
xmlRelaxNGNewValidCtxt_APIParam_1  a precompiled XML RelaxNGs.
xmlTextReaderSchemaValidateCtxt_APIParam_1  the  xmlTextReaderPtr  used.
xmlCtxtResetPush_APIParam_2  a pointer to an array of chars.
xmlDocCopyNode_APIParam_1  the xmlDocCopyNode_APIParam_1.
xmlCreateIOParserCtxt_APIParam_3  an I/O read function.
xmlTextReaderName_APIName returns  the local name or NULL if not available, if non NULL it need to be freed by the caller.
parse the XML encoding name [81] EncName ::= [A-Za-z] ([A-Za-z0-9._] | '-')*.
xmlSAXParseMemory_APIParam_2  an pointer to a char array.
Front-end for the encoding xmlCharEncFirstLine_APIParam_1 input function, but handle only the very first line, i.e.
Some examples of this operation include: xmlBuildRelativeURI_APIParam_2 = "http://site1.com/docs/book1.html" xmlBuildRelativeURI_APIParam_1 input xmlBuildRelativeURI_APIParam_1 returned docs/pic1.gif pic1.gif docs/img/pic1.gif img/pic1.gif img/pic1.gif ../img/pic1.gif http://site1.com/docs/pic1.gif pic1.gif http://site2.com/docs/pic1.gif http://site2.com/docs/pic1.gif xmlBuildRelativeURI_APIParam_2 = "docs/book1.html" xmlBuildRelativeURI_APIParam_1 input xmlBuildRelativeURI_APIParam_1 returned docs/pic1.gif pic1.gif docs/img/pic1.gif img/pic1.gif img/pic1.gif ../img/pic1.gif http://site1.com/docs/pic1.gif http://site1.com/docs/pic1.gif Note: if the xmlBuildRelativeURI_APIParam_1  reference  is really wierd or complicated, it may be worthwhile to first convert it into a "nice" one by calling  xmlBuildURI  (using 'base') before calling this routine, since this routine (for reasonable efficiency) assumes xmlBuildRelativeURI_APIParam_1 has already been through some validation.
xmlSplitQName_APIParam_1  an XML parser context.
valuePush_APIParam_2  the XPath object.
Open a temporary buffer to collect the document for a subsequent HTTP POST request.
xmlCheckLanguageID_APIName returns  1 if correct 0 otherwise.
xmlNewElementContent_APIParam_1  the subelement xmlNewElementContent_APIParam_1 or NULL.
a malloc_APIName equivalent, with logging of the allocation info.
The language of the context node is determined by the value of the xml:lang  attribute  on the context node, or, if the context node has no xml:lang attribute, by the value of the xml:lang  attribute  on the nearest ancestor of the context node that has an xml:lang attribute.
xmlParseElement_APIParam_1  an XML parser context.
xmlDebugCheckDocument_APIParam_1  the FILE * for the xmlDebugCheckDocument_APIParam_1.
Create a new  xmlNewTextWriter_APIName structure using an  xmlOutputBufferPtr  NOTE: the @out parameter will be deallocated when the writer is closed (if the call succeed.).
namespace definition xmlUnsetNsProp_APIParam_3  the  attribute  xmlUnsetNsProp_APIParam_3.
Create an XML Schematrons validation context based on the given xmlSchematronNewValidCtxt_APIParam_1.
referenceSAXFunc_APIParam_1  the user data (XML parser context).
xmlNewTextWriterDoc_APIParam_2  compress the output?.
xmlNewElementContent_APIName returns  NULL if not, otherwise the new element content structure.
Use RelaxNG schema context to validate the document as it is processed.
htmlNodeDumpOutput_APIParam_4  the htmlNodeDumpOutput_APIParam_4 string.
xmlXPathFuncLookupFunc_APIParam_2  xmlXPathFuncLookupFunc_APIParam_2 of the function.
xmlACatalogResolveSystem_APIParam_2  the system ID string.
Remove the given  attribute  from the ID table maintained internally.
xmlTextReaderPreserve_APIParam_1  the  xmlTextReaderPtr  used.
Use XSD Schema to validate the document as it is processed.
xmlTextWriterEndAttribute_APIParam_1  the  xmlTextWriterPtr.
xmlXPathParseNCName_APIParam_1  the XPath Parser context.
xmlTextReaderRelaxNGSetSchema_APIName returns  0 in case the RelaxNG validation could be (des)activated and -1 in case of error.
xmlOutputOpenCallback_APIParam_1  the xmlOutputOpenCallback_APIParam_1 or URI.
xmlGcMemSetup_APIParam_5  the strdup_APIName function to use.
The caller must also use xmlTextReaderCurrentDoc_APIName to keep an handle on the resulting document once parsing has finished.
xmlSwitchToEncoding_APIParam_2  the encoding xmlSwitchToEncoding_APIParam_2.
xmlValidatePopElement_APIParam_2  a document instance.
xmlNanoHTTPMethodRedir_APIParam_5  the redirected xmlNanoHTTPMethodRedir_APIParam_1 OUT.
xmlTextReaderReadOuterXml_APIName returns  a string containing the node and any XML content, or NULL if the current node cannot be serialized.
A shorthand  reference  to the namespace associated with the node.
This can later be retrieved by using the @name.
xmlParserAddNodeInfo_APIParam_2  a node xmlParserAddNodeInfo_APIParam_2 sequence pointer.
xmlOutputBufferCreateIO_APIParam_2  an I/O close function.
xmlValidateOneAttribute_APIName returns  1 if valid or 0 otherwise.
xmlCopyDtd_APIName returns  a new #xmlDtdPtr, or NULL in case of error.
xmlSaveTree_APIParam_2  the top xmlSaveTree_APIParam_2 of the subtree to save.
UTF8Toisolat1_APIName returns  the number of bytes written if success, -2 if the transcoding fails, or -1 otherwise The value of @inlen after return is the number of octets consumed if the return value is positive, else unpredictable.
[4] NameChar ::= Letter | Digit | '.'
xmlTextWriterWriteFormatCDATA_APIParam_1  xmlTextWriterWriteFormatCDATA_APIParam_3  xmlTextWriterPtr.
Validate an xmlSchemaValidateStream_APIParam_2 based on a flow of SAX event from the parser and forward the events to the @sax handler with the provided @user_data the user provided @sax handler must be a SAX2 one.
Dump an XML document, converting it to the given xmlSaveFileEnc_APIParam_3.
xmlAutomataNewCountedTrans_APIParam_1  an au.
Existing userdata for this tuple will be removed and freed with @f. xmlHashRemoveEntry_APIParam_1  the hash xmlHashRemoveEntry_APIParam_1.
xmlDOMWrapRemoveNode_APIParam_4  set of xmlDOMWrapRemoveNode_APIParam_4, unused at the moment.
xmlTextWriterWritePI_APIParam_1  the  xmlTextWriterPtr.
xmlSAX2ResolveEntity_APIParam_3  The system ID of the entity.
xmlTextReaderConstXmlLang_APIParam_1  the  xmlTextReaderPtr  used.
Traversal function for the "namespace" direction the namespace axis contains the namespace nodes of the context node; the order of nodes on this axis is implementation-defined; the axis will be empty unless the context node is an element We keep the XML namespace node at the end of the list.
xmlNewGlobalNs_APIName returns  NULL this functionality had been removed.
xmlStrchr_APIParam_2  the  xmlChar  to search.
htmlEncodeEntities_APIParam_2  the length of @out htmlEncodeEntities_APIParam_3  a pointer to an array of UTF-8 chars.
xmlSaveFormatFileEnc_APIParam_3  the name of the xmlSaveFormatFileEnc_APIParam_3 to use or NULL.
xmlValidityErrorFunc_APIParam_2  xmlValidityErrorFunc_APIParam_3 string to format *printf like vararg xmlValidityErrorFunc_APIParam_3  remaining arguments to xmlValidityErrorFunc_APIParam_3 format.
xmlRegExecNextValues_APIName returns  will be freed with the @exec context and don't need to be deallocated.
xmlValidatePushCData_APIParam_2  some character xmlValidatePushCData_APIParam_2 read.
xmlParserInputBufferCreateStatic_APIParam_1  the memory input.
xmlTextWriterWriteVFormatAttributeNS_APIParam_5  xmlTextWriterWriteVFormatAttributeNS_APIParam_5 string (see printf).
xmlOutputBufferWrite_APIName returns  the number of chars immediately written, or -1 in case of error.
xmlMutexUnlock_APIName is used to unlock a libxml2 token.
xmlShellDu_APIParam_1  the shell context.
Get the last element in the list.
xmlXPathTrailing_APIName returns  the nodes in @nodes1 that follow the first node in @nodes2 in document order, @nodes1 if @nodes2 is NULL or empty or an empty node-set if @nodes1 doesn't contain @nodes2.
"-//SGMLSOURCE//DTD DEMO//EN".
xmlParserValidityWarning_APIParam_1 xmlParserValidityWarning_APIParam_3 XML parser context.
xmlPushInput: switch to a new xmlPushInput_APIParam_2 stream which is stacked on top of the previous one(s).
xmlStrVPrintf_APIParam_2  the result buffer length.
xmlValidBuildContentModel_APIParam_1  a validation context.
xmlAutomataNewTransition_APIParam_4  the input string associated xmlAutomataNewTransition_APIParam_3 that transition.
Find the userdata specified by the (@name, @name2) tuple.
If @f is NULL, the default error and warning handlers are restored.
Formats an error message.
xmlTextReaderGetAttributeNs_APIParam_1  the  xmlTextReaderPtr  used.
this includes the compiled-in I/O callbacks.
xmlBufferWriteChar_APIParam_1  the XML buffer output.
xmlXPtrWrapLocationSet_APIParam_1  the LocationSet value.
xmlTextWriterWriteFormatComment_APIParam_1  xmlTextWriterWriteFormatComment_APIParam_3  xmlTextWriterPtr.
xmlListWalk_APIParam_2  a processing function.
Traversal function for the "descendant-or-self" direction the descendant-or-self axis contains the context node and the descendants of the context node in document order; thus the context node is the first node on the axis, and the first child of the context node is the second node on the axis.
ftpListCallback_APIParam_12  the ftpListCallback_APIParam_12.
xmlSAXParseMemory_APIName returns  the resulting document tree.
expression context xmlExpGetLanguage_APIParam_2  the expression.
xmlNewDocText_APIParam_1  the document.
ftpListCallback_APIParam_6  the file ftpListCallback_APIParam_6 ftpListCallback_APIParam_7  the link count.
xmlSchemaValidateLengthFacetWhtsp_APIName returns  0 if the xmlSchemaValidateLengthFacetWhtsp_APIParam_3 is valid, a positive error code otherwise and -1 in case of an internal or API error.
xmlReaderNewMemory_APIParam_1  an XML xmlReaderNewMemory_APIParam_1.
Set the default xlink detection routine.
xmlSchemaValidateFacetWhtsp_APIParam_4.
xmlHandleEntity_APIParam_2  an XML xmlHandleEntity_APIParam_2 pointer.
xmlParserFindNodeInfoIndex_APIParam_1  a. xmlParserFindNodeInfoIndex_APIParam_2 info sequence pointer xmlParserFindNodeInfoIndex_APIParam_2  an XML xmlParserFindNodeInfoIndex_APIParam_2 pointer.
xmlTextWriterWriteFormatAttributeNS_APIParam_1  xmlTextWriterWriteFormatAttributeNS_APIParam_6  xmlTextWriterPtr.
If the new node is ATTRIBUTE, it is added into properties instead of children.
xmlEncodeEntitiesReentrant_APIName returns  A newly allocated string with the substitution done.
xmlGetLastChild_APIName returns  the last child or NULL if none.
-1 on API errors.
xmlAutomataNewAllTrans_APIParam_4  allow xmlAutomataNewAllTrans_APIParam_3 transition if not all all transitions have been activated.
xmlStringDecodeEntities_APIParam_6  an xmlStringDecodeEntities_APIParam_4 marker xmlChar, 0 if none.
xmlTextWriterStartDTDEntity_APIParam_1  the  xmlTextWriterPtr.
xmlNewCharRef_APIName returns  a pointer to the new node object.
xmlInitializeGlobalState_APIName initialize a global state with all the default values of the library.
Write a formatted xml attribute.
Send a QUIT command to the server.
xmlDOMWrapAcquireNsFunction_APIName returns  an  xmlNsPtr  or NULL in case of an error.
Upgrade of 1.X code should be done by using xmlIsBlankNode_APIName commodity function to detect the "empty" nodes generated.
xmlCtxtReadFile_APIName returns  the resulting document tree.
Register a new function.
ftpListCallback_APIParam_1  user provided data for the callback.
xmlCatalogFreeLocal_APIParam_1  a document's list of xmlCatalogFreeLocal_APIParam_1.
xmlXPathMultValues_APIParam_1  the XPath Parser context.
Note that a namespace of NULL indicates to use the default namespace.
xmlTextWriterWriteVFormatAttribute_APIParam_4  pointer to the first member of the variable argument list.
xmlParseComment_APIParam_1  an XML parser context.
xmlBufGetNodeContent_APIName returns  0 in case of success and -1 in case of error.
xmlShellBase_APIName returns  0.
Check if a QName is Equal to a given string.
xmlMallocAtomicLoc_APIParam_1  an unsigned int specifying the xmlMallocAtomicLoc_APIParam_1 in byte to allocate.
xmlXPathNextChild_APIName returns  the next element following that axis.
htmlReadIO_APIParam_2  an I/O close function.
xmlDictCreate_APIName returns  the newly created dictionary, or NULL if an error occurred.
xmlXPathNewValueTree_APIName returns  the newly created object.
Whitespace  characters  are the same allowed by the S production in XML.
xmlTextWriterWriteVFormatDTDAttlist_APIParam_1  the  xmlTextWriterPtr.
xmlXPathContainsFunction_APIParam_1  the XPath Parser context.
xmlRegExecNextValues_APIParam_1  a regexp execution context.
xmlListRemoveAll_APIParam_1  a list.
htmlReadFile_APIParam_1  a file or URL.
xmlOutputBufferCreateFilenameFunc_APIParam_2 .
commentSAXFunc_APIParam_1  the user data (XML parser context).
xmlSearchNs_APIParam_3  the namespace prefix.
attributeDeclSAXFunc_APIParam_2  the name of the element.
Set the callback functions used to handle errors for a parsing context.
For example, substring-after("1999/04/01","/") returns 04/01, and substring-after("1999/04/01","19") returns 99/04/01.
xmlReadIO_APIParam_4  the base xmlReadIO_APIParam_4 to use for the document.
xmlCopyEnumeration_APIParam_1  the tree to copy.
xmlNewTextWriterFilename_APIParam_2  compress the output?.
xmlValidateOneElement_APIParam_3  an element instance.
xmlNewChild_APIName returns  a pointer to the new node object.
inputPop_APIName returns  the input just removed.
Finds the last child node of that element which is a Element node Note the handling of entities references is different than in the W3C DOM element traversal spec since we don't have back  reference  from entities content to entities references.
htmlParseDocument_APIName returns  0, -1 in case of error.
xmlParseBalancedChunkMemoryRecover_APIParam_4  Used for loop detection, use 0. xmlParseBalancedChunkMemoryRecover_APIParam_5  the input xmlParseBalancedChunkMemoryRecover_APIParam_5 in UTF8 or ISO-Latin (zero terminated).
xmlTextWriterWriteDTDInternalEntity_APIParam_3  the xmlTextWriterWriteDTDInternalEntity_APIParam_3 of the DTD entity.
xmlSAXParseFileWithData_APIName returns  the resulting document tree.
xmlSchemaGetValidErrors_APIName returns  -1 in case of error and 0 otherwise.
xmlUTF8Strlen_APIParam_1  a sequence of UTF-8 encoded bytes.
More precisely, each character in the string (see [3.6 Strings]) is considered to have a numeric position: the position of the first character is 1, the position of the second character is 2 and so on.
xmlValidateDtd_APIParam_1  the validation context.
Implement the string_APIName XPath function string string(object?)
Name)* S?
xmlNewTextLen_APIName returns  a pointer to the new node object.
xmlIsPubidChar_APIName returns  true if argument valid, false otherwise.
Registers all default XPath functions in this context.
xmlParseContent_APIParam_1  an XML parser context.
xmlValidateQName_APIParam_2  allow spaces in front and end of the string.
xmlCharStrndup_APIName returns  a new  xmlChar  * or NULL.
xmlTextWriterWriteDTDEntity_APIParam_4  the public identifier, which is an alternative to the system identifier.
Unlink a node from it's current context, the node is not freed If one need to free the node, use xmlFreeNode_APIName routine after the unlink to discard it.
xmlAddDtdEntity_APIParam_2  the entity xmlAddDtdEntity_APIParam_2.
Scan the hash @table and applied @f to each value matching (@name, @name2, @name3) tuple.
xmlXPathEvalPredicate_APIParam_1  the XPath context.
Build a structure based Path for the given xmlGetNodePath_APIParam_1.
xmlTextReaderClose_APIName returns  0 or -1 in case of error.
xmlSetEntityReferenceFunc_APIParam_1  A valid function.
xmlTextWriterStartComment_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlCopyElementTable_APIParam_1  An element xmlCopyElementTable_APIParam_1.
If @ctxt is NULL, then RelaxNG schema validation is deactivated.
xmlShellCmd_APIParam_4  a second xmlShellCmd_APIParam_3.
xmlReaderNewFile_APIParam_2  a file or URL.
htmlNodeDump_APIParam_1  the HTML buffer output.
For example, substring-before("1999/04/01","/") returns 1999. xmlXPathSubstringBeforeFunction_APIParam_1  the XPath Parser context.
xmlCopyNode_APIParam_2  if 1 do a recursive copy (properties, namespaces and children when applicable) if 2 copy properties and namespaces (when applicable).
xmlXPathRegisteredNsCleanup_APIParam_1  the XPath context.
Do a copy of the xmlDocCopyNode_APIParam_1 to a given document.
xmlSchemaNewMemParserCtxt_APIName returns  the parser context or NULL in case of error.
xmlCheckLanguageID_APIParam_1  pointer to the string value.
Reads the contents of an element or a text node as a string.
http://www.sgmlsource.com/dtds/memo.dtd.
xmlRelaxNGValidatePopElement_APIParam_2  a document instance.
xmlAutomataNewCounter_APIParam_3  the maximal value on the counter.
xmlHashRemoveEntry2_APIParam_3  a second xmlHashRemoveEntry2_APIParam_2 of the userdata xmlHashRemoveEntry2_APIParam_4  the deallocator function for removed item (if any).
NOTE: @content is supposed to be a piece of XML CDATA, so it allows entity references.
xmlCatalogResolveURI_APIName returns  the xmlCatalogResolveURI_APIParam_1 of the resource or NULL if not found, it must be freed by the caller.
(Re)Build the automata associated to the content model of this element.
xmlEncodeSpecialChars_APIParam_1  the document containing the string.
xmlParseElementDecl_APIName returns  the type of the element, or -1 in case of error.
xmlNewCatalog_APIParam_1  should this create an SGML catalog.
xmlXPathCastNumberToBoolean_APIName returns  the boolean value.
xmlCreateIOParserCtxt_APIParam_6  the charset encoding if known.
xmlHashAddEntry3_APIParam_3  a second xmlHashAddEntry3_APIParam_2 of the xmlHashAddEntry3_APIParam_5.
xmlBufferContent_APIName returns  the internal content.
It will try to escape the chars needing this, but this is heuristic based it's impossible to be sure.
xmlSchemaValidateListSimpleTypeFacet_APIParam_4  the resulting expected number of list items.
xmlSAX2EntityDecl_APIParam_2  the entity xmlSAX2EntityDecl_APIParam_2.
xmlTextReaderRelaxNGValidateCtxt_APIName returns  0 in case the schemas validation could be (de)activated and -1 in case of error.
xmlTextReaderMoveToAttributeNs_APIParam_3  the namespace URI of the attribute.
Find the userdata specified by the @name.
If @to is NULL, this creates first a new target state in the automata and then adds a transition xmlAutomataNewCountTrans_APIParam_2 the @from state xmlAutomataNewCountTrans_APIParam_3 the target state activated by a succession of input of value @token and whose number is between @min and @max.
The xmlRegExecErrInfo_APIParam_2 xmlRegExecErrInfo_APIParam_5.
xmlInputOpenCallback_APIParam_1  the xmlInputOpenCallback_APIParam_1 or URI.
Initialize a parser context.
xmlHasNsProp_APIParam_1  the xmlHasNsProp_APIParam_1.
xmlXPathCastBooleanToNumber_APIName returns  the number value.
xmlHashAddEntry3_APIParam_4  a third xmlHashAddEntry3_APIParam_2 of the xmlHashAddEntry3_APIParam_5 userdata  a pointer to the xmlHashAddEntry3_APIParam_5.
xmlParserInputRead_APIParam_1  an XML parser input.
xmlAddNextSibling_APIParam_1  the child node.
htmlEntityLookup_APIParam_1  the entity htmlEntityLookup_APIParam_1.
xmlNewDocTextLen_APIParam_3  the text xmlNewDocTextLen_APIParam_3.
Traversal function for the "following-sibling" direction The following-sibling axis contains the following siblings of the context node in document order.
xmlBufferAddHead_APIParam_3  the number of #xmlChar to add.
xmlXPathWrapString_APIParam_1  the  xmlChar  * value.
Check if both strings are equal of have same content.
xmlSetProp_APIName returns  the  attribute  pointer.
Search the list for an existing value of @data.
xmlSchemaFreeValue_APIParam_1  the xmlSchemaFreeValue_APIParam_1 to free.
xmlNanoFTPClose_APIParam_1  an FTP context.
xmlTextWriterWriteFormatString_APIParam_1  xmlTextWriterWriteFormatString_APIParam_3  xmlTextWriterPtr.
startElementNsSAX2Func_APIParam_8  the number of defaulted startElementNsSAX2Func_APIParam_9.
Check if the regular expression generates the value.
xmlSchemaValidateOneElement_APIName returns  0 if the element and its subtree is valid, a positive error code number otherwise and -1 in case of an internal or API error.
xmlHashScan3_APIParam_4  a third xmlHashScan3_APIParam_2 of the userdata or NULL xmlHashScan3_APIParam_5  the scanner function for items in the hash xmlHashScan3_APIParam_6  extra xmlHashScan3_APIParam_6 passed to xmlHashScan3_APIParam_5.
Removes an  xmlNodePtr  from an existing NodeSet.
xmlSAX2ResolveEntity_APIName returns  the  xmlParserInputPtr  if inlined or NULL for DOM behaviour.
Create a buffered parser input for progressive parsing.
if @schema is NULL, then Schema validation is desactivated.
xmlSAX2UnparsedEntityDecl_APIParam_4  The system ID of the entity.
xmlXPathEqualValues_APIParam_1  the XPath Parser context.
Create a parser context for an external entity Automatic support for ZLIB/Compress compressed document is provided by default if found at compile-time.
The default handling is to convert the  attribute  into an DOM subtree and past it in a new  xmlAttr  element added to the element.
htmlDocContentDumpOutput_APIParam_1  the HTML buffer output.
This function increase the input for the parser.
xmlSetExternalEntityLoader_APIParam_1  the new entity resolver function.
xmlSchemaNewValidCtxt_APIName returns  the validation context or NULL in case of error.
xmlXPathCmpNodes_APIName returns  -2 in case of error 1 if first point < second point, 0 if it's the same node, -1 otherwise.
xmlExpRef_APIParam_1  the expression.
xmlSaveSetEscape_APIParam_2  the escaping function.
xmlSchemaValidateSetFilename_APIParam_1  the schema validation context.
xmlThrDefBufferAllocScheme_APIParam_1 .
xmlListEmpty_APIName returns  1 if the list is empty, 0 if not empty and -1 in case of error.
Initialize the htmlStartCloseIndex for fast lookup of closing tags names.
xmlGetDtdElementDesc_APIParam_1  a pointer to the DtD to search.
xmlCanonicPath_APIName returns  a new canonic xmlCanonicPath_APIParam_1, or a duplicate of the xmlCanonicPath_APIParam_1 parameter if the construction fails.
xmlBufferLength_APIName returns  the length of data in the internal content.
xmlRegNewExecCtxt_APIName returns  the new context.
Provide the line number of the current parsing point.
'>' [ WFC: Unique Att Spec ] No  attribute  name may appear more than once in the same start-tag or empty-element tag.
xmlNewComment_APIName returns  a pointer to the new node object.
Formating return/spaces are added.
xmlDOMWrapAdoptNode_APIParam_6  option flags.
Validate that the given xmlValidateNmtokensValue_APIParam_1 match Nmtokens production [ VC: Name Token ].
The xmlXPathNodeEval_APIParam_1 'node' is set as the context xmlXPathNodeEval_APIParam_1.
Tries to delete an item (file or directory) from server.
xmlDocDumpMemoryEnc_APIParam_4  Character encoding to use when generating XML text.
xmlStringGetNodeList_APIName returns  a pointer to the first child.
xmlReaderForFd_APIParam_3  the document xmlReaderForFd_APIParam_3, or NULL.
Signature of an error callback from a Schematron validation.
xmlReaderNewDoc_APIParam_2  a pointer to a zero terminated string.
set the default compression xmlSetCompressMode_APIParam_1 used, ZLIB based Correct values: 0 (uncompressed) to 9 (max compression).
xmlC14NDocSave_APIParam_3  the c14n xmlC14NDocSave_APIParam_3 (see @xmlC14NMode).
xmlXPathNodeSetCreate_APIParam_1  an initial xmlNodePtr, or NULL.
xmlNanoHTTPMethodRedir_APIParam_2  the HTTP xmlNanoHTTPMethodRedir_APIParam_2 to use.
xmlC14NDocSaveTo_APIParam_6  the output buffer to store canonical XML; this buffer MUST have encoder==NULL because C14N requires UTF-8 output.
xmlMallocAtomicLoc_APIName returns  a pointer to the allocated area or NULL in case of lack of memory.
xmlGetFeature_APIParam_1  an XML/HTML parser context.
Get line number of @node.
The namespace-uri function returns a string containing the namespace URI of the expanded name of the node in the argument node-set that is first in document order.
xmlIsPubidChar_APIParam_1  character to validate.
xmlNewDocPI_APIParam_2  the processing instruction xmlNewDocPI_APIParam_2.
Traversal function for the "ancestor-or-self" direction he ancestor-or-self axis contains the context node and ancestors of the context node in reverse document order; thus the context node is the first node on the axis, and the context node's parent the second; parent here is defined the same as with the parent axis.
htmlCreatePushParserCtxt_APIParam_6  an optional encoding.
'>' [73] EntityDef ::= EntityValue | (ExternalID NDataDecl?)
Push a new element start on the validation stack.
xmlTextWriterWriteComment_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
not used), which could give problems if ID or IDREF is present.
xmlCleanupThreads_APIName is used to to cleanup all the thread related data of the libxml2 library once processing has ended.
xmlRegisterOutputCallbacks_APIParam_2  the  xmlOutputOpenCallback.
xmlGetDocEntity_APIName returns  the corresponding entity, otherwise a lookup is done in the predefined entities too.
xmlXPathNewContext_APIParam_1  the XML document.
htmlCtxtReadDoc_APIParam_4  the document htmlCtxtReadDoc_APIParam_4, or NULL.
xmlBufferCreate_APIName returns  the new structure.
@ The @schema should not be freed until the xmlTextReaderSetSchema_APIParam_1 is deallocated or its use has been deactivated.
xmlDOMWrapCloneNode_APIParam_2  the optional xmlDOMWrapCloneNode_APIParam_2.
Cleanup the XPath context data associated to registered functions.
xmlXPathNamespaceURIFunction_APIParam_1  the XPath Parser context.
xmlReadFile_APIParam_2  the document xmlReadFile_APIParam_2, or NULL.
xmlReaderNewDoc_APIParam_3  the base xmlReaderNewDoc_APIParam_3 to use for the document.
It's like xmlParseFile_APIName except it bypass all catalog lookups.
xmlShellCat_APIName returns  0.
xmlSchemaCompareValues_APIName returns  -1 if xmlSchemaCompareValues_APIParam_1 < xmlSchemaCompareValues_APIParam_2, 0 if xmlSchemaCompareValues_APIParam_1 == xmlSchemaCompareValues_APIParam_2, 1 if xmlSchemaCompareValues_APIParam_1 > xmlSchemaCompareValues_APIParam_2, 2 if xmlSchemaCompareValues_APIParam_1 <> xmlSchemaCompareValues_APIParam_2, and -2 in case of error.
xmlSAXUserParseFile_APIParam_2  The user data returned on SAX callbacks.
xmlTextWriterSetQuoteChar_APIParam_2  the quote character.
Evaluate the XPath Location Path in the given context.
xmlSchematronValidityWarningFunc_APIParam_2  xmlSchematronValidityWarningFunc_APIParam_3 message xmlSchematronValidityWarningFunc_APIParam_3  extra arguments.
Free an XInclude context.
xmlCatalogLocalResolveURI_APIParam_1  a document's list of xmlCatalogLocalResolveURI_APIParam_1.
Append a zero terminated C string to an XML buffer.
xmlSetNsProp_APIName returns  the  attribute  pointer.
Converts a boolean to its string value.
All attributes for which no declaration has been read should be treated by a non-validating parser as if declared CDATA.
xmlTextReaderExpand_APIParam_1  the  xmlTextReaderPtr  used.
xmlDebugDumpDocument_APIParam_2  the document.
htmlIsAutoClosed_APIName returns  1 if autoclosed, 0 otherwise.
Sets the current htmlSetMetaEncoding_APIParam_2 in the Meta tags NOTE: this will not change the document content htmlSetMetaEncoding_APIParam_2, just the META flag associated.
xmlDocSetRootElement_APIParam_2  the new document xmlDocSetRootElement_APIParam_2 element, if xmlDocSetRootElement_APIParam_2 is NULL no action is taken, to remove a node from a document use xmlUnlinkNode(root) instead.
References of out-of scope ns-decls are remapped to point to @destDoc: 1) If @destParent is given, then nsDef entries on element-nodes are used 2) If *no* @destParent is given, then @destDoc->oldNs entries are used This is the case when you have an unlinked xmlDOMWrapAdoptNode_APIParam_3 and just want to move it to the context of If @destParent is given, it ensures that the tree is namespace wellformed by creating additional ns-decls where needed.
Free up all the memory allocated by the library for its own use.
xmlAddDocEntity_APIParam_1  the document.
Dump an HTML document in memory and return the  xmlChar  * and it's htmlDocDumpMemoryFormat_APIParam_3.
NOTE: In contrast to xmlNodeSetContent_APIName, @content is supposed to be raw text, so unescaped XML special chars are allowed, entity references are not supported.
The quotation mark character used to enclose the value of an attribute.
xmlSchemaValidateListSimpleTypeFacet_APIParam_3  the number of list items.
htmlParseDoc_APIParam_1  a pointer to an array of  xmlChar.
parse ENTITY references declarations [68] EntityRef ::= '&' Name ';' [ WFC: Entity Declared ] In a document without any DTD, a document with only an internal DTD subset which contains no parameter entity references, or a document with "standalone='yes'", the Name given in the entity  reference  must match that in an entity declaration, except that well-formed documents need not declare any of the following entities: amp, lt, gt, apos, quot.
Check that a xmlSchemaValPredefTypeNodeNoNorm_APIParam_2 conforms to the lexical space of the predefined xmlSchemaValPredefTypeNodeNoNorm_APIParam_1.
If @to is NULL, this creates first a new target state in the automata and then adds a transition xmlAutomataNewOnceTrans2_APIParam_2 the @from state xmlAutomataNewOnceTrans2_APIParam_3 the target state activated by a succession of input of value @token and @token2 and whose number is between @min and @max, moreover that transition can only be crossed once.
Check if the @name exists in the dictionary @dict.
In both case we don't parse the tag closing chars.
Dump to @output the type and name of @node.
xmlNanoHTTPMethod_APIParam_5  the extra xmlNanoHTTPMethod_APIParam_5.
xmlSAX2AttributeDecl_APIParam_1  the user data (XML parser context).
xmlCharEncOutFunc_APIParam_1  char encond.
Allocate a validation context structure.
xmlReadFile_APIParam_1  a file or URL.
Will use compression if compiled in and enabled.
xmlIOHTTPRead_APIParam_1  the I/O xmlIOHTTPRead_APIParam_1.
xmlSetStructuredErrorFunc_APIParam_1  the new error handling context.
A PEReference may have been detected in the current input stream the handling is done accordingly to http://www.w3.org/TR/REC-xml#entproc i.e.
attributeSAXFunc_APIParam_1  the user data (XML parser context).
A PredicateExpr is evaluated by evaluating the Expr and converting the result to a boolean.
xmlXPathNextSelf_APIName returns  the next element following that axis.
xmlTextReaderHasValue_APIName returns  1 if true, 0 if false, and -1 in case or error.
xmlIsXHTML_APIParam_2  the public identifier.
xmlReaderNewFd_APIParam_2  an open file descriptor.
xmlDelEncodingAlias_APIParam_1  the xmlDelEncodingAlias_APIParam_1 name as parsed, in UTF-8 format (ASCII actually).
xmlRecoverDoc_APIParam_1  a pointer to an array of  xmlChar.
parse a value for an  attribute  Note: the parser won't do substitution of entities here, this will be handled later in  xmlStringGetNodeList  [10] AttValue ::= '"' ([^<&"] | Reference)* '"' | "'" ([^<&'] | Reference)* "'" 3.3.3 Attribute-Value Normalization: Before the value of an  attribute  is passed to the application or checked for validity, the XML processor must normalize it as follows: - a character  reference  is processed by appending the referenced character to the  attribute  value - an entity  reference  is processed by recursively processing the replacement text of the entity - a whitespace character (#x20, #xD, #xA, #x9) is processed by appending #x20 to the normalized value, except that only a single #x20 is appended for a "#xD#xA" sequence that is part of an external parsed entity or the literal entity value of an internal parsed entity - other  characters  are processed by appending them to the normalized value If the declared value is not CDATA, then the XML processor must further process the normalized  attribute  value by discarding any leading and trailing space (#x20) characters, and by replacing sequences of space (#x20)  characters  by a single space (#x20) character.
xmlValidateAttributeDecl_APIName returns  1 if valid or 0 otherwise.
The code should work on both XML and HTML document even if base mechanisms are completely different.
xmlDebugCheckDocument_APIParam_2  the document.
xmlSchemaGetCanonValue_APIName returns  0 if the value could be built, 1 if the value type is not supported yet and -1 in case of API errors.
Implement the false_APIName XPath function boolean false_APIName.
xmlCheckHTTPInput_APIParam_2  an XML parser input.
Allocate and initialize a new parser context.
Set and return the previous value for default blanks text nodes support.
Dump an HTML document in memory and return the  xmlChar  * and it's htmlDocDumpMemory_APIParam_3.
xmlParseSDDecl_APIName returns  1 if standalone="yes" 0 if standalone="no" -2 if standalone  attribute  is missing or invalid (A standalone value of -2 means that the XML declaration was found, but no value was specified for the standalone attribute).
parse an Enumeration  attribute  type.
xmlStrncasecmp_APIName returns  the integer result of the comparison.
xmlGetLineNo_APIName returns  the line number if successful, -1 otherwise.
xmlTextReaderSetup_APIParam_2  xmlParserInputBufferPtr  used to feed the xmlTextReaderSetup_APIParam_1, will be destroyed with it.
namePush_APIName returns  -1 in case of error, the index in the stack otherwise.
Implement the concat_APIName XPath function string concat(string, string, string*) The concat function returns the concatenation of its arguments.
xmlValidateNotationDecl_APIParam_1  the validation context.
Initialize the XPath environment.
xmlTextReaderIsNamespaceDecl_APIParam_1  the  xmlTextReaderPtr  used.
It tries to preserve pointers to the input buffer, and keep already read data.
Get the callback information used to handle errors for a validation context.
xmlParseExternalEntity_APIParam_6  the System xmlParseExternalEntity_APIParam_6 for the entity to load.
xmlValidateOneAttribute_APIParam_5  the  attribute  xmlValidateOneAttribute_APIParam_5 (without entities processing).
xmlNanoFTPOpen_APIParam_1  the xmlNanoFTPOpen_APIParam_1 to the resource.
xmlIsMixedElement_APIParam_2  the element xmlIsMixedElement_APIParam_2.
Search a Ns registered under a given name space for a document.
xmlAddDtdEntity_APIName returns  a pointer to the entity or NULL in case of error.
xmlTextReaderRelaxNGSetSchema_APIParam_2  a precompiled RelaxNG xmlTextReaderRelaxNGSetSchema_APIParam_2.
Converts a node-set to its string value.
Create a new  xmlXPathObjectPtr  of type range from a node to a point.
xmlListMerge_APIParam_1  the original list.
xmlFileOpen_APIParam_1  the URI for matching.
Dumps debug information for the DTD.
Is this xmlNodeIsText_APIParam_1 a Text xmlNodeIsText_APIParam_1 ?.
xmlTextWriterWriteAttribute_APIParam_1  the  xmlTextWriterPtr.
xmlBufferCCat_APIParam_2  the C char string.
xmlHashQLookup3_APIParam_4  the second xmlHashQLookup3_APIParam_2 of the userdata.
xmlParseChunk_APIParam_3  the xmlParseChunk_APIParam_3 in byte of the xmlParseChunk_APIParam_2.
xmlSetNsProp_APIParam_2  the.
htmlSAXParseFile_APIName returns  the resulting document tree unless SAX is NULL or the document is not well formed.
This function saves the output of the HTTP transaction to a file It closes and free the context at the end.
xmlCharEncFirstLine_APIParam_1  char encond.
xmlRegExecCallbacks_APIParam_2  the current xmlRegExecCallbacks_APIParam_2 string.
Dumps debug information for the document, it's recursive.
xmlNanoHTTPMethodRedir_APIName returns  NULL in case of failure, otherwise a request handler.
namespace xmlTextWriterWriteFormatElementNS_APIParam_2 xmlTextWriterWriteFormatElementNS_APIParam_3  element local xmlTextWriterWriteFormatElementNS_APIParam_3.
xmlRegisterInputCallbacks_APIParam_1  the  xmlInputMatchCallback.
xmlSaveSetEscape_APIName returns  0 if successful or -1 in case of error.
Set the default xlink handlers.
xmlNewNs_APIParam_3  the xmlNewNs_APIParam_3 for the namespace.
xmlScanName_APIParam_1  an XML parser context.
xmlValidBuildContentModel_APIName returns  1 in case of success, 0 in case of error.
xmlXPathRegisterNs_APIParam_2  the namespace xmlXPathRegisterNs_APIParam_2 cannot be NULL or empty string.
xmlAddNotationDecl_APIParam_2  pointer to the DTD.
xmlParseElementMixedContentDecl_APIName returns  the list of the  xmlElementContentPtr  describing the element choices.
xmlCtxtReadFd_APIParam_5  a combination of  xmlParserOption.
xmlNewText_APIParam_1  the text xmlNewText_APIParam_1.
The string-length returns the number of  characters  in the string (see [3.6 Strings]).
xmlReaderForMemory_APIParam_3  the base xmlReaderForMemory_APIParam_3 to use for the document.
Callback on external subset declaration.
xmlCatalogResolve_APIParam_1  the public ID string.
htmlNodeStatus_APIName returns  for Element nodes, a return from  htmlElementAllowedHere  (if htmlNodeStatus_APIParam_2 allowed) or  htmlElementStatusHere  (otherwise).
xmlSaveToBuffer_APIName returns  a new serialization context or NULL in case of error.
If the argument is omitted, it defaults to the context node converted to a string, in other words the value of the context node.
Get the default external entity resolver function for the application.
xmlSchemaNewMemParserCtxt_APIParam_1  a pointer to a char array containing the schemas.
htmlReadMemory_APIParam_3  the base htmlReadMemory_APIParam_3 to use for the document.
xmlParserFindNodeInfoIndex_APIName returns  a long indicating the position of the record.
parse an XML namespace name.
xmlDOMWrapAcquireNsFunction_APIParam_1  a DOM wrapper context.
xmlACatalogResolvePublic_APIParam_2  the public ID string.
htmlCreatePushParserCtxt_APIParam_1  a SAX handler.
xmlReallocFunc_APIParam_1  an already allocated block of memory.
This reuses the existing @reader xmlTextReader.
xmlTextWriterWriteFormatElementNS_APIParam_5  xmlTextWriterWriteFormatElementNS_APIParam_5 string (see printf) xmlTextWriterWriteFormatElementNS_APIParam_6  extra parameters xmlTextWriterWriteFormatElementNS_APIParam_6 the xmlTextWriterWriteFormatElementNS_APIParam_5.
'>' [72] PEDecl ::= '<!ENTITY' S '%' S Name S PEDef S?
xmlHashLookup3_APIParam_2  the xmlHashLookup3_APIParam_2 of the userdata.
Creation of a processing instruction element.
make sure that all bytes have been output and free the associated data.
xmlNewNode_APIParam_1 .
Create an  xmlTextReader  structure fed with @input.
xmlTextReaderSetErrorHandler_APIParam_3  a user argument to pass to the callback function.
Allocate a new QName value.
xmlTextWriterWriteFormatElementNS_APIParam_4  namespace xmlTextWriterWriteFormatElementNS_APIParam_6.
xmlParseEntityValue_APIParam_2  if non-NULL store a copy of the original entity value.
Cleanup the default XML Schemas type library.
Makes that xmlAutomataSetFinalState_APIParam_2 a final xmlAutomataSetFinalState_APIParam_2.
parse an XML declaration header for external entities [77] TextDecl ::= '<?xml' VersionInfo?
This is dangerous because the underlying node may be destroyed on the next Reads.
xmlAutomataNewOnceTrans2_APIParam_8  xmlAutomataNewOnceTrans2_APIParam_8 associated xmlAutomataNewOnceTrans2_APIParam_3 the transition.
Implements the EXSLT - Sets distinct_APIName function: node-set set:distinct (node-set) @nodes is sorted by document order, then #exslSetsDistinctSorted is called with the sorted node-set.
xmlXPathNodeSetAdd_APIParam_1  the initial node set.
inputPush_APIParam_1  an XML parser context.
xmlSaveFileEnc_APIName returns  the number of bytes written or -1 in case of failure.
Set or reset (if NULL) the default initGenericErrorDefaultFunc_APIParam_1 for generic errors to the builtin error function.
xmlTextWriterWriteFormatRaw_APIParam_1  xmlTextWriterWriteFormatRaw_APIParam_3  xmlTextWriterPtr.
xmlTextReaderClose_APIParam_1  the  xmlTextReaderPtr  used.
xmlTextReaderConstXmlVersion_APIParam_1  the  xmlTextReaderPtr  used.
@nameSpace can be NULL, this is a search for the default namespace.
Signature of a warning callback from a Relax-NG validation.
xmlRelaxNGValidityErrorFunc_APIParam_1  xmlRelaxNGValidityErrorFunc_APIParam_3 validation context.
xmlTextWriterStartElement_APIParam_1  the  xmlTextWriterPtr.
xmlCreateFileParserCtxt_APIParam_1  the xmlCreateFileParserCtxt_APIParam_1.
xmlDumpNotationTable_APIParam_1  the XML buffer output.
htmlCreateFileParserCtxt_APIParam_2  a free form C string describing the HTML document htmlCreateFileParserCtxt_APIParam_2, or NULL.
Check a xmlSchemaValidateFacetWhtsp_APIParam_4 against a xmlSchemaValidateFacetWhtsp_APIParam_1 condition.
xmlReaderNewWalker_APIName returns  0 in case of success and -1 in case of error.
xmlSchemaValPredefTypeNodeNoNorm_APIName returns  0 if this validates, a positive error code number otherwise and -1 in case of internal or API error.
xmlCharInRange_APIParam_2  pointer to range to be used to validate.
htmlReadMemory_APIParam_1  a pointer to a char array.
xmlXPathRegisterFuncLookup_APIParam_2  the lookup function.
Extract error informations from the regexp execution, the parameter @string will be updated with the value pushed and not accepted, the parameter @values must point to an array of @nbval xmlRegExecErrInfo_APIParam_2 pointers on return xmlRegExecErrInfo_APIParam_3 will contain the number of possible strings in that state and the @values array will be updated with them.
internalSubsetSAXFunc_APIParam_2  the root element internalSubsetSAXFunc_APIParam_2.
xmlFreeNodeList_APIParam_1  the first node in the list.
xmlC14NDocDumpMemory_APIParam_4  the list of inclusive namespace prefixes ended with a NULL or NULL if there is no inclusive namespaces (only for exclusive canonicalization, ignored otherwise).
Get the atom associated to the choice @left | @right Note that @left and @right are consumed in the operation, to keep an handle on them use xmlExpRef_APIName and use xmlExpFree_APIName to release them, this is true even in case of failure (unless xmlExpNewOr_APIParam_1 == NULL).
xmlCharEncOutFunc_APIParam_2  an  xmlBuffer  for the output.
htmlParseDoc_APIParam_2  a free form C string describing the HTML document htmlParseDoc_APIParam_2, or NULL.
xmlShellDir_APIParam_3  a xmlShellDir_APIParam_3.
xmlValidateOneNamespace_APIParam_4  the namespace xmlValidateOneNamespace_APIParam_4 xmlValidateOneNamespace_APIParam_5  an namespace declaration instance.
xmlRelaxNGInitTypes_APIName returns  0 in case of success and -1 in case of error.
make sure that all bytes have been output.
xmlCtxtReadIO_APIParam_7  a combination of  xmlParserOption.
xmlNanoFTPUpdateURL_APIParam_2  The xmlNanoFTPUpdateURL_APIParam_2 used to update the context.
xmlXPathCastNodeToString_APIParam_1  a xmlXPathCastNodeToString_APIParam_1.
xmlXPathNotFunction_APIParam_1  the XPath Parser context.
-- Initialize (set to initial state) node info sequence.
xmlCharEncCloseFunc_APIParam_1  char enconding transformation data structure.
xmlListRemoveFirst_APIName returns  1 if a deallocation occurred, or 0 if not found.
xmlBufferWriteCHAR_APIParam_1  the XML buffer.
xmlTextReaderPreserve_APIName returns  the  xmlNodePtr  or NULL in case of error.
htmlNewParserCtxt_APIName returns  the  htmlParserCtxtPtr  or NULL in case of allocation error.
xmlHashAddEntry2_APIParam_4.
xmlSchemaValidateStream_APIName returns  0 if the document is schemas valid, a positive error code number otherwise and -1 in case of internal or API error.
xmlXPathBooleanFunction_APIParam_1  the XPath Parser context.
entityDeclSAXFunc_APIParam_5  The system ID of the entity.
internalSubsetSAXFunc_APIParam_1  the user data (XML parser context).
parse an XML name [4] NameChar ::= Letter | Digit | '.'
Warning !
xlinkExtendedLinkSetFunk_APIParam_7 detected on the link xlinkExtendedLinkSetFunk_APIParam_7 .
xmlGetDtdElementDesc_APIName returns  the  xmlElementPtr  if found or NULL.
htmlFreeParserCtxt_APIParam_1  an HTML parser context.
xmlSchemaValidateLengthFacetWhtsp_APIParam_2  the built-in type.
It then makes the subtree available until the next xmlTextReaderRead_APIName call.
htmlSaveFileFormat_APIParam_2  the document.
This function closes an HTTP context, it ends up the connection and free all data related to it.
Cleanup the XPath context data associated to registered variables.
xmlDOMWrapCloneNode_APIParam_5  the destination doc.
xmlHashScannerFull_APIParam_5  the third xmlHashScannerFull_APIParam_3 associated.
xmlParseEntityDecl_APIParam_1  an XML parser context.
xmlListPushFront_APIParam_1  a list.
Parse and return a string between quotes or doublequotes TODO: Deprecated, to be removed at next drop of binary compatibility.
xmlIOHTTPMatch_APIName returns  1 if matches, 0 otherwise.
Write an xml element with namespace support.
xmlFreeDocElementContent_APIParam_1  the document owning the element declaration.
xmlTextWriterWriteRaw_APIParam_1  the  xmlTextWriterPtr.
xmlByteConsumed_APIParam_1  an XML parser context.
xmlListRemoveFirst_APIParam_1  a list.
Do an encoding check if xmlParserInputBufferCreateFilename_APIParam_2 ==  XML_CHAR_ENCODING_NONE.
parse an XML in-memory block and use the given SAX function block to handle the parsing callback.
xmlHashScan_APIParam_2  the scanner function for items in the hash.
xmlThrDefDeregisterNodeDefault_APIName returns .
htmlCtxtReadMemory_APIName returns  the resulting document tree.
Create a new  xmlXPathObjectPtr  of type NodeSet and initialize it with the single Node @val.
xmlHashQLookup_APIParam_3  the xmlHashQLookup_APIParam_3 of the userdata.
xmlDocCopyNodeList_APIParam_1  the target document.
xmlLoadSGMLSuperCatalog_APIParam_1  a file path.
xmlDecodeEntities_APIParam_3  combination of  XML_SUBSTITUTE_REF  and  XML_SUBSTITUTE_PEREF.
xmlParseExternalSubset_APIParam_1  an XML parser context.
xmlListPushFront_APIName returns  1 if successful, 0 otherwise.
xmlSaveFormatFileEnc_APIParam_2  the document being saved.
xmlSchemaValidityLocatorFunc_APIParam_2  returned xmlSchemaValidityLocatorFunc_APIParam_2 information.
Create a new  xmlXPathObjectPtr  of type NodeSet and initialize it with the Nodeset @val.
htmlNodeDumpFormatOutput_APIParam_2  the document.
htmlReadMemory_APIParam_5  a combination of htmlParserOption(s).
Handle an XPath xmlXPathErr_APIParam_2.
xmlHashScanFull3_APIParam_1  the hash xmlHashScanFull3_APIParam_1.
Called when the document start being processed.
xmlSchematronNewDocParserCtxt_APIParam_1  a preparsed document tree.
xmlMutexUnlock_APIParam_1  the simple mutex.
xmlOutputBufferCreateFilenameFunc_APIParam_3 .
xmlXPathNodeSetAdd_APIParam_2  a new  xmlNodePtr.
change the xmlSwitchInputEncoding_APIParam_2 functions when discovering the character encoding of a given entity.
htmlParseCharRef_APIName returns  the value parsed (as an int).
Traversal function for the "attribute" direction TODO: support DTD inherited default attributes.
Create an xmltextReader for an XML in-memory document.
Obtain the base URI for the given xmlTextReaderLocatorBaseURI_APIParam_1.
xmlParseURIRaw_APIParam_2  if 1 unescaping of URI pieces are disabled.
xmlHashScanFull_APIParam_2  the scanner function for items in the hash.
xmlXPathFunctionLookupNS_APIParam_1  the XPath context.
xmlNanoFTPList_APIParam_4  optional files to list.
Create a new input stream structure.
xmlGcMemSetup_APIParam_1  the free_APIName function to use.
Remove an  attribute  carried by a xmlUnsetNsProp_APIParam_1.
xmlNoNetExternalEntityLoader_APIName returns  a new allocated xmlParserInputPtr, or NULL.
xmlGetEncodingAlias_APIName returns  NULL if not found, otherwise the original name.
xmlXPathNextSelf_APIParam_2  the current node in the traversal.
xmlDocDumpFormatMemoryEnc_APIParam_1  Document to generate XML text from.
xmlMemSetup_APIParam_1  the free_APIName function to use.
xmlParsePI_APIParam_1  an XML parser context.
Get a parameter entity by getParameterEntitySAXFunc_APIParam_2.
xmlGetProp_APIName returns  the  attribute  value or NULL if not found.
xmlCatalogLocalResolve_APIName returns  the URI of the resource or NULL if not found, it must be freed by the caller.
xmlSAX2ExternalSubset_APIParam_3  the external ID.
Currently this returns an error for XInclude.
If xmlCopyDoc_APIParam_2, the content tree will be copied too as well as DTD, namespaces and entities.
xmlChildElementCount_APIParam_1  the xmlChildElementCount_APIParam_1 node.
xmlGetUTF8Char_APIParam_2  a pointer to the minimum number of bytes present in the sequence.
xmlLsCountNode_APIName returns  the number of children of @node.
xmlCtxtReadIO_APIParam_4  an I/O handler.
xmlListInsert_APIName returns  0 in case of success, 1 in case of failure.
It won't expand CATALOG or DELEGATE references.
xmlParseMemory_APIParam_1  an pointer to a char array.
xmlSplitQName3_APIName returns  NULL if it is not a Qualified Name, otherwise, update xmlSplitQName3_APIParam_2 with the length in byte of the prefix and return a pointer to the start of the xmlSplitQName3_APIParam_1 without the prefix.
xmlTextWriterWriteDTDExternalEntity_APIParam_2  TRUE if this is a parameter entity, FALSE if not.
xmlNanoFTPList_APIParam_1  an FTP context.
Create a substring from a given UTF-8 string Note: positions are given in units of UTF-8 chars.
TODO: if htmlNodeDumpFileFormat_APIParam_4 == NULL try to save in the htmlNodeDumpFileFormat_APIParam_2 htmlNodeDumpFileFormat_APIParam_4.
xmlAllocOutputBuffer_APIName returns  the new parser output or NULL.
xmlExpNewRange_APIParam_1  the expression context.
xmlXPathNodeSetMerge_APIParam_2  the second NodeSet.
xmlNewDtd_APIParam_1  the document pointer.
xmlTextWriterFlush_APIParam_1  the  xmlTextWriterPtr.
xmlRecoverMemory_APIName returns  the resulting document tree or NULL in case of error.
xmlRelaxNGNewParserCtxt_APIName returns  the parser context or NULL in case of error.
xmlShellSave_APIParam_3  unused.
Function to reset the xmlSetStructuredErrorFunc_APIParam_2 and the error context for out of context structured error messages.
xmlNodeDumpOutput_APIParam_4  the imbrication xmlNodeDumpOutput_APIParam_4 for indenting.
xmlStrEqual_APIName returns  1 if they are equal, 0 if they are different.
Implement the string-length_APIName XPath function number string-length(string?)
xmlNextChar_APIParam_1  the XML parser context.
xmlTextWriterWriteComment_APIParam_1  the  xmlTextWriterPtr.
Callback used in the I/O Input API to detect if the current handler can provide input fonctionnalities for this resource.
xmlParserInputRead_APIName returns  -1 as this is an error to use it.
xmlSaveToIO_APIParam_3  an I/O handler.
xmlParseMarkupDecl_APIParam_1  an XML parser context.
xmlGetCompressMode_APIName returns  0 (uncompressed) to 9 (max compression).
Callback on internal subset declaration.
xmlHashRemoveEntry3_APIName returns  0 if the removal succeeded and -1 in case of error or not found.
xmlCharStrndup_APIParam_2  the xmlCharStrndup_APIParam_2 of @cur.
xmlTextReaderGetErrorHandler_APIParam_3  a user argument.
xmlSchemaGetBuiltInListSimpleTypeItemType_APIParam_1  the built-in simple xmlSchemaGetBuiltInListSimpleTypeItemType_APIParam_1.
Do the catalog initialization.
xmlSchemaFree_APIParam_1  a xmlSchemaFree_APIParam_1 structure.
endElementSAXFunc_APIParam_1  the user data (XML parser context).
the value of the xml:base attribute.
xmlHashScan_APIParam_3  extra xmlHashScan_APIParam_3 passed to xmlHashScan_APIParam_2.
xmlParseCatalogFile_APIParam_1  the xmlParseCatalogFile_APIParam_1.
xmlAttrSerializeTxtContent_APIParam_1  the XML buffer output.
xmlXPtrEval_APIParam_1  the XPointer expression.
xmlStrQEqual_APIParam_2  the localname of the QName.
xmlXPtrLocationSetDel_APIParam_2  an  xmlXPathObjectPtr.
Prints the URI in the xmlPrintURI_APIParam_1 @stream.
xmlCreatePushParserCtxt_APIParam_2  The user data returned on SAX callbacks.
xmlDecodeEntities_APIParam_1  the parser context.
xmlDllMain_APIParam_2 .
xmlAutomataNewCounter_APIParam_2  the minimal value on the counter.
Do one step of Brzozowski derivation of the expression @exp with respect to the input string.
xmlSplitQName_APIParam_3  a  xmlChar  **.
xmlStrdupFunc_APIParam_1  a zero terminated string.
The xmlNanoHTTPOpenRedir_APIParam_2, if provided must be freed by the caller.
Display warningSAXFunc_APIParam_3 format a warning messages, callback.
xmlRegExecPushString2_APIParam_2  the first string token input.
xmlFreeDtd_APIParam_1  the DTD structure to free up.
xmlNextElementSibling_APIParam_1  the current xmlNextElementSibling_APIParam_1.
xmlOutputCloseCallback_APIParam_1  an Output xmlOutputCloseCallback_APIParam_1.
xmlDecodeEntities_APIName returns  A newly allocated string with the substitution done.
xmlListRemoveLast_APIName returns  1 if a deallocation occurred, or 0 if not found.
xmlExternalEntityLoader_APIParam_1  The System.
xmlXPathCastBooleanToString_APIParam_1  a boolean.
xmlAutomataNewOnceTrans2_APIParam_2  the starting point of the transition xmlAutomataNewOnceTrans2_APIParam_3  the target point of the transition or NULL.
xmlUTF8Strloc_APIParam_1  the input UTF8 *.
xmlCreateMemoryParserCtxt_APIParam_1  a pointer to a char array.
The automata should be free after this point.
xmlSAXUserParseFile_APIParam_3  a file name.
xmlThrDefParserDebugEntities_APIParam_1 .
xmlTextWriterWriteString_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlC14NExecute_APIParam_5  the list of inclusive namespace prefixes ended with a NULL or NULL if there is no inclusive namespaces (only for exclusive canonicalization, ignored otherwise).
xmlShellPrintNode_APIParam_1  a non-null xmlShellPrintNode_APIParam_1 to print to the output FILE.
Implement the XInclude substitution on the XML node @tree.
xmlNewTextReader_APIParam_2  the xmlNewTextReader_APIParam_2 information for the source if available.
(This does not apply to references that occur in external parameter entities or to the external subset.).
xmlPatternFromRoot_APIName returns  1 if true, 0 if false and -1 in case of error.
xmlCtxtReadDoc_APIParam_1  an XML parser context.
xmlStrcat_APIParam_1  the original  xmlChar  * array.
Determine the encoding of the document being read.
xmlDictSize_APIName returns  the number of elements in the dictionary or -1 in case of error.
Sort all the elements in the list.
Set (or reset) the base URI of a node, i.e.
xmlXPathNextParent_APIName returns  the next element following that axis.
[ VC: IDREF ] Values of type IDREF must match the Name production, and values of type IDREFS must match Names; each IDREF Name must match the value of an ID  attribute  on some element in the XML document; i.e.
This one does apply any normalization to the xmlSchemaValPredefTypeNodeNoNorm_APIParam_2.
xmlUnsetNsProp_APIName returns  0 if successful, -1 if not found.
Query the number of elements installed in the hash @table.
xmlValidateOneAttribute_APIParam_3  an element instance.
xmlTextReaderPreservePattern_APIName returns  a non-negative number in case of success and -1 in case of error.
Removes an entry from an existing NodeSet list.
xmlXPathObjectCopy_APIName returns  the newly created object.
'?>' The processing is transfered to SAX once parsed.
xmlNanoHTTPEncoding_APIParam_1  the HTTP context.
xmlGcMemSetup_APIParam_2  the malloc_APIName function to use.
(Re)Initialize the HTTP Proxy context by parsing the xmlNanoHTTPScanProxy_APIParam_1 and finding the protocol host port it indicates.
xmlTextWriterWriteVFormatPI_APIParam_2  PI xmlTextWriterWriteVFormatPI_APIParam_2.
xmlValidateNotationUse_APIParam_2  the document.
xmlHashSize_APIName returns  the number of elements in the hash xmlHashSize_APIParam_1 or -1 in case of error.
xmlListInsert_APIParam_1  a list.
internalSubsetSAXFunc_APIParam_4  the SYSTEM ID (e.g.
xmlNewTextWriter_APIParam_1  an  xmlOutputBufferPtr.
[ VC: Enumeration ] Values of this type must match one of the Nmtoken tokens in the declaration.
[26] VersionNum ::= '1.'
Removes an entry from an existing LocationSet list.
')'.
xmlDOMWrapAdoptNode_APIParam_1  the optional context for custom processing.
xmlTextWriterWriteVFormatElementNS_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
Write a formatted xml attribute.with namespace support.
Implements the EXSLT - Sets leading_APIName function: node-set set:leading (node-set, node-set) @nodes is sorted by document order, then #exslSetsNodeLeadingSorted is called.
xmlGetDtdAttrDesc_APIParam_1  a pointer to the DtD to search.
nodePop_APIParam_1  an XML parser context.
xmlNodeSetSpacePreserve_APIParam_2  the xmlspace value ("0" default, 1 "preserve").
xmlTextWriterWriteBinHex_APIParam_4  the number of bytes to encode.
Implements the EXSLT - Sets trailing_APIName function: node-set set:trailing (node-set, node-set).
htmlDocDumpMemory_APIParam_3  OUT the memory length.
xmlC14NIsVisibleCallback_APIName returns  1 if the xmlC14NIsVisibleCallback_APIParam_2 should be included.
xmlFreeIDTable_APIParam_1  An id xmlFreeIDTable_APIParam_1.
xmlC14NDocSaveTo_APIParam_3  the c14n xmlC14NDocSaveTo_APIParam_3 (see @xmlC14NMode).
xmlXPathIsNodeType_APIName returns  1 if true 0 otherwise.
xmlValidateDocument_APIParam_2  a document instance.
xmlSchemaNewDocParserCtxt_APIParam_1  a preparsed document tree.
xmlNanoFTPCheckResponse_APIParam_1  an FTP context.
xmlXPathSubstringBeforeFunction_APIParam_2  the number of arguments.
xmlTextReaderConstPrefix_APIParam_1  the  xmlTextReaderPtr  used.
xmlReadIO_APIParam_5  the document xmlReadIO_APIParam_5, or NULL.
If the result is a number, the result will be converted to true if the number is equal to the position of the context node in the context node list (as returned by the position function) and will be converted to false otherwise; if the result is not a number, then the result will be converted as if by a call to the boolean function.
xmlTextReaderRead_APIName returns  1 if the node was read successfully, 0 if there is no more nodes to read, or -1 in case of error.
The function is of constant cost if the input is UTF-8 but can be costly if run on non-UTF-8 input.
xmlNewNodeEatName_APIParam_1 .
xmlSaveSetEscape_APIParam_1  a document saving context.
xmlUTF8Strlen_APIName returns  the number of  characters  in the string or -1 in case of error.
xmlHashAddEntry3_APIParam_2  the xmlHashAddEntry3_APIParam_2 of the.
xmlDOMWrapCloneNode_APIParam_4  the clone of the given @node.
xmlModuleSymbol_APIName returns  0 if the xmlModuleSymbol_APIParam_3 was found, or -1 in case of error.
Call this routine to speed up XPath computation on static documents.
xmlHashCopier_APIParam_2  the xmlHashCopier_APIParam_2 associated.
xmlTextReaderReadOuterXml_APIParam_1  the  xmlTextReaderPtr  used.
xmlTextWriterWriteElement_APIParam_1  the  xmlTextWriterPtr.
Change the parser processing behaviour by changing some of its internal properties.
xmlSchemaSetValidStructuredErrors_APIParam_2  the structured error function xmlSchemaSetValidStructuredErrors_APIParam_3  the functions context.
xmlXPathEvalExpression_APIParam_1  the XPath expression.
xmlCatalogResolveSystem_APIName returns  the resource if found or NULL otherwise, the value returned must be freed by the caller.
xmlURIUnescapeString_APIParam_1  the string to unescape.
xmlValidatePushElement_APIParam_3  an element instance.
isStandaloneSAXFunc_APIName returns  1 if true.
With namespace: [NS 11] Attribute ::= QName Eq AttValue Also the case QName == xmlns:???
xmlRelaxNGGetValidErrors_APIParam_2  the error function result.
xmlTextReaderRelaxNGValidate_APIParam_1  the  xmlTextReaderPtr  used.
xmlTextWriterWriteDTDExternalEntity_APIParam_3  the xmlTextWriterWriteDTDExternalEntity_APIParam_3 of the DTD entity.
xmlNanoFTPDele_APIName returns  -1 incase of error, 1 if DELE worked, 0 if it failed.
Cleanup the default Schemas type library associated to RelaxNG.
xmlRelaxNGValidatePopElement_APIParam_1  the RelaxNG validation context.
It pops up finished entities in the process if allowable at that point.
Use  xmlIsPubidChar_ch  or  xmlIsPubidCharQ  instead.
xmlRelaxNGSetValidStructuredErrors_APIParam_2  the structured error function xmlRelaxNGSetValidStructuredErrors_APIParam_3  the functions context.
xmlNodeListGetString_APIName returns  a pointer to the string copy, the caller must free it with xmlFree_APIName.
htmlNewDoc_APIParam_2  the external ID of the DTD, or NULL.
xmlSchemaNewFacet_APIName returns  the newly allocated structure or NULL in case or error.
Formats @msg and places result into @buf.
xmlTextReaderSetParserProp_APIParam_3  usually 0 or 1 to (de)activate it.
xmlRelaxNGDump_APIParam_2  a xmlRelaxNGDump_APIParam_2 structure.
xmlHashUpdateEntry2_APIParam_1  the hash xmlHashUpdateEntry2_APIParam_1.
Implements the EXSLT - Sets intersection_APIName function: node-set set:intersection (node-set, node-set).
xmlStreamPush_APIName returns  -1 in case of error, 1 if the current state in the xmlStreamPush_APIParam_1 is a match and 0 otherwise.
Implement the compare operation on XPath objects: @arg1 < @arg2 (1, 1, ... @arg1 <= @arg2 (1, 0, ... @arg1 > @arg2 (0, 1, ... @arg1 >= @arg2 (0, 0, ...
xmlSchemaGetCanonValueWhtsp_APIParam_1  the precomputed value.
xmlInputReadCallback_APIParam_1  an Input xmlInputReadCallback_APIParam_1.
xmlParseInNodeContext_APIParam_2  the input string.
getEntitySAXFunc_APIName returns  the  xmlEntityPtr  if found.
xmlGetDtdElementDesc_APIParam_2  the element xmlGetDtdElementDesc_APIParam_2.
xmlLinkGetData_APIParam_1  a link.
xmlBoolToText_APIParam_1  a bool to turn into text.
expression context xmlExpGetStart_APIParam_2  the expression.
xmlModuleFree_APIParam_1  the xmlModuleFree_APIParam_1 handle.
xmlExpFree_APIParam_1  the.
xmlSplitQName2_APIParam_2  a  xmlChar  **.
Method to get the remainder of the buffered XML.
xmlHashLookup3_APIParam_1  the hash xmlHashLookup3_APIParam_1.
ftpDataCallback_APIParam_3  its size in bytes.
xmlDocCopyNodeList_APIParam_2  the first xmlDocCopyNodeList_APIParam_2 in the list.
xmlRegExecNextValues_APIParam_3  return number of negative transitions xmlRegExecNextValues_APIParam_4  pointer to the array of acceptable xmlRegExecNextValues_APIParam_4.
Since they are supposed to be encoded in UTF-8 or an encoding with 8bit based chars, we assume a termination mark of '0'.
xmlNodeIsText_APIName returns  1 yes, 0 no.
xmlDllMain_APIParam_3 .
xmlNewValidCtxt_APIName returns  NULL if not, otherwise the new validation context structure.
Serialize text  attribute  values to an xml simple buffer.
Search the DTD for the description of this qualified  attribute  on this element.
Automatic support for ZLIB/Compress compressed document is provided by default if found at compile-time.
xmlSaveSetAttrEscape_APIParam_2  the escaping function.
xmlStringLenGetNodeList_APIParam_1  the document.
xmlParseElementDecl_APIParam_1  an XML parser context.
The xmlXPathSetContextNode_APIParam_1 must be in the same document as that associated with the context.
xmlTextReaderReadAttributeValue_APIParam_1  the  xmlTextReaderPtr  used.
xmlTextWriterWriteVFormatDTD_APIParam_4  the system identifier, which is the URI of the DTD.
xmlSwitchInputEncoding_APIParam_3  the encoding xmlSwitchInputEncoding_APIParam_3.
End the current xml PI.
isolat1ToUTF8_APIParam_1  a po.
xmlOutputBufferWriteEscape_APIParam_2  a zero terminated UTF-8 string.
[CDATA[' [20] Data ::= (Char* - (Char* ']]>' Char*)) [21] CDEnd ::= ']]>'.
xmlTextWriterWriteElementNS_APIParam_2 .
xmlAutomataNewTransition2_APIParam_2  the starting point of the transition xmlAutomataNewTransition2_APIParam_3  the target point of the transition or NULL.
xmlXPathWrapString_APIName returns  the newly created object.
htmlSaveFileFormat_APIName returns  the number of byte written or -1 in case of failure.
Do a recursive copy of the xmlCopyNodeList_APIParam_1 list.
xmlStrcasestr_APIParam_1  the  xmlChar  * array (haystack).
xmlSAX2EntityDecl_APIParam_1  the user data (XML parser context).
xmlValidateNotationDecl_APIParam_3  a notation definition.
Implement the subtraction operation on XPath objects: The numeric operators convert their operands to numbers as if by calling the number function.
Free up the structures associated to a namespace.
xmlPreviousElementSibling_APIName returns  the previous element sibling or NULL if not available.
xmlSchemaValidateDoc_APIParam_1  a schema validation context.
Creation of a new node containing a comment.
a strndup for char's to xmlChar's.
xmlSAX2InitDefaultSAXHandler_APIParam_2  flag if non-zero sets the handler xmlSAX2InitDefaultSAXHandler_APIParam_2 procedure.
xmlListDataCompare_APIName returns  0 is equality, -1 or 1 otherwise depending on the ordering.
xmlStrstr_APIParam_1  the  xmlChar  * array (haystack).
xmlXPathNextNamespace_APIName returns  the next element following that axis.
Free the NodeSet compound (not the actual nodes !).
Checks that the value conforms to the LanguageID production: NOTE: this is somewhat deprecated, those productions were removed from the XML Second edition.
Append the extra substring to the node xmlNodeAddContent_APIParam_2.
xmlListReverseSearch_APIParam_1  a list.
Implements the EXSLT - Sets has-same-nodes function: boolean set:has-same-node(node-set, node-set).
xmlRelaxNGValidateFullElement_APIParam_3  an element instance.
xmlC14NIsVisibleCallback_APIParam_1  user data.
attributeDeclSAXFunc_APIParam_4  the  attribute  attributeDeclSAXFunc_APIParam_4.
'>' [ VC: Root Element Type ] The Name in the document type declaration must match the element type of the root element.
xmlTextWriterStartAttributeNS_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlCopyDtd_APIParam_1  the xmlCopyDtd_APIParam_1.
xmlXPathNextAttribute_APIName returns  the next element following that axis.
Unlink and free one attribute, all the content is freed too Note this doesn't work for namespace definition attributes.
xmlSchemaValidateLengthFacet_APIParam_2  the xmlSchemaValidateLengthFacet_APIParam_2 to check.
[ WFC: No < in Attribute Values ] handled in xmlParseAttValue_APIName.
Insert node xmlParserAddNodeInfo_APIParam_2 record into the sorted sequence.
Create a buffered parser input for the progressive parsing of a FILE * buffered C I/O.
htmlDocDumpMemoryFormat_APIParam_2  OUT the memory pointer.
Write a DTD.
xmlXPathNextAncestor_APIParam_1  the XPath Parser context.
xmlXPathSubstringAfterFunction_APIParam_2  the number of arguments.
Use RelaxNG schema to validate the document as it is processed.
xmlTextWriterWriteFormatElement_APIParam_1  xmlTextWriterWriteFormatElement_APIParam_4  xmlTextWriterPtr.
xmlXPathPositionFunction_APIParam_1  the XPath Parser context.
xmlSchemaValidatePredefinedType_APIParam_1  the predefined xmlSchemaValidatePredefinedType_APIParam_1.
xmlXPathRegisterFunc_APIParam_1  the XPath context.
xmlSAXParseDTD_APIParam_1  the SAX handler block.
xmlStringLenDecodeEntities_APIName returns  A newly allocated string with the substitution done.
Initialize the default XML SAX2 handler.
xmlNanoFTPDele_APIParam_1  an FTP context.
Reads the contents of the current node, including child nodes and markup.
xmlStrcasestr_APIName returns  the  xmlChar  * for the first occurrence or NULL.
xmlOutputBufferCreateFilenameDefault_APIName returns  the old value of the registration function.
xmlNewNsPropEatName_APIParam_2  the.
Pops a node-set from the stack, handling conversion if needed.
Since  attribute  value and end of line normalizations are a MUST in the XML specification only the value true is accepted.
xmlThrDefRegisterNodeDefault_APIName returns .
xmlCreatePushParserCtxt_APIParam_1  a SAX handler.
xmlMemMalloc_APIParam_1  an int specifying the xmlMemMalloc_APIParam_1 in byte to allocate.
Moves the position of the current instance to the  attribute  with the specified local name and namespace URI.
xmlPatternMaxDepth_APIParam_1  the precompiled pattern.
xmlDOMWrapCloneNode_APIParam_7  descend into child if set.
xmlURIUnescapeString_APIParam_2  the length in bytes to unescape (or <= 0 to indicate full string).
@utf is assumed to be null-terminated.
Create a buffered output for the progressive saving to a  xmlBuffer.
xmlXPathVariableLookupFunc_APIParam_3  the namespace xmlXPathVariableLookupFunc_APIParam_2 hosting this variable.
UTF8Toisolat1_APIParam_2  the length of @out UTF8Toisolat1_APIParam_3  a pointer to an array of UTF-8 chars.
Do a copy of the namespace.
Get how much memory is used by a dictionary for strings Added in 2.9.0. xmlDictGetUsage_APIParam_1  the dictionary.
htmlSetMetaEncoding_APIParam_2  the htmlSetMetaEncoding_APIParam_2 string.
xmlNanoFTPQuit_APIName returns  -1 in case of error, 0 otherwise.
xmlSchemaGetFacetValueAsULong_APIName returns  the value as a long.
xmlAutomataNewState_APIName returns  the new state or NULL in case of error.
xmlParserValidityWarning_APIParam_2  xmlParserValidityWarning_APIParam_3 message to display/transmit xmlParserValidityWarning_APIParam_3  extra parameters xmlParserValidityWarning_APIParam_3 the message display.
xmlXPathSumFunction_APIParam_2  the number of arguments.
xmlStrVPrintf_APIParam_1  the result buffer.
Create a new  xmlNewTextWriter  structure with @uri as output.
xmlXPathVariableLookupNS_APIParam_1  the XPath context.
Determine the standalone status of the document being read.
htmlIsBooleanAttr_APIParam_1  the htmlIsBooleanAttr_APIParam_1 of the  attribute  to check.
xmlCtxtReadDoc_APIName returns  the resulting document tree.
Finds the first closest previous sibling of the xmlPreviousElementSibling_APIParam_1 which is an element xmlPreviousElementSibling_APIParam_1.
if stat is not available on the target machine,.
xmlDictCreateSub_APIParam_1  an existing dictionary.
xmlSchemaCheckFacet_APIParam_1  the xmlSchemaCheckFacet_APIParam_1.
This will drop Attributes and Namespace declarations.
xmlXPathNewParserContext_APIName returns  the  xmlXPathParserContext  just allocated.
Lookup for a xmlModuleSymbol_APIParam_3 address in the given xmlModuleSymbol_APIParam_1 NOTE: that due to portability issues, behaviour can only be guaranteed with @name using ASCII.
xmlNewDocElementContent_APIParam_1  the document.
Create a buffered parser output.
To allow content encoding detection, @size should be >= 4 The value of @filename is used for fetching external entities and error/warning reports.
xmlHashUpdateEntry_APIParam_3 userdata  a pointer to the xmlHashUpdateEntry_APIParam_3 xmlHashUpdateEntry_APIParam_4  the deallocator function for replaced item (if any).
xmlSchemaValidCtxtGetOptions_APIParam_1  a schema validation context.
xmlSAX2EndDocument_APIParam_1  the user data (XML parser context).
"1.0".
xmlTextWriterWriteVFormatComment_APIParam_3  pointer to the first member of the variable argument list.
routine to create an XML buffer.
xmlRelaxNGGetParserErrors_APIParam_3  the warning callback result xmlRelaxNGGetParserErrors_APIParam_4  contextual data for the callbacks result.
xmlNewPI_APIName returns  a pointer to the new node object.
xmlParseDocTypeDecl_APIParam_1  an XML parser context.
xmlXPathLeadingSorted_APIName returns  the nodes in @nodes1 that precede the first node in @nodes2 in document order, @nodes1 if @nodes2 is NULL or empty or an empty node-set if @nodes1 doesn't contain @nodes2.
xmlSAX2UnparsedEntityDecl_APIParam_2  The xmlSAX2UnparsedEntityDecl_APIParam_2 of the entity.
xmlCtxtReadIO_APIName returns  the resulting document tree.
xmlDumpAttributeDecl_APIParam_1  the XML buffer output.
xmlSchemaValidateLengthFacet_APIName returns  0 if the xmlSchemaValidateLengthFacet_APIParam_3 is valid, a positive error code otherwise and -1 in case of an internal or API error.
xmlTextWriterEndCDATA_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlSchematronSetValidStructuredErrors_APIParam_1  a Schematron validation context.
xmlIOFTPMatch_APIName returns  1 if matches, 0 otherwise.
S?
xmlXPathPopNumber_APIName returns  the number.
[ VC: One ID per Element Type ] No element type may have more than one ID  attribute  specified.
xmlExternalEntityLoader_APIName returns  the entity input parser.
Moves the position of the current instance to the  attribute  with the specified qualified xmlTextReaderMoveToAttribute_APIParam_2.
xmlTextConcat_APIParam_2  the xmlTextConcat_APIParam_2.
Callback used in the I/O Output API to detect if the current handler can provide output fonctionnalities for this resource.
xmlUTF8Strloc_APIParam_2  the UTF8 character to be found.
htmlCtxtReadFile_APIParam_3  the document htmlCtxtReadFile_APIParam_3, or NULL.
xmlCopyDocElementContent_APIName returns  the new  xmlElementContentPtr  or NULL in case of error.
In case of UTF8 sequence conversion errors for the given encoder, the content will be automatically remapped to a CharRef sequence.
xmlSAXParseFile_APIParam_3  work in xmlSAXParseFile_APIParam_3 mode, i.e.
xmlReadMemory_APIName returns  the resulting document tree.
xmlReaderNewIO_APIParam_4  an I/O handler.
xmlSchemaIsValid_APIParam_1  the schema validation context.
Add a list of node at the end of the child list of the xmlAddChildList_APIParam_1 merging adjacent TEXT nodes (@cur may be freed).
Create the internal subset of a document.
The entity loader, to control the loading of external entities, the application can either: - override this xmlSAX2ResolveEntity_APIName callback in the SAX block - or better use the xmlSetExternalEntityLoader_APIName function to set up it's own entity resolution routine.
xmlStrcasecmp_APIName returns  the integer result of the comparison.
xmlRelaxNGValidateFullElement_APIName returns  1 if no validation problem was found or -1 in case of error.
xlinkExtendedLinkSetFunk_APIParam_1  user data pointer.
xmlAutomataNewOnceTrans2_APIName returns  the target state or NULL in case of error.
xmlCatalogConvert_APIName returns  the number of entries converted if successful, -1 otherwise.
xmlNanoHTTPReturnCode_APIParam_1  the HTTP context.
Implement the substring-before_APIName XPath function string substring-before(string, string) The substring-before function returns the substring of the first argument string that precedes the first occurrence of the second argument string in the first argument string, or the empty string if the first argument string does not contain the second argument string.
xmlMemStrdupLoc_APIParam_1  the initial string pointer.
[67] Reference ::= EntityRef | CharRef [68] EntityRef ::= '&' Name ';' [ WFC: Entity Declared ] the Name given in the entity  reference  must match that in an entity declaration, except that well-formed documents need not declare any of the following entities: amp, lt, gt, apos, quot.
xmlXPathNextParent_APIParam_1  the XPath Parser context.
xmlGetExternalEntityLoader_APIName returns  the  xmlExternalEntityLoader  function pointer.
Push one input token in the execution context.
xmlTextWriterWriteDTDElement_APIParam_2  the xmlTextWriterWriteDTDElement_APIParam_2 of the DTD element.
xmlListPopFront_APIParam_1  a list.
xmlTextWriterWriteFormatDTDElement_APIParam_3  xmlTextWriterWriteFormatDTDElement_APIParam_3 string (see printf) xmlTextWriterWriteFormatDTDElement_APIParam_4  extra parameters xmlTextWriterWriteFormatDTDElement_APIParam_4 the xmlTextWriterWriteFormatDTDElement_APIParam_3.
xmlGcMemGet_APIParam_5  place to save the strdup_APIName function in use.
xmlTextReaderConstString_APIName returns  an interned copy of the string or NULL in case of error.
xmlXPathNodeSetAddUnique_APIParam_1  the initial node set.
xmlIsCombining_APIName returns  true if argument valid, false otherwise.
If @name has a prefix, then the corresponding namespace-binding will be used, if in scope; it is an error it there's no such ns-binding for the prefix in scope.
cdataBlockSAXFunc_APIParam_3  the block length.
This is the prototype for a extended link detection callback.
xmlNanoHTTPSave_APIParam_1  the HTTP context.
xmlSchematronValidityErrorFunc_APIParam_1  xmlSchematronValidityErrorFunc_APIParam_3 validation context.
xmlURIEscape_APIName returns  an copy of the string, but escaped 25 May 2001 Uses  xmlParseURI  and  xmlURIEscapeStr  to try to escape correctly according to RFC2396.
xmlCreateIntSubset_APIParam_1  the document pointer.
xmlAutomataNewCountTrans2_APIParam_5  the second input string associated xmlAutomataNewCountTrans2_APIParam_3 that transition.
This takes xmlSchemaValidateFacetWhtsp_APIParam_4 normalization according to the specified whitespace types into account.
xmlParseBalancedChunkMemory_APIParam_6  the return value for the set of parsed nodes.
This function checks if a tag is autoclosed by one of it's child.
xmlXPathIntersection_APIParam_1  a node-set.
This function try to open a connection to the indicated resource via HTTP using the given @method, adding the given extra xmlNanoHTTPMethod_APIParam_5 and the xmlNanoHTTPMethod_APIParam_3 buffer for the request content.
xmlTextWriterWriteDTDNotation_APIParam_3  the public identifier, which is an alternative to the system identifier.
xmlGetID_APIParam_1  pointer to the document.
xmlXPathContainsFunction_APIParam_2  the number of arguments.
xmlACatalogAdd_APIParam_1  a Catalog.
xmlC14NExecute_APIParam_1  the XML document for canonization.
Currently only passive mode is supported.
htmlIsScriptAttribute_APIName returns  1 is the  attribute  is a script 0 otherwise.
xmlRelaxNGNewDocParserCtxt_APIParam_1  a preparsed document tree.
Resolving Relative References to Absolute Form.
Ensures that ns-references point to ns-decls hold on element-nodes.
xmlTextWriterWriteFormatAttributeNS_APIParam_4  namespace xmlTextWriterWriteFormatAttributeNS_APIParam_6.
xmlXPathFloorFunction_APIParam_2  the number of arguments.
xmlCreateIOParserCtxt_APIParam_4  an I/O close function.
xmlLoadExternalEntity_APIName returns  the  xmlParserInputPtr  or NULL.
xmlOutputBufferClose_APIParam_1  a buffered output.
endElementNsSAX2Func_APIParam_1  the user data (XML parser context).
The string is deallocated with the xmlTextReaderConstEncoding_APIParam_1.
xmlSAX2ExternalSubset_APIParam_2  the root element xmlSAX2ExternalSubset_APIParam_2.
xmlTextWriterWriteDTDExternalEntityContents_APIParam_2  the public identifier, which is an alternative to the system identifier.
xmlURIUnescapeString_APIName returns  a copy of the string, but unescaped, will return NULL only in case of error.
xmlParserInputBufferCreateFilenameDefault_APIName returns  the old value of the registration function.
Removes and normalize white spaces in the string.
xmlIsBlankNode_APIParam_1  the xmlIsBlankNode_APIParam_1.
xmlNewInputStream_APIParam_1  an XML parser context.
xmlDumpEntitiesTable_APIParam_2  An entity xmlDumpEntitiesTable_APIParam_2.
htmlCtxtReadFd_APIName returns  the resulting document tree.
Creates a new context for manipulating expressions.
htmlSAXParseFile_APIParam_2  a free form C string describing the HTML document htmlSAXParseFile_APIParam_2, or NULL.
Unregisters all aliases.
Try to override the limitation of lines being store in 16 bits ints if  XML_PARSE_BIG_LINES  parser option was used.
xmlThrDefLineNumbersDefaultValue_APIName returns .
xmlNewNsPropEatName_APIName returns  a pointer to the  attribute.
xmlXPathIdFunction_APIParam_2  the number of arguments.
htmlEncodeEntities_APIParam_5  the quote character to escape (' or ") or zero.
xmlUTF8Strndup_APIParam_2  the xmlUTF8Strndup_APIParam_2 of @utf (in chars).
xmlSAX2HasInternalSubset_APIName returns  1 if true.
xmlDeregisterNodeFunc_APIParam_1  the current xmlDeregisterNodeFunc_APIParam_1.
Create a new dictionary.
[78] extParsedEnt ::= TextDecl?
xmlSAX2EntityDecl_APIParam_3  the entity xmlSAX2EntityDecl_APIParam_3.
xmlScanName_APIName returns  the Name parsed or NULL.
xmlNanoHTTPMimeType_APIParam_1  the HTTP context.
and if so whether it is valid or deprecated.
xmlRegExecNextValues_APIName returns 0 in case of success or -1 in case of error.
Setup an xmltextReader to parse a preparsed XML document.
External entity loaders types.
xmlXPathNewBoolean_APIName returns  the newly created object.
xmlXPtrNewContext_APIParam_1  the XML document.
UTF8ToHtml_APIParam_4  the length of @in.
Converts a node-set to its number value.
xmlFreeTextWriter_APIParam_1  the  xmlTextWriterPtr.
getParameterEntitySAXFunc_APIParam_1  the user data (XML parser context).
xmlXPathNextPrecedingSibling_APIName returns  the next element following that axis.
xmlStrPrintf_APIParam_4  extra parameters xmlStrPrintf_APIParam_4 the message.
Remove the last instance associated to xmlListRemoveLast_APIParam_2 in the list.
xmlAddElementDecl_APIParam_3  the entity xmlAddElementDecl_APIParam_3.
Extract a substring of a given string.
xmlXPathParseName_APIParam_1  the XPath Parser context.
The string will be deallocated with the xmlTextReaderConstString_APIParam_1.
xmlNewDocNodeEatName_APIParam_1  the document.
Set the callback functions used to handle errors for a validation context.
Do a recursive copy of the xmlDocCopyNodeList_APIParam_2 list.
xmlCopyCharMultiByte_APIName returns  the number of  xmlChar  written.
Create a document saving context serializing to a file descriptor with the xmlSaveToIO_APIParam_4 and the xmlSaveToIO_APIParam_5 given.
xmlExpNewOr_APIParam_3  xmlExpNewOr_APIParam_3 expression.
See xmlLinkGetData_APIName returns.
xmlUTF8Size_APIName returns  the numbers of bytes in the character, -1 on format error.
xmlSchemaValidateFile_APIParam_3  a future set of xmlSchemaValidateFile_APIParam_3, currently unused.
TODO: this seems not in use anymore, the namespace handling is done on top of the SAX interfaces, i.e.
xmlDebugDumpNodeList_APIParam_1  the FILE * for the xmlDebugDumpNodeList_APIParam_1.
Convenient way to turn bool into text.
If you don't declare the namespace within those you will be in troubles !!!
htmlSaveFile_APIParam_2  the document.
Create a new property tagged with a namespace and carried by a xmlNewNsPropEatName_APIParam_1.
htmlReadDoc_APIParam_2  the base htmlReadDoc_APIParam_2 to use for the document.
xmlRelaxNGGetParserErrors_APIName returns  -1 in case of failure, 0 otherwise.
xmlNanoHTTPRead_APIName returns  the number of byte read.
Write the content of the string in the output I/O buffer This routine escapes the caracters and then handle the I18N transcoding from internal UTF-8 The buffer is lossless, i.e.
xmlListDup_APIParam_1  the list.
xmlLoadCatalog_APIParam_1  a file path.
xmlCatalogAdd_APIName returns  0 if successful, -1 otherwise.
xmlNodeDumpOutput_APIParam_2  the document.
xmlMemDisplayLast_APIParam_1  a FILE descriptor used as the output file, if NULL, the result is written to the file .memorylist.
URI-reference = URI / relative-ref.
xmlAutomataNewNegTrans_APIParam_4  the first input string associated xmlAutomataNewNegTrans_APIParam_3 that transition.
htmlSaveFile_APIName returns  the number of byte written or -1 in case of failure.
xmlSAX2GetParameterEntity_APIParam_1  the user data (XML parser context).
xmlBufferResize_APIParam_1  the buffer to re.
xmlReaderNewFd_APIParam_1  an XML xmlReaderNewFd_APIParam_1.
The resulting byte array is zero terminated, though the last 0 is not included in the returned xmlDocDumpMemory_APIParam_3.
xmlTextReaderSetup_APIParam_4  the document xmlTextReaderSetup_APIParam_4, or NULL.
xmlSchemaGetParserErrors_APIParam_2  the error callback result.
Clear the top input callback from the input stack.
xmlNewTextWriterTree_APIParam_1  xmlDocPtr.
Write an base64 encoded xml text.
Free up all the memory associated with catalogs.
xmlXPathVariableLookup_APIParam_2  the variable xmlXPathVariableLookup_APIParam_2.
xmlAllocParserInputBuffer_APIParam_1  the charset encoding if known.
xmlIsID_APIParam_1  the document.
Try to lookup the catalog resource for a system ID.
xmlXPathStartsWithFunction_APIParam_2  the number of arguments.
xmlNewEntity_APIParam_5  the entity system ID if available.
Callback used in the I/O Output API to write to the resource.
xmlParseBalancedChunkMemory_APIName returns  0 if the chunk is well balanced, -1 in case of args problem and the parser error code otherwise.
xmlLineNumbersDefault_APIParam_1  int 0 or 1. xmlLineNumbersDefault_APIName returns  the last value for 0 for no substitution, 1 for substitution.
Types are  XML_BUFFER_ALLOC_EXACT  - use exact sizes, keeps memory usage down  XML_BUFFER_ALLOC_DOUBLEIT  - double buffer when extra needed, improves performance.
Remove the all data in the list.
This will dump the content of the element xmlDumpElementTable_APIParam_2 as an XML DTD definition.
xmlXPathDistinct_APIName returns  a subset of the xmlXPathDistinct_APIParam_1 contained in @nodes, or @nodes if it is empty.
xmlTextReaderNext_APIName returns  1 if the node was read successfully, 0 if there is no more nodes to read, or -1 in case of error.
xmlSAX2GetLineNumber_APIName returns  an int.
xmlNewNs_APIName returns  a new namespace pointer or NULL.
xmlCheckFilename_APIName returns  1. if stat fails, returns 0 (if calling stat on the filename fails, it can't be right).
xmlCtxtReadFile_APIParam_2  a file or URL.
Create a buffered output for the progressive saving to a FILE * buffered C I/O.
xmlTextReaderConstXmlLang_APIName returns  the xmllang value or NULL if none exists.
xmlReaderForIO_APIParam_3  an I/O handler.
xmlAddRef_APIName returns  NULL if not, otherwise the new  xmlRefPtr.
xmlShellCmd_APIParam_1  a shell context.
xmlXPathSubValues_APIParam_1  the XPath Parser context.
Dump an XML node, recursive behaviour,children are printed too.
xmlTextWriterStartDocument_APIParam_2  the xml xmlTextWriterStartDocument_APIParam_2 ("1.0") or NULL for default ("1.0").
Load an external entity, note that the use of this function for unparsed entities may generate problems.
xmlXPathNodeSetFreeNs_APIParam_1  the XPath namespace node found in a nodeset.
xmlNanoHTTPRead_APIParam_3  the buffer length.
@ns and @content parameters are optional (NULL).
xmlReaderForDoc_APIParam_2  the base xmlReaderForDoc_APIParam_2 to use for the document.
flushes the output I/O channel.
xmlCatalogAddLocal_APIName returns  the updated list.
the caller has to free the node tree.
Write a formatted xmlTextWriterWriteFormatPI_APIParam_4 xmlTextWriterWriteFormatPI_APIParam_1  xmlTextWriterWriteFormatPI_APIParam_4  xmlTextWriterPtr.
Implements the XML shell function "save" Write the current document to the xmlShellSave_APIParam_2, or it's original name.
xmlSchemaValidateFile_APIName returns  0 if the document is valid, a positive error code number otherwise and -1 in case of an internal or API error.
Close an HTTP I/O channel.
htmlNewDoc_APIParam_1  htmlNewDoc_APIParam_1 for the dtd, or NULL.
This function try to fetch the indicated resource via HTTP GET and save it's content in the file.
xmlOutputBufferGetContent_APIParam_1  an  xmlOutputBufferPtr.
xmlStrVPrintf_APIParam_4  extra parameters for the message.
Otherwise, returns the local part, and xmlSplitQName2_APIParam_2 is updated to get the Prefix.
Search for an  attribute  associated to a xmlHasNsProp_APIParam_1 This  attribute  has to be anchored in the namespace specified.
xmlReaderNewDoc_APIParam_1  an XML xmlReaderNewDoc_APIParam_1.
xmlSAX2EntityDecl_APIParam_6  the entity value (without processing).
Deallocate a Schematron structure.
if stat succeeds and the file is a directory, returns 2. otherwise returns 1.
xmlNewNs_APIParam_1  the element carrying the namespace.
This doesn't work with immutable buffers as they can't be reset.
xmlNewDocComment_APIName returns  a pointer to the new node object.
Note that namespace nodes can't be unlinked as they do not have pointer to their parent.
Flush a document saving context, i.e.
xmlTextWriterWriteVFormatDTDInternalEntity_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlNewEntity_APIParam_2  the entity xmlNewEntity_APIParam_2.
Best would be to rewrite it differently.
xmlTextReaderSetStructuredErrorHandler_APIParam_3  a user argument to pass to the callback function.
xmlSchemaValidityLocatorFunc_APIName returns  0 in case of success and -1 in case of error.
xmlOutputBufferCreateFilename_APIParam_3  the xmlOutputBufferCreateFilename_APIParam_3 ration (0 none, 9 max).
htmlReadFd_APIParam_2  the base htmlReadFd_APIParam_2 to use for the document.
Default handling of defined entities, when should we define a new input stream ?
Reset a push parser context.
xmlSchemaFreeParserCtxt_APIParam_1  the schema parser context.
Function to reset the xmlSetGenericErrorFunc_APIParam_2 and the error context for out of context error messages.
Determine whether the current node is a namespace declaration rather than a regular attribute.
xmlTextReaderByteConsumed_APIName returns  the index in bytes from the beginning of the entity or -1 in case the index could not be computed.
xmlTextConcat_APIName returns  -1 in case of error, 0 otherwise.
xmlNanoHTTPAuthHeader_APIParam_1  the HTTP context.
xmlValidatePushElement_APIParam_2  a document instance.
xmlXPathCastToNumber_APIName returns  the number value.
xmlAutomataNewCountTrans_APIParam_2  the starting point of the transition xmlAutomataNewCountTrans_APIParam_3  the target point of the transition or NULL.
NOTE that the file descriptor will not be closed when the xmlReaderNewFd_APIParam_1 is closed or reset.
xmlSchemaCheckFacet_APIParam_2  the schema type definition.
xmlSchemaValidityLocatorFunc_APIParam_1  user provided context.
setDocumentLocatorSAXFunc_APIParam_2  A SAX Locator.
[ VC: Notation Attributes ] Values of this type must match one of the notation names included in the declaration; all notation names in the declaration must be declared.
xmlParseAttribute_APIName returns  the  attribute  name, and the xmlParseAttribute_APIParam_2 in *value.
Find the userdata specified by the (@name, @name2, @name3) tuple.
xmlValidateOneAttribute_APIParam_4  an  attribute  instance.
xmlNewStringInputStream_APIName returns  the new input stream.
valuePush_APIName returns  the number of items on the valuePush_APIParam_2 stack.
xmlShellWrite_APIName returns  0 or -1 in case of error.
xmlSchemaValidateListSimpleTypeFacet_APIName returns  0 if the xmlSchemaValidateListSimpleTypeFacet_APIParam_2 is valid, a positive error code number otherwise and -1 in case of an internal error.
xmlReadIO_APIParam_2  an I/O close function.
xmlShell_APIParam_3  the line reading function xmlShell_APIParam_4  the xmlShell_APIParam_4 FILE*, defaults to stdout if NULL.
xmlNanoFTPRead_APIParam_1  the FTP context.
xmlNanoFTPQuit_APIParam_1  an FTP context.
xmlShellPrintXPathResult_APIParam_1  a valid result generated by an xpath evaluation.
xmlTextWriterWriteVFormatRaw_APIParam_2  xmlTextWriterWriteVFormatRaw_APIParam_2 string (see printf).
Pop the element end from the RelaxNG validation stack.
Save a subtree starting at the xmlSaveTree_APIParam_2 parameter to a saving context TODO: The function is not fully implemented yet as it does not return the byte count but 0 instead.
Lookup a type in the default XML Schemas type library.
xmlSetupParserForBuffer_APIParam_3  a file name.
xmlFreeTextReader_APIParam_1  the  xmlTextReaderPtr.
Compare 2 values.
The parsing flags @options are a combination of xmlParserOption.
Compile an XPath expression.
xmlDeregisterNodeDefault_APIParam_1  function pointer to the new DeregisterNodeFunc.
Implements the XML shell function "dir" dumps informations about the xmlShellDir_APIParam_3 (namespace, attributes, content).
AttValue) [ VC: Required Attribute ] if the default declaration is the keyword #REQUIRED, then the  attribute  must be specified for all elements of the type in the attribute-list declaration.
Start an xml element.
xmlNewDtd_APIName returns  a pointer to the new DTD structure.
xmlPathToURI_APIName returns  a new URI, or a duplicate of the xmlPathToURI_APIParam_1 parameter if the construction fails.
UNUSED: by default the DOM building will use characters.
xmlSchemaValidateDoc_APIName returns  0 if the document is schemas valid, a positive error code number otherwise and -1 in case of internal or API error.
xmlAutomataNewCountTrans2_APIParam_6  the minimum successive occurences of xmlAutomataNewCountTrans2_APIParam_4.
xmlRegisterNodeDefault_APIParam_1  function pointer to the new RegisterNodeFunc.
Provides the number of attributes of the current node.
xmlXPathFuncLookupFunc_APIName returns  the XPath function or NULL if not found.
xmlTextWriterWriteFormatAttributeNS_APIParam_2 .
xmlTextWriterWriteVFormatDTDAttlist_APIParam_2  the xmlTextWriterWriteVFormatDTDAttlist_APIParam_2 of the DTD ATTLIST.
xmlXPathRegisterVariable_APIParam_1  the XPath context.
xmlTextReaderDepth_APIParam_1  the  xmlTextReaderPtr  used.
xmlHashScan3_APIParam_1  the hash xmlHashScan3_APIParam_1.
xmlBufferShrink_APIParam_2  the number of  xmlChar  to remove.
Finds the current number of child nodes of that element which are element nodes.
Deprecated call.
xmlXPathVariableLookup_APIName returns  a copy of the value or NULL if not found.
htmlCtxtReadIO_APIParam_6  the document htmlCtxtReadIO_APIParam_6, or NULL.
Searches the language of a node, i.e.
entityDeclSAXFunc_APIParam_4  The public ID of the entity.
xmlRegexpExec_APIParam_2  the value to check against the regular expression.
xmlNewEntity_APIParam_3  the entity xmlNewEntity_APIParam_3 XML_xxx_yyy_ENTITY.
xmlXIncludeProcessTreeFlags_APIName returns  0 if no substitution were done, -1 if some processing failed or the number of substitutions done.
xmlListSort_APIParam_1  a list.
xmlRelaxNGNewParserCtxt_APIParam_1  the location of the schema.
xmlReaderNewWalker_APIParam_2  a preparsed document.
xmlXPathIntersection_APIName returns  a node set comprising the nodes that are within both the node sets passed as arguments.
Cleanup the HTTP protocol layer.
xmlShellSave_APIParam_2  the file name (optional).
xmlXPathCompareValues_APIName returns  1 if the comparison succeeded, 0 if it failed.
xmlExpNewSeq_APIName returns  the node or NULL in case of error.
xmlHashUpdateEntry3_APIParam_5.
xmlCreateFileParserCtxt_APIName returns  the new parser context or NULL.
xmlRegexpIsDeterminist_APIName returns  1 if it yes, 0 if not and a negative value in case of error.
Converts a string to its boolean value.
xmlTextWriterWriteDTDExternalEntity_APIParam_6  the xml notation xmlTextWriterWriteDTDExternalEntity_APIParam_3.
startElementNsSAX2Func_APIParam_4  the element namespace name if available.
parse an XML file from the filesystem or the network.
xmlFreeEntitiesTable_APIParam_1  An entity xmlFreeEntitiesTable_APIParam_1.
xmlListRemoveLast_APIParam_1  a list.
xmlHashSize_APIParam_1  the hash xmlHashSize_APIParam_1.
xmlSchemaValidityWarningFunc_APIParam_2  xmlSchemaValidityWarningFunc_APIParam_3 message xmlSchemaValidityWarningFunc_APIParam_3  extra arguments.
xmlExpGetLanguage_APIParam_4  the allocated length of @list.
xmlParseNotationDecl_APIParam_1  an XML parser context.
xmlFileMatch_APIParam_1  the URI for matching.
xmlNanoHTTPMethodRedir_APIParam_6  the extra xmlNanoHTTPMethodRedir_APIParam_6.
xmlStringDecodeEntities_APIParam_2  the input string.
xmlRemoveRef_APIParam_1  the document.
ing transformation data structure.
xmlSchemaCompareValuesWhtsp_APIParam_4  the whitespace value of xmlSchemaCompareValuesWhtsp_APIParam_3.
xlinkGetDefaultDetect_APIName returns  the current function or NULL;.
xmlXPtrEval_APIParam_2  the XPointer context.
xmlGetFeaturesList_APIParam_1  the length of the features name array (input/output).
xmlSAXParseMemoryWithData_APIParam_3  the xmlSAXParseMemoryWithData_APIParam_3 of the array.
Automatic support for ZLIB/Compress compressed document is provided by default if found at compile-time and for file accesses.
xmlGetID_APIName returns  NULL if not found, otherwise the  xmlAttrPtr  defining the xmlGetID_APIParam_2.
xmlTextWriterFullEndElement_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlSplitQName3_APIParam_1  the full QName.
fatalErrorSAXFunc_APIParam_1 fatalErrorSAXFunc_APIParam_3 XML parser context.
A processing instruction has been parsed.
for Attribute nodes, a return from  htmlAttrAllowed  for other nodes,  HTML_NA  (no checks performed).
notationDeclSAXFunc_APIParam_3  The public ID of the entity.
xmlGetCharEncodingHandler_APIParam_1  an  xmlCharEncoding  value.
xmlParserInputBufferGrow_APIName returns  the number of chars read and stored xmlParserInputBufferGrow_APIParam_1 the buffer, or -1 xmlParserInputBufferGrow_APIParam_1 case of error.
xmlReaderForFile_APIParam_3  a combination of  xmlParserOption.
xmlFindCharEncodingHandler_APIName returns  the handler or NULL if not found.
With namespace: [NS 8] STag ::= '<' QName (S Attribute)* S?
xmlTextWriterWriteDTDAttlist_APIParam_2  the xmlTextWriterWriteDTDAttlist_APIParam_2 of the DTD ATTLIST.
xmlC14NDocSaveTo_APIParam_2  the xmlC14NDocSaveTo_APIParam_2 set to be included in the canonized image or NULL if all document xmlC14NDocSaveTo_APIParam_2 should be included.
xmlReaderForDoc_APIParam_3  the document xmlReaderForDoc_APIParam_3, or NULL.
xmlXPathNextNamespace_APIParam_2  the current  attribute  in the traversal.
xmlListCreate_APIParam_2  an optional comparison function.
Start an xml PI.
This is used to assure the next character is completely contained within the sequence.
xmlTextWriterEndDocument_APIParam_1  the  xmlTextWriterPtr.
xmlXPathRegisterNs_APIParam_1  the XPath context.
a free_APIName equivalent, with error checking.
Check that a xmlValidateQName_APIParam_1 conforms to the lexical xmlValidateQName_APIParam_2 of QName.
The value of @outlen after return is the number of octets produced.
Writes an end tag even if the element is empty.
We canot guarantee that an UTF-8 string would work, which is why xmlModuleSymbol_APIParam_2 is a const char * and not a const  xmlChar  * .
xmlUnsetProp_APIName returns  0 if successful, -1 if not found.
xmlDocDump_APIParam_2  the document.
xmlNewDocNode_APIParam_4  the XML text xmlNewDocNode_APIParam_4 if any.
xmlTextWriterWriteVFormatDTDElement_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlXPathNextPreceding_APIName returns  the next element following that axis.
xmlXPathErr_APIParam_1  a XPath parser context.
xmlSaveFormatFileTo_APIParam_2  the document.
xmlIOFTPMatch_APIParam_1  the URI for matching.
xmlNanoFTPOpen_APIName returns  an FTP context, or NULL.
xmlValidCtxtNormalizeAttributeValue_APIParam_2  the document.
xmlNanoHTTPScanProxy_APIParam_1  The proxy xmlNanoHTTPScanProxy_APIParam_1 used to initialize the proxy context.
xmlRelaxNGSetValidErrors_APIParam_2  the error function.
htmlParseChunk_APIParam_4  last htmlParseChunk_APIParam_2 indicator.
If xmlSAXParseMemoryWithData_APIParam_1 is NULL, fallback to the default DOM tree building routines.
When the argument to id is of type node-set, then the result is the union of the result of applying id to the string value of each of the nodes in the argument node-set.
Is the xmlXPathIsNodeType_APIParam_1 given a NodeType one.
a strncat for array of xmlChar's, it will extend @cur with the xmlStrncat_APIParam_3 first bytes of @add.
[74] PEDef ::= EntityValue | ExternalID [76] NDataDecl ::= S 'NDATA' S Name [ VC: Notation Declared ] The Name must match the declared name of a notation.
xmlTextReaderNamespaceUri_APIName returns  the namespace URI or NULL if not available, if non NULL it need to be freed by the caller.
xmlAutomataNewCountTrans_APIParam_6  the maximum successive occurences of xmlAutomataNewCountTrans_APIParam_4.
unparsedEntityDeclSAXFunc_APIParam_5  the unparsedEntityDeclSAXFunc_APIParam_2 of the notation.
xmlXPathFunctionLookupNS_APIParam_3  the function namespace URI.
xmlCopyProp_APIParam_1  the element where the  attribute  will be grafted.
xmlCtxtResetPush_APIParam_5  the document xmlCtxtResetPush_APIParam_5, or NULL.
xmlReaderNewMemory_APIName returns  0 in case of success and -1 in case of error.
getParameterEntitySAXFunc_APIParam_2  The entity getParameterEntitySAXFunc_APIParam_2.
xmlRegisterOutputCallbacks_APIParam_4  the  xmlOutputCloseCallback.
xmlXPathNewFloat_APIParam_1  the double value.
xmlHashScan_APIParam_1  the hash xmlHashScan_APIParam_1.
xmlThrDefSetGenericErrorFunc_APIParam_2 .
xmlStrncatNew_APIParam_3  the xmlStrncatNew_APIParam_3 of @str2 or < 0. xmlStrncatNew_APIName returns  a new  xmlChar  * or NULL.
xmlFreeInputStream_APIParam_1  an  xmlParserInputPtr.
Set the error and warning callback informations.
xmlSAX2EntityDecl_APIParam_5  The system ID of the entity.
xmlDOMWrapCloneNode_APIParam_1  the optional context for custom processing.
htmlDocContentDumpOutput_APIParam_2  the document.
xmlTextWriterWriteVFormatDTD_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
Traversal function for the "parent" direction The parent axis contains the parent of the context node, if there is one.
xmlNewDocElementContent_APIName returns  NULL if not, otherwise the new element content structure.
xmlOutputCloseCallback_APIName returns  0 or -1 in case of error.
xmlTextReaderSetup_APIParam_1  an XML xmlTextReaderSetup_APIParam_1.
xmlParseEncName_APIName returns  the encoding name value or NULL.
Print the content of the compiled regular expression.
xmlTextWriterStartPI_APIParam_2  PI xmlTextWriterStartPI_APIParam_2.
xmlSchemaCompareValuesWhtsp_APIName returns  -1 if xmlSchemaCompareValuesWhtsp_APIParam_1 < xmlSchemaCompareValuesWhtsp_APIParam_3, 0 if xmlSchemaCompareValuesWhtsp_APIParam_1 == xmlSchemaCompareValuesWhtsp_APIParam_3, 1 if xmlSchemaCompareValuesWhtsp_APIParam_1 > xmlSchemaCompareValuesWhtsp_APIParam_3, 2 if xmlSchemaCompareValuesWhtsp_APIParam_1 <> xmlSchemaCompareValuesWhtsp_APIParam_3, and -2 in case of error.
Parse an External ID or a Public ID NOTE: Productions [75] and [83] interact badly since [75] can generate 'PUBLIC' S PubidLiteral S SystemLiteral [75] ExternalID ::= 'SYSTEM' S SystemLiteral | 'PUBLIC' S PubidLiteral S SystemLiteral [83] PublicID ::= 'PUBLIC' S PubidLiteral.
Setup an xmltextReader to parse an XML from a file descriptor.
htmlCtxtReadIO_APIParam_3  an I/O close function.
xmlTextReaderConstValue_APIParam_1  the  xmlTextReaderPtr  used.
xmlStrncat_APIParam_2  the  xmlChar  * array added.
The first position is 1, and so the last position will be equal to last_APIName.
xmlSAX2StartElementNs_APIParam_1  the user data (XML parser context).
Frees an XML buffer.
See xmlBytesConsumed_APIName for more information.
xmlParseBalancedChunkMemoryRecover_APIParam_6  the return value for the set of parsed nodes.
xmlNewDocTextLen_APIParam_2  the text xmlNewDocTextLen_APIParam_2.
xmlGetDtdEntity_APIParam_2  the entity xmlGetDtdEntity_APIParam_2.
Remove the all instance associated to xmlListRemoveAll_APIParam_2 in the list.
Create a new disconnected state in the automata.
xmlXPathHasSameNodes_APIParam_1  a node-set.
xmlXPathNodeSetContains_APIParam_2  the node.
xmlAddRef_APIParam_3  the xmlAddRef_APIParam_3 name.
xmlSetProp_APIParam_2  the  attribute  xmlSetProp_APIParam_2 (a QName).
xmlReaderWalker_APIName returns  the new reader or NULL in case of error.
Set a custom escaping function to be used for text in  attribute  content.
htmlElementStatusHere_APIParam_2  HTML element.
By default, libxml submits HTTP output requests using the "PUT" method.
htmlNodeDump_APIParam_2  the document.
is handled independently as a namespace definition.
Does the validation related extra step of the normalization of  attribute  values: If the declared xmlValidNormalizeAttributeValue_APIParam_4 is not CDATA, then the XML processor must further process the normalized  attribute  xmlValidNormalizeAttributeValue_APIParam_4 by discarding any leading and trailing space (#x20) characters, and by replacing sequences of space (#x20)  characters  by single space (#x20) character.
Search in the registered set the handler able to read/write that encoding.
xmlAutomataNewTransition2_APIParam_6  xmlAutomataNewTransition2_APIParam_6 passed xmlAutomataNewTransition2_APIParam_3 the callback function if the transition is activated.
xmlNanoFTPRead_APIParam_2  a buffer.
xmlSAXUserParseMemory_APIName returns  0 in case of success or a error number otherwise.
xmlOutputBufferWriteString_APIParam_2  a zero terminated C string.
xmlHashQLookup3_APIParam_5  a second xmlHashQLookup3_APIParam_3 of the userdata.
xmlTextWriterWriteDTDNotation_APIParam_4  the system identifier, which is the URI of the DTD.
xmlParseEnumeratedType_APIParam_2  the enumeration xmlParseEnumeratedType_APIParam_2 built while parsing.
xmlSAX2StartElementNs_APIParam_3  the element namespace xmlSAX2StartElementNs_APIParam_3 if available.
Grow the available space of an XML buffer.
xmlValidNormalizeAttributeValue_APIParam_2  the parent.
xmlNodeAddContent_APIParam_2  extra xmlNodeAddContent_APIParam_2.
Hacking interface allowing to get the  xmlNodePtr  correponding to the current node being accessed by the xmlTextReader.
Read the value of a node, this can be either the text carried directly by this node if it's a TEXT node or the aggregate string of the values carried by this node child's (TEXT and ENTITY_REF).
xmlExternalEntityLoader_APIParam_3  the XML parser xmlExternalEntityLoader_APIParam_3.
xmlBuildRelativeURI_APIParam_2  the xmlBuildRelativeURI_APIParam_2 value.
xmlParseURI_APIParam_1  the URI string to analyze.
htmlSAXParseDoc_APIParam_1  a pointer to an array of  xmlChar.
xmlValidatePushCData_APIName returns  1 if no validation problem was found or 0 otherwise.
xmlSkipBlankChars_APIParam_1  the XML parser context.
xmlTextWriterWriteElement_APIParam_2  element xmlTextWriterWriteElement_APIParam_2.
xmlNewChild_APIParam_2  a. namespace if any xmlNewChild_APIParam_3  the xmlNewChild_APIParam_3 of the child.
Signature for the function doing the lookup for a suitable output method corresponding to an xmlOutputBufferCreateFilenameFunc_APIParam_1.
Provides the value of the  attribute  with the specified index relative to the containing element.
xmlXPathEvalExpression_APIParam_2  the XPath context.
xmlElemDump_APIParam_2  the document.
endElementNsSAX2Func_APIParam_3  the element namespace endElementNsSAX2Func_APIParam_3 if available.
xmlBufContent_APIParam_1  the buffer.
Increase the  reference  count of the expression.
Clear (release owned resources) and reinitialize a parser context.
xmlRecoverDoc_APIName returns  the resulting document tree or NULL in case of failure.
Pops the top element name from the name stack.
xmlIsMixedElement_APIParam_1  the document.
xmlParseDefaultDecl_APIName returns  XML_ATTRIBUTE_NONE, XML_ATTRIBUTE_REQUIRED,  XML_ATTRIBUTE_IMPLIED  or XML_ATTRIBUTE_FIXED.
xmlTextWriterWriteFormatDTD_APIParam_5  xmlTextWriterWriteFormatDTD_APIParam_5 string (see printf) xmlTextWriterWriteFormatDTD_APIParam_6  extra parameters xmlTextWriterWriteFormatDTD_APIParam_6 the xmlTextWriterWriteFormatDTD_APIParam_5.
xmlAttrSerializeTxtContent_APIParam_3  the  attribute  node.
xmlXPathNextAncestorOrSelf_APIParam_1  the XPath Parser context.
Creation of a new text node within a document.
xmlCatalogResolvePublic_APIParam_1  the public ID string.
Use xmlNewNode_APIName if a copy of @name string is is needed as new node's xmlNewNodeEatName_APIParam_2.
xmlNodeDumpOutput_APIParam_6  an optional xmlNodeDumpOutput_APIParam_6 string.
xmlXPathDivValues_APIParam_1  the XPath Parser context.
xmlRelaxNGNewDocParserCtxt_APIName returns  the parser context or NULL in case of error.
if it accepts the empty sequqnce.
xmlParserValidityError_APIParam_2  xmlParserValidityError_APIParam_3 message to display/transmit xmlParserValidityError_APIParam_3  extra parameters xmlParserValidityError_APIParam_3 the message display.
xmlRegExecPushString_APIParam_1  a regexp execution context or NULL to indicate the end.
Tries to open a control connection.
xmlXPtrWrapLocationSet_APIName returns  the newly created object.
isolat1ToUTF8_APIParam_2  the length of @out isolat1ToUTF8_APIParam_3  a pointer to an array of ISO Latin 1 chars.
Free up all the structures used by a document, tree included.
xmlIsLetter_APIParam_1  an unicode character (int).
Signature for the function doing the lookup for a suitable input method corresponding to an xmlParserInputBufferCreateFilenameFunc_APIParam_1.
Create a new input stream based on a memory xmlNewStringInputStream_APIParam_2.
xmlXPathRegisteredVariablesCleanup_APIParam_1  the XPath context.
Try to open a data connection to the server.
xmlValidateElementDecl_APIParam_3  an element definition.
xmlGetDocEntity_APIParam_1  the document referencing the entity.
Dump the current DOM tree into memory using the character encoding specified by the caller.
xmlTextReaderErrorFunc_APIParam_3  the xmlTextReaderErrorFunc_APIParam_3 of the error.
'=' S?
Parse and evaluate an XPath expression in the given context, then push the result on the context stack.
xmlBufNodeDump_APIParam_2  the document.
Take a block of UTF-8 chars xmlCharEncodingOutputFunc_APIParam_3 and try to convert it to another encoding.
xmlSchemaGetBuiltInListSimpleTypeItemType_APIName returns  the item xmlSchemaGetBuiltInListSimpleTypeItemType_APIParam_1 of @type as defined by the built-in datatype hierarchy of XML Schema Part 2 Datatypes, or NULL in case of an error.
xmlTextWriterWriteDTDExternalEntityContents_APIParam_4  the xml notation name.
Existing xmlAddEncodingAlias_APIParam_2 will be overwritten.
Use  xmlIsChar_ch  or  xmlIsCharQ  instead.
xmlReadIO_APIParam_1  an I/O read function.
a strncasecmp for xmlChar's.
xmlStreamPushAttr_APIParam_1  the xmlStreamPushAttr_APIParam_1 context.
Use xmlGetNsProp_APIName or xmlGetNoNsProp_APIName for namespace aware processing.
xmlSAX2GetPublicId_APIParam_1  the user data (XML parser context).
xmlBufferWriteQuotedString_APIParam_2  the xmlBufferWriteQuotedString_APIParam_2 to add.
xmlAddID_APIParam_3  the xmlAddID_APIParam_3 name.
xmlXIncludeProcessTreeFlagsData_APIParam_3  application xmlXIncludeProcessTreeFlagsData_APIParam_3 that will be passed to the parser context in the _private field of the parser context(s).
Traversal function for the "ancestor" direction the ancestor axis contains the ancestors of the context node; the ancestors of the context node consist of the parent of context node and the parent's parent and so on; the nodes are ordered in reverse document order; thus the parent is the first node on the axis, and the parent's parent is the second node on the axis.
xmlGetCharEncodingHandler_APIName returns  the handler or NULL if not found.
htmlAutoCloseTag_APIParam_2  The tag htmlAutoCloseTag_APIParam_2.
append the char value in the array.
xmlXPathWrapCString_APIName returns  the newly created object.
xmlListFront_APIName returns  the first element in the list, or NULL.
xmlCopyDoc_APIName returns  a new #xmlDocPtr, or NULL in case of error.
xmlXPathFloorFunction_APIParam_1  the XPath Parser context.
xmlHasFeature_APIName returns  a non-zero value if the xmlHasFeature_APIParam_1 exist, otherwise zero.
xmlNanoFTPGet_APIName returns  -1 incase of error, 0 otherwise.
xmlXPathCastNodeSetToNumber_APIName returns  the number value.
Set the structured error callback.
See also xmlInitParser_APIName which has the opposite function of preparing the library for operations.
xmlTextReaderMoveToAttributeNo_APIName returns  1 in case of success, -1 in case of error, 0 if not found.
This duplicates any string within.
xmlShell_APIParam_2  the.
xmlAutomataNewState_APIParam_1  an automata.
Creates a new XML document.
Registers the default compiled-in I/O handlers.
xmlReaderForFile_APIName returns  the new reader or NULL in case of error.
xmlSaveFileEnc_APIParam_1  the xmlSaveFileEnc_APIParam_1 (or URL).
xmlSchemaNewValidCtxt_APIParam_1  a precompiled XML Schemas.
xmlNewCDataBlock_APIParam_2  the CDATA block xmlNewCDataBlock_APIParam_2 xmlNewCDataBlock_APIParam_2.
xmlSchemaValidateFile_APIParam_2  the URI of the instance.
parse the Attribute list def for an element [54] AttType ::= StringType | TokenizedType | EnumeratedType [55] StringType ::= 'CDATA' [56] TokenizedType ::= 'ID' | 'IDREF' | 'IDREFS' | 'ENTITY' | 'ENTITIES' | 'NMTOKEN' | 'NMTOKENS' Validity constraints for  attribute  values syntax are checked in xmlValidateAttributeValue_APIName [ VC: ID ] Values of type ID must match the Name production.
xmlSchemaNewStringValue_APIParam_2 xmlSchemaNewStringValue_APIParam_1 xmlSchemaNewStringValue_APIParam_2  the xmlSchemaNewStringValue_APIParam_2.
xmlStrchr_APIParam_1  the  xmlChar  * array.
This can later be retrieved by using the tuple (@name, @name2, @name3).
For multi-threaded applications, this must be set separately for each thread.
IDREF values must match the value of some ID attribute.
xmlOutputBufferCreateIO_APIParam_1  an I/O write function.
Set the default xmlSAXDefaultVersion_APIParam_1 of SAX used globally by the library.
called when the document end has been detected.
xlinkExtendedLinkFunk_APIParam_5  pointer xlinkExtendedLinkFunk_APIParam_8 the array of locator xlinkExtendedLinkFunk_APIParam_5.
xlinkExtendedLinkFunk_APIParam_4  pointer xlinkExtendedLinkFunk_APIParam_8 the array of locator xlinkExtendedLinkFunk_APIParam_4.
Wrapper around xmlFileOpen_real that try it with an unescaped version of @filename, if this fails fallback to @filename.
xmlAddDocEntity_APIParam_5  the entity system ID if available.
xmlShellDir_APIParam_4  unused.
xmlHashRemoveEntry3_APIParam_4  a third xmlHashRemoveEntry3_APIParam_2 of the userdata xmlHashRemoveEntry3_APIParam_5  the deallocator function for removed item (if any).
xmlNodeGetLang_APIParam_1  the node being checked.
xmlTextWriterSetIndentString_APIParam_2  the  xmlChar  string.
xmlTextWriterWriteFormatRaw_APIParam_2  xmlTextWriterWriteFormatRaw_APIParam_2 string (see printf) xmlTextWriterWriteFormatRaw_APIParam_3  extra parameters xmlTextWriterWriteFormatRaw_APIParam_3 the xmlTextWriterWriteFormatRaw_APIParam_2.
If the argument is omitted it defaults to the context node.
xmlTextWriterStartElementNS_APIParam_2 .
xmlXPathTrailingSorted_APIParam_2  a node-set, sorted by document order.
xmlIOHTTPRead_APIParam_3  number of bytes to write.
flushes and close the output I/O channel and free up all the associated resources.
xmlShellLoad_APIParam_4  unused.
htmlCreatePushParserCtxt_APIParam_5  an optional file name or URI.
xmlParseBalancedChunkMemory_APIParam_3  The user data returned on SAX callbacks (possibly NULL).
xmlTextReaderNext_APIParam_1  the  xmlTextReaderPtr  used.
xmlTextWriterWriteVFormatDTD_APIParam_3  the public identifier, which is an alternative to the system identifier.
xmlLastElementChild_APIName returns  the last element child or NULL if not available.
xmlTextWriterWriteVFormatComment_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
Get an entity by getEntitySAXFunc_APIParam_2.
push one level from the xmlStreamPop_APIParam_1.
xmlDocDumpFormatMemoryEnc_APIParam_4  Character encoding to use when generating XML text.
htmlParseChunk_APIParam_2  an char array.
Write a formatted xml element.
if true a xmlSchemaValPredefTypeNodeNoNorm_APIParam_2 is computed and returned in @val.
xmlXPathRegisterNs_APIName returns  0 in case of success, -1 in case of error.
xmlTextReaderGetErrorHandler_APIParam_1  the  xmlTextReaderPtr  used.
Free up an  xmlXPathContext.
The substring function returns the substring of the first argument starting at the position specified in the second argument with length specified in the third argument.
xmlValidatePushCData_APIParam_1  the validation context.
xmlShellLoad_APIName returns  0 or -1 if loading failed.
xmlThrDefSetStructuredErrorFunc_APIParam_1 .
Converts an existing object to its boolean_APIName equivalent.
htmlCreateFileParserCtxt_APIParam_1  the htmlCreateFileParserCtxt_APIParam_1.
This function tries to read @len bytes from the existing FTP connection and saves them in @dest.
xmlSetListDoc_APIParam_1  the first element.
xmlXPathCastNodeSetToString_APIParam_1  a node-set.
xmlHashUpdateEntry3_APIName returns  0 the addition succeeded and -1 in case of error.
This function is obsolete.
nodePush_APIParam_2  the element node.
xmlRelaxNGFree_APIParam_1  a xmlRelaxNGFree_APIParam_1 structure.
xmlShellList_APIParam_3  a xmlShellList_APIParam_3.
xmlInputOpenCallback_APIName returns  an Input context or NULL in case or error.
xmlSaveToIO_APIParam_4  the xmlSaveToIO_APIParam_4 name to use or NULL.
xmlDictReference_APIParam_1  the dictionary.
xmlStrncmp_APIParam_3  the max comparison length.
xmlXPathNodeEval_APIParam_1  the xmlXPathNodeEval_APIParam_1 to to use as the context xmlXPathNodeEval_APIParam_1.
xmlXPathNextDescendant_APIName returns  the next element following that axis.
xmlAutomataNewNegTrans_APIParam_2  the starting point of the transition xmlAutomataNewNegTrans_APIParam_3  the target point of the transition or NULL.
endElementNsSAX2Func_APIParam_2  the local name of the element.
xmlNewTextWriterTree_APIParam_2  xmlNodePtr  or NULL for doc->children.
xmlSAXParseDTD_APIParam_2  a NAME* containing the External ID of the DTD.
xmlCharEncodingOutputFunc_APIParam_2  the length of @out xmlCharEncodingOutputFunc_APIParam_3  a pointer to an array of UTF-8 chars.
xmlSchemaSetValidOptions_APIName returns  0 in case of success, -1 in case of an API error.
Save the original error xmlCopyError_APIParam_2 the new place.
The remaining  characters  will be parsed so they don't need to be fed in again through xmlParseChunk.
Free the hash @dict and its contents.
xmlSAX2ProcessingInstruction_APIParam_2  the xmlSAX2ProcessingInstruction_APIParam_2 name xmlSAX2ProcessingInstruction_APIParam_3  the PI data's.
xmlAutomataNewTransition_APIParam_1  an au.
xmlOutputBufferGetSize_APIParam_1  an  xmlOutputBufferPtr.
xmlParseBalancedChunkMemoryRecover_APIParam_3  The user data returned on SAX callbacks (possibly NULL).
xmlCreateIntSubset_APIParam_2  the DTD xmlCreateIntSubset_APIParam_2.
If @to is NULL, this creates first a new target state in the automata and then adds an epsilon transition xmlAutomataNewCounterTrans_APIParam_2 the @from state xmlAutomataNewCounterTrans_APIParam_3 the target state which will be allowed only if the xmlAutomataNewCounterTrans_APIParam_4 is within the right range.
Write a formatted xml PI.
Displays the associated file and line informations for the current xmlParserPrintFileInfo_APIParam_1.
Find the userdata specified by the (@name, @name2, @name3) tuple and remove it from the hash @table.
xmlC14NExecute_APIParam_7  the output buffer to store canonical XML; this buffer MUST have encoder==NULL because C14N requires UTF-8 output.
xmlCharStrdup_APIName returns  a new  xmlChar  * or NULL.
The text node pertain to a given document.
setDocumentLocatorSAXFunc_APIParam_1  the user data (XML parser context).
xmlDumpEntityDecl_APIParam_2  An entity table.
Compare the string to the encoding schemes already known.
Otherwise the function will act as if it has been given an element-node.
xmlReplaceNode_APIParam_2  the node.
Register a new set of I/O callback for handling output.
xmlNewTextReader_APIName returns  the new  xmlTextReaderPtr  or NULL in case of error.
xmlCreateIOParserCtxt_APIParam_5  an I/O handler.
xmlCreatePushParserCtxt_APIName returns  the new parser context or NULL.
Register a callback function that will be called on error and warnings.
Do the dictionary mutex initialization.
xmlParseAttributeType_APIName returns  the  attribute  type.
xmlSchemaValidateFacetWhtsp_APIName returns  0 if the element is schemas valid, a positive error code number otherwise and -1 in case of internal or API error.
xmlXPathLastFunction_APIParam_2  the number of arguments.
htmlGetMetaEncoding_APIName returns  the current encoding as flagged in the HTML source.
Use <0 for the default number (100).
xmlSAX2InternalSubset_APIParam_3  the external ID.
xmlListRemoveLast_APIParam_2  list xmlListRemoveLast_APIParam_2.
xmlSAX2CDataBlock_APIParam_1  the user data (XML parser context).
xmlTextWriterStartElementNS_APIParam_4  namespace URI or NULL.
xmlDocDumpFormatMemory_APIParam_2  OUT the memory pointer.
xmlHashAddEntry2_APIParam_3  a second xmlHashAddEntry2_APIParam_2 of the xmlHashAddEntry2_APIParam_4 userdata  a pointer to the xmlHashAddEntry2_APIParam_4.
xmlNewDocNodeEatName_APIParam_2 .
xmlFileOpen_APIName returns  a handler or NULL in case or failure.
xmlTextReaderErrorFunc_APIParam_1  the user argument.
Lookup function.
Creation of a new Namespace.
xmlThrDefSaveNoEmptyTags_APIName returns .
xmlXPathNewFloat_APIName returns  the newly created object.
Does the final step for the dtds validation once all the subsets have been parsed basically it does the following checks described by the XML Rec - check that ENTITY and ENTITIES type attributes default or possible values matches one of the defined entities.
A schemas validation locator, a callback called by the validator.
xmlXPathNewNodeSet_APIName returns  the newly created object.
xmlSchemaGetCanonValueWhtsp_APIParam_2  the returned value.
xmlTextReaderGetParserColumnNumber_APIParam_1  the user data (XML xmlTextReaderGetParserColumnNumber_APIParam_1 context).
htmlCtxtReset_APIParam_1  an HTML parser context.
xmlSaveFlush_APIName returns  the number of byte written or -1 in case of error.
xmlTextWriterWriteFormatElement_APIName returns  xmlTextWriterWriteFormatElement_APIParam_4 bytes written (may be 0 because of buffering) or -1 in case of error.
parse Reference declarations [66] CharRef ::= '&#' [0-9]+ ';' | '&#x' [0-9a-fA-F]+ ';'.
xmlTextReaderConstXmlVersion_APIName returns  a string containing the XML version of the document or NULL in case of error.
xmlSchematronNewParserCtxt_APIParam_1  the location of the schema.
xmlMutexLock_APIName is used to lock a libxml2 token.
receiving some chars from the parser.
xmlRegNewExecCtxt_APIParam_3  the context xmlRegNewExecCtxt_APIParam_3 associated to the xmlRegNewExecCtxt_APIParam_2 in this context.
xmlNodeDump_APIParam_1  the XML buffer output.
charactersSAXFunc_APIParam_1  the user data (XML parser context).
[ WFC: Parsed Entity ] An entity  reference  must not contain the name of an unparsed entity [66] CharRef ::= '&#' [0-9]+ ';' | '&#x' [0-9a-fA-F]+ ';' A PEReference may have been detected in the current input stream the handling is done accordingly to http://www.w3.org/TR/REC-xml#entproc.
NOTE: if the call xmlPatterncompile_APIName indicated a dictionary, then strings for xmlStreamPushNode_APIParam_2 and xmlStreamPushNode_APIParam_3 will be expected to come from the dictionary.
xmlSubstituteEntitiesDefault_APIParam_1  int 0 or 1. xmlSubstituteEntitiesDefault_APIName returns  the last value for 0 for no substitution, 1 for substitution.
xmlNanoHTTPMethod_APIParam_4  the Content-Type information IN and OUT.
The broken bahaviour of accepting out of range character entities like &#0; is of course not supported either.
xmlSchemaCopyValue_APIParam_1  the precomputed value to be copied.
xmlParseBalancedChunkMemoryRecover_APIName returns  0 if the chunk is well balanced, -1 in case of args problem and the parser error code otherwise In case xmlParseBalancedChunkMemoryRecover_APIParam_7 is set to 1, the nodelist will not be empty even if the parsed chunk is not well balanced, assuming the parsing succeeded to some extent.
xmlTextWriterWriteAttributeNS_APIParam_5  attribute  xmlTextWriterWriteAttributeNS_APIParam_5.
xmlNewTextWriterMemory_APIName returns  the new  xmlTextWriterPtr  or NULL in case of error.
xmlXPtrNewRangePointNode_APIName returns  the newly created object.
xmlValidCtxtNormalizeAttributeValue_APIParam_4  the  attribute  xmlValidCtxtNormalizeAttributeValue_APIParam_4.
We use href==NULL in the case of an element creation where the namespace was not defined.
empty a buffer.
xmlXPtrLocationSetMerge_APIName returns  xmlXPtrLocationSetMerge_APIParam_1 once extended or NULL in case of error.
htmlNewDoc_APIName returns  a new document.
xmlNodeListGetRawString_APIParam_2  a Node xmlNodeListGetRawString_APIParam_2.
xmlNanoFTPDele_APIParam_2  a xmlNanoFTPDele_APIParam_2 or directory on the server.
xmlHashLookup2_APIName returns  the pointer to the userdata.
xmlSAX2StartDocument_APIParam_1  the user data (XML parser context).
xmlDecodeEntities_APIParam_6  an xmlDecodeEntities_APIParam_4 marker xmlChar, 0 if none.
xmlTextReaderLookupNamespace_APIName returns  a string containing the namespace URI to which the xmlTextReaderLookupNamespace_APIParam_2 maps or NULL in case of error.
xmlTextWriterEndDTDElement_APIParam_1  the  xmlTextWriterPtr.
parse the XML version value.
xmlBufContent_APIName returns  the internal content.
Implement the equal operation on XPath objects content: @arg1 == @arg2.
xmlBufferAddHead_APIParam_2  the #xmlChar string.
xmlNewDtd_APIParam_4  the system ID.
xmlCopyError_APIName returns  0 in case of success and -1 in case of error.
xmlValidGetValidElements_APIParam_1  an element to insert after.
xmlIsExtender_APIName returns  true if argument valid, false otherwise.
Get the number of elements in the list.
xmlNewCharEncodingHandler_APIName returns  the  xmlCharEncodingHandlerPtr  created (or NULL in case of error).
receiving some ignorable whitespaces from the parser.
xmlSchemaSAXUnplug_APIName returns  0 in case of success and -1 in case of failure.
This function name is somewhat misleading.
Do a copy of the xmlCopyDtd_APIParam_1.
parse Markup declarations from an external subset [30] extSubset ::= textDecl?
TODO: xmlModuleOpen_APIParam_2 are not yet implemented.
xmlSchemaValidateOneElement_APIParam_2  an element node.
xmlCharEncInFunc_APIParam_1  char encod.
xmlDOMWrapCloneNode_APIParam_8  option flags.
limit itself to 45 chars.
xmlDebugDumpEntities_APIParam_2  the document.
xmlRegisterInputCallbacks_APIName returns  the registered handler number or -1 in case of error.
Implements the XML shell function "validate" Validate the document, if a DTD path is provided, then the validation is done against the given DTD.
Dump an HTML document to a file using a given htmlSaveFileFormat_APIParam_3.
xmlSchemaGetValType_APIParam_1  a schemas value.
xmlTextWriterWriteDTDEntity_APIParam_2  TRUE if this is a parameter entity, FALSE if not.
The > comparison will be true if and only if the first number is greater than the second number.
xmlCreateEntityParserCtxt_APIName returns  the new parser context or NULL.
Is this document tagged standalone?.
xmlNextElementSibling_APIName returns  the next element sibling or NULL if not available.
xmlParserInputBufferCreateFile_APIParam_1  a FILE*.
xmlXPathVariableLookup_APIParam_1  the XPath context.
Provides the specified encoding if specified in the HTTP headers.
xmlHashAddEntry3_APIParam_1  the hash xmlHashAddEntry3_APIParam_1.
xmlXPathNextParent_APIParam_2  the current node in the traversal.
Dump an HTML document.
Display xmlParserWarning_APIParam_3 format a warning messages, gives file, line, position xmlParserWarning_APIParam_3 extra parameters.
xmlACatalogAdd_APIParam_3  the system, public or prefix to match.
xmlLsOneNode_APIParam_1  the FILE * for the xmlLsOneNode_APIParam_1.
xmlCharEncodingOutputFunc_APIName returns  the number of bytes written, -1 if lack of space, or -2 if the transcoding failed.
Different from xmlStreamPush_APIName this function can be fed with nodes of type: element-, attribute-, text-, cdata-section-, comment- and processing-instruction-node.
xmlSaveFileTo_APIParam_1  an output I/O buffer.
Replaces 0xd, 0x9 and 0xa with a space.
Registers a callback for URI output file handling.
Find the userdata specified by the (@name, @name2) tuple and remove it from the hash @table.
Pushes a new parser input on top of the input stack.
Load the catalog and build the associated data structures.
xmlSchematronNewMemParserCtxt_APIParam_1  a pointer to a char array containing the schemas.
xmlParseInNodeContext_APIName returns  XML_ERR_OK  if the chunk is well balanced, and the parser error code otherwise.
xmlGetBufferAllocationScheme_APIName returns  the current allocation scheme.
Accessor for the type of a value.
xmlXPathAxisFunc_APIParam_2  the previous node being explored on that axis.
xmlSplitQName_APIParam_2  an XML parser context.
xmlTextWriterWriteVFormatDTDAttlist_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
routine which manages and grows an output buffer.
xmlParserInputBufferCreateFd_APIParam_2  the charset encoding if known.
xmlXPathVariableLookupFunc_APIParam_2  xmlXPathVariableLookupFunc_APIParam_2 of the variable.
xmlCopyElementTable_APIName returns  the new  xmlElementTablePtr  or NULL in case of error.
It's sometimes very hard to guess if libxml2 is in use in the application, some libraries or plugins may use it without notice.
xmlSchematronValidateDoc_APIParam_2  the document instace tree.
xmlSchemaNewParserCtxt_APIParam_1  the location of the schema.
xmlXPathCastStringToBoolean_APIParam_1  a string.
xmlXPathPositionFunction_APIParam_2  the number of arguments.
xmlXPathCastNodeToNumber_APIName returns  the number value.
XML special chars must be escaped first by using xmlEncodeEntitiesReentrant_APIName, or xmlNewTextChild_APIName should be used.
htmlElementStatusHere_APIParam_1  HTML htmlElementStatusHere_APIParam_1 element.
Note the handling of entities references is different than in the W3C DOM element traversal spec since we don't have back  reference  from entities content to entities references.
htmlReadDoc_APIParam_1  a pointer to a zero terminated string.
xmlACatalogAdd_APIParam_2  the xmlACatalogAdd_APIParam_2 of record to add to the catalog.
xmlGetFeature_APIName returns  -1 in case or error, 0 otherwise.
xmlSchemaIsBuiltInTypeFacet_APIName returns  1 if the facet can be used with the given built-in xmlSchemaIsBuiltInTypeFacet_APIParam_1, 0 otherwise and -1 in case the xmlSchemaIsBuiltInTypeFacet_APIParam_1 is not a built-in xmlSchemaIsBuiltInTypeFacet_APIParam_1.
xmlSkipBlankChars_APIName returns  the number of space chars skipped.
xmlCtxtReadFd_APIParam_3  the base xmlCtxtReadFd_APIParam_3 to use for the document.
xmlNodeDump_APIParam_3  the current node.
xmlCatalogResolveSystem_APIParam_1  the system ID string.
NOTE: @content is supposed to be a piece of XML CDATA, so it allows entity references, but XML special chars need to be escaped first by using xmlEncodeEntitiesReentrant_APIName resp.
xmlXPathFunction_APIParam_2  the number of arguments.
xmlXPathNodeLeadingSorted_APIParam_1  a node-set, sorted by document order xmlXPathNodeLeadingSorted_APIParam_2  a xmlXPathNodeLeadingSorted_APIParam_2.
xmlXPathCeilingFunction_APIParam_1  the XPath Parser context.
xmlXPathCompareValues_APIParam_3  is the comparison xmlXPathCompareValues_APIParam_3.
xmlNodeDump_APIName returns  the number of bytes written to the buffer or -1 in case of error.
If @to is NULL, this creates first a new target state in the automata and then adds a an ALL transition xmlAutomataNewAllTrans_APIParam_2 the @from state xmlAutomataNewAllTrans_APIParam_3 the target state.
xmlAllocOutputBuffer_APIParam_1  the encoding converter or NULL.
xmlGetDtdEntity_APIName returns A pointer to the entity structure or NULL if not found.
xmlParseChunk_APIName returns  zero if no error, the  xmlParserErrors  otherwise.
xmlGetDtdQElementDesc_APIParam_1  a pointer to the DtD to search.
xmlParseExternalEntity_APIParam_7  the return value for the set of parsed nodes.
xmlReallocLoc_APIParam_2  an int specifying the xmlReallocLoc_APIParam_2 in byte to allocate.
xmlElemDump_APIParam_3  the current node.
xmlValidateNotationUse_APIParam_3  the notation name to check.
xmlTextReaderValue_APIName returns  the string or NULL if not available.
xmlXPathCompile_APIName returns  the  xmlXPathCompExprPtr  resulting from the compilation or NULL.
xmlNewTextWriterTree_APIName returns  the new  xmlTextWriterPtr  or NULL in case of error.
xmlAutomataNewCountTrans_APIName returns  the target state or NULL in case of error.
xmlParseSystemLiteral_APIParam_1  an XML parser context.
xmlSchemaValidateFile_APIParam_1  a schema validation context.
xmlAddEncodingAlias_APIParam_1  the encoding xmlAddEncodingAlias_APIParam_1 as parsed, in UTF-8 format (ASCII actually).
xmlSchemaFreeValidCtxt_APIParam_1  the schema validation context.
Callback for freeing some parser input allocations.
xmlGetLastError_APIName returns  NULL if no error occurred or a pointer to the error.
parse an XML qualified xmlSplitQName2_APIParam_1 string [NS 5] QName ::= (Prefix ':')?
xmlNewTextWriterDoc_APIName returns  the new  xmlTextWriterPtr  or NULL in case of error.
Parse an URI  reference  string based on RFC 3986 and fills in the appropriate fields of the @uri structure URI-reference = URI / relative-ref.
xmlTextWriterEndElement_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
Note - doesn't check for deprecated elements.
xmlTextWriterWritePI_APIParam_2  PI xmlTextWriterWritePI_APIParam_2.
valuePop_APIName returns  the XPath object just removed.
xmlSchemaNewMemParserCtxt_APIParam_2  the xmlSchemaNewMemParserCtxt_APIParam_2 of the array.
xmlTextReaderGetParserProp_APIName returns  the value, usually 0 or 1, or -1 in case of error.
xmlACatalogResolve_APIParam_1  a Catalog.
xmlReaderNewMemory_APIParam_6  a combination of  xmlParserOption.
xmlRelaxNGGetValidErrors_APIParam_3  the warning function result xmlRelaxNGGetValidErrors_APIParam_4  the functions context result.
Applies the xmlCtxtUseOptions_APIParam_2 to the parser context.
Alias for xmlXPathEval_APIName.
[49] choice ::= '(' S?
TODO: seems deprecated now, only used in the default part of  xmlParserHandleReference  [4] NameChar ::= Letter | Digit | '.'
[NS 1] NSDef ::= PrefixDef Eq SystemLiteral [NS 2] PrefixDef ::= 'xmlns' (':' NCName)?.
xmlDocDumpMemory_APIParam_2  OUT the memory pointer.
xmlIsXHTML_APIName returns  1 if true, 0 if not and -1 in case of error.
htmlSAXParseDoc_APIParam_2  a free form C string describing the HTML document htmlSAXParseDoc_APIParam_2, or NULL.
xmlModuleSymbol_APIParam_3 symbol  the resulting xmlModuleSymbol_APIParam_3 address.
xmlParserInputBufferCreateStatic_APIName returns  the new parser input or NULL.
If xmlSAXParseMemory_APIParam_1 is NULL, fallback to the default DOM tree building routines.
xmlReadFd_APIName returns  the resulting document tree.
xmlSAX2GetSystemId_APIName returns  a  xmlChar  *.
Free a DTD structure.
xmlNodeListGetRawString_APIParam_3  should we replace entity contents or show their external form.
Dumps an XML buffer to a FILE *.
a strncmp for xmlChar's.
xmlNodeSetName_APIParam_2  the new tag xmlNodeSetName_APIParam_2.
'#PCDATA' S? ')'
xmlCreatePushParserCtxt_APIParam_5  an optional file name or URI.
xmlSetupParserForBuffer_APIParam_1  an XML parser context.
xmlOutputBufferCreateFd_APIName returns  the new parser output or NULL.
xmlXPathLeading_APIParam_2  a node-set.
xmlExpNewRange_APIParam_4  the upper bound for the repetition, -1 means infinite.
Cleanup the memory allocated for the char encoding support, it unregisters all the encoding handlers and the aliases.
xmlNewReference_APIName returns  a pointer to the new node object.
xmlCopyPropList_APIName returns  a new #xmlAttrPtr, or NULL in case of error.
xmlAutomataNewEpsilon_APIName returns  the target state or NULL in case of error.
xmlNodeGetContent_APIParam_1  the node being read.
htmlParseFile_APIName returns  the resulting document tree.
storage size of an UTF8 string the behaviour is not guaranteed if the input string is not UTF-8.
xmlExpGetStart_APIName returns  the number of unique strings found, -1 in case of errors and -2 if there is more than @len strings.
xmlStrndup_APIParam_1  the input  xmlChar  *.
xmlTextReaderPrefix_APIName returns  the prefix or NULL if not available, if non NULL it need to be freed by the caller.
Set (or reset) the space preserving behaviour of a node, i.e.
xmlSnprintfElementContent_APIParam_4  1 if one must print the englobing parenthesis, 0 otherwise.
xmlSAX2ResolveEntity_APIParam_1  the user data (XML parser context).
xmlSchematronNewDocParserCtxt_APIName returns  the parser context or NULL in case of error.
the values of the xml:lang attribute.
namespace xmlTextWriterWriteAttributeNS_APIParam_2 xmlTextWriterWriteAttributeNS_APIParam_3  attribute  local xmlTextWriterWriteAttributeNS_APIParam_3.
xmlSchematronValidateDoc_APIParam_1  the schema validation context.
xmlParserInputBufferCreateFile_APIParam_2  the charset encoding if known.
xmlSetCompressMode_APIParam_1  the compression ratio.
Create a document saving context serializing to a xmlSaveToBuffer_APIParam_1 with the xmlSaveToBuffer_APIParam_2 and the xmlSaveToBuffer_APIParam_3 given.
of areas useful for garbage collected memory allocators.
xmlTextReaderConstLocalName_APIName returns  the local name or NULL if not available, the string will be deallocated with the xmlTextReaderConstLocalName_APIParam_1.
xmlNanoHTTPMethod_APIParam_3  the xmlNanoHTTPMethod_APIParam_3 string if any.
xmlXPathParseNCName_APIName returns  the namespace name or NULL.
Free up the memory used by a buffered parser input.
xmlReadDoc_APIParam_2  the base xmlReadDoc_APIParam_2 to use for the document.
xmlStreamPushNode_APIParam_4  the type of the node being pushed.
xmlXIncludeProcessFlagsData_APIParam_3  application xmlXIncludeProcessFlagsData_APIParam_3 that will be passed to the parser context in the _private field of the parser context(s).
xmlCopyNamespace_APIName returns  a new #xmlNsPtr, or NULL in case of error.
xmlBoolToText_APIName returns  a pointer to either "True" or "False".
@input will be freed by the function in any case.
This call xmlOutputBufferClose_APIName on xmlSaveFormatFileTo_APIParam_1 which is not available after this call.
xmlSwitchInputEncoding_APIName returns  0 in case of success, -1 otherwise.
xmlXPathLeadingSorted_APIParam_2  a node-set, sorted by document order.
Implement the XInclude substitution on the XML document @doc.
hasInternalSubsetSAXFunc_APIName returns  1 if true.
xmlCreateEntityParserCtxt_APIParam_1  the entity xmlCreateEntityParserCtxt_APIParam_1.
xmlTextWriterStartAttributeNS_APIParam_1  the  xmlTextWriterPtr.
notationDeclSAXFunc_APIParam_4  The system ID of the entity.
xlinkSimpleLinkFunk_APIParam_1  user data pointer.
xmlSAX2Characters_APIParam_1  the user data (XML parser context).
xmlSAX2GetLineNumber_APIParam_1  the user data (XML parser context).
xmlAutomataSetFinalState_APIParam_1  an automata.
xmlNewCDataBlock_APIParam_1  the document.
xmlIsBlank_APIName returns  true if argument valid, false otherwise.
function xmlXPathRegisterFunc_APIParam_2 xmlXPathRegisterFunc_APIParam_3  the function implementation or NULL.
Do an entity lookup in the internal and external subsets and.
xmlXPathRegisterVariable_APIParam_2  the variable xmlXPathRegisterVariable_APIParam_2.
xmlUnlinkNode_APIParam_1  the node.
xmlTextReaderConstValue_APIName returns  the string or NULL if not available.
xmlTextReaderXmlLang_APIName returns  the xmllang value or NULL if none exists., if non NULL it need to be freed by the caller.
xmlRegExecCallbacks_APIParam_4  input data.
xmlHashScanFull_APIParam_3  extra xmlHashScanFull_APIParam_3 passed to xmlHashScanFull_APIParam_2.
Converts a boolean to its number value.
xmlIOParseDTD_APIName returns  the resulting  xmlDtdPtr  or NULL in case of error.
xmlNewCharRef_APIParam_1  the document.
Note that @format = 1 provide node indenting only if  xmlIndentTreeOutput  = 1 or xmlKeepBlanksDefault(0) was called Since this is using  xmlBuffer  structures it is limited to 2GB and somehow deprecated, use xmlBufNodeDump_APIName instead.
xmlAutomataNewTransition2_APIParam_4  the first input string associated xmlAutomataNewTransition2_APIParam_3 that transition.
htmlParseEntityRef_APIParam_2  location to store the entity name.
xmlXPathConvertBoolean_APIParam_1  an XPath object.
htmlDocDumpMemoryFormat_APIParam_1  the document.
xmlDocCopyNode_APIParam_2  the document.
xmlTextReaderReadAttributeValue_APIName returns  1 in case of success, 0 if the xmlTextReaderReadAttributeValue_APIParam_1 was not positionned on an ttribute node or all the  attribute  values have been read, or -1 in case of error.
This does the entity substitution.
The xmlNanoHTTPMethodRedir_APIParam_4, or xmlNanoHTTPMethodRedir_APIParam_5, if provided must be freed by the caller.
xmlHashUpdateEntry2_APIParam_2  the xmlHashUpdateEntry2_APIParam_2 o. xmlHashUpdateEntry2_APIParam_5 the.
'>' [ VC: Unique Element Type Declaration ] No element type may be declared more than once.
xmlAutomataNewOnceTrans_APIParam_6  the maximum successive occurences of xmlAutomataNewOnceTrans_APIParam_4.
Write a DTD external entity.
xmlDOMWrapRemoveNode_APIParam_3  the xmlDOMWrapRemoveNode_APIParam_3 to be removed.
Blocks further parser processing.
xmlOutputBufferFlush_APIParam_1  a buffered output.
Called when the end of an element has been detected.
xmlInputCloseCallback_APIParam_1  an Input xmlInputCloseCallback_APIParam_1.
htmlNodeDumpOutput_APIParam_3  the current node.
xmlNanoFTPCloseConnection_APIParam_1  an FTP context.
Implement the round_APIName XPath function number round(number) The round function returns the number that is closest to the argument and that is an integer.
xmlParserInputBufferCreateStatic_APIParam_2  the length of the memory block.
xmlParseExternalID_APIParam_2  a xmlChar** receiving PubidLiteral.
This is per thread if compiled with thread support.
Digits?)?
Evaluates the expression resulting from @exp consuming a xmlExpExpDerive_APIParam_3 expression @sub Based on algebraic derivation and sometimes direct Brzozowski derivation it usually tatkes less than linear time and can handle expressions generating infinite languages.
Use RelaxNG to validate the document as it is processed.
xmlShellReadlineFunc_APIParam_1  a string xmlShellReadlineFunc_APIParam_1.
xmlParseDefaultDecl_APIParam_2  Receive a possible fixed default xmlParseDefaultDecl_APIParam_2 for the  attribute.
xmlSAXParseFile_APIParam_1  the SAX handler block.
Check the document for potential content problems, and xmlDebugCheckDocument_APIParam_1 the errors to @output.
htmlCtxtReadIO_APIParam_4  an I/O handler.
xmlSaveToBuffer_APIParam_1  a xmlSaveToBuffer_APIParam_1.
xmlHashScanFull3_APIParam_2  the xmlHashScanFull3_APIParam_2 o. xmlHashScanFull3_APIParam_5 the user.
xmlTextWriterWriteAttributeNS_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlValidateNCName_APIName returns  0 if this validates, a positive error code number otherwise and -1 in case of internal or API error.
xmlInitMemory_APIName returns  0 on success.
xmlXPathNodeLeading_APIParam_1  a node-set xmlXPathNodeLeading_APIParam_2  a xmlXPathNodeLeading_APIParam_2.
xmlUTF8Charcmp_APIName returns  result of the compare as with  xmlStrncmp.
xmlXPathFreeNodeSet_APIParam_1  the  xmlNodeSetPtr  to free.
nb_.
xmlTextWriterWriteVFormatDTDElement_APIParam_2  the xmlTextWriterWriteVFormatDTDElement_APIParam_2 of the DTD element.
xmlCatalogSetDebug_APIParam_1  the debug xmlCatalogSetDebug_APIParam_1 of catalogs required.
xmlCtxtResetPush_APIName returns  0 in case of success and 1 in case of error.
xmlSchemaGetBuiltInType_APIParam_1  the xmlSchemaGetBuiltInType_APIParam_1 of the built in xmlSchemaGetBuiltInType_APIParam_1.
For example, translate("--aaa--","abc-","ABC").
Checka a xmlSchemaValidateLengthFacetWhtsp_APIParam_3 against a "length", "minLength" and "maxLength" xmlSchemaValidateLengthFacetWhtsp_APIParam_1; sets @length to the computed xmlSchemaValidateLengthFacetWhtsp_APIParam_5 of @value.
xmlShellCat_APIParam_3  a xmlShellCat_APIParam_3.
xmlRelaxParserSetFlag_APIName returns  0 if success and -1 in case of error.
xmlXPathCastStringToNumber_APIParam_1  a string.
xmlTextWriterWriteRaw_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlNanoFTPRead_APIName returns  the number of byte read.
xmlParserFindNodeInfo_APIName returns  an  xmlParserNodeInfo  block pointer or NULL.
xmlCatalogLocalResolve_APIParam_3  the system ID string.
xmlXPathNodeSetContains_APIName returns  true (1) if @cur contains @val, false (0) otherwise.
Note that @format = 1 provide node indenting only if  xmlIndentTreeOutput  = 1 or xmlKeepBlanksDefault(0) was called.
htmlAutoCloseTag_APIParam_1  the HTML document.
A  xmlSAX2Comment_APIName has been parsed.
xmlReaderForFd_APIParam_1  an open file descriptor.
xmlOutputBufferCreateFilenameDefault_APIParam_1  function pointer to the new OutputBufferCreateFilenameFunc.
xmlPrintURI_APIParam_1  a FILE* for the output.
If there is no such attribute, then lang.
Do a complete resolution lookup of an External Identifier.
xmlValidatePushCData_APIParam_3  the length of the xmlValidatePushCData_APIParam_2.
xmlRemoveRef_APIParam_2  the  attribute.
xmlDictOwns_APIName returns  1 if true, 0 if false and -1 in case of error -1 in case of error.
xmlTextReaderConstNamespaceUri_APIName returns  the namespace URI or NULL if not available, the string will be deallocated with the xmlTextReaderConstNamespaceUri_APIParam_1.
xmlDictExists_APIParam_1  the dictionary.
hasExternalSubsetSAXFunc_APIParam_1  the user data (XML parser context).
htmlDocDump_APIParam_2  the document.
This tells the XML Reader to preserve the current node.
Initialize the HTTP protocol layer.
xmlXPathNextFollowing_APIName returns  the next element following that axis.
ignorableWhitespaceSAXFunc_APIParam_1  the user data (XML parser context).
Free a validation context structure.
xmlShellWrite_APIParam_4  unused.
Get the authentication header of an HTTP context.
Converts an existing object to its number_APIName equivalent.
Try to lookup the catalog  reference  associated to a public ID.
xmlBufferShrink_APIParam_1  the buffer to dump.
xmlStringDecodeEntities_APIParam_3  combination of  XML_SUBSTITUTE_REF  and  XML_SUBSTITUTE_PEREF.
Do a copy of the xmlCopyNode_APIParam_1.
xmlTextWriterWriteRaw_APIParam_2  text string.
The base URI of the node.
htmlReadFile_APIParam_2  the document htmlReadFile_APIParam_2, or NULL.
Count the children of @node.
Try to validate the document instance basically it does the all the checks described by the XML Rec i.e.
xmlTextReaderSetup_APIParam_3  the base xmlTextReaderSetup_APIParam_3 to use for the document.
xmlRMutexUnlock_APIName is used to unlock a libxml2 token_r.
Cleanup the FTP protocol layer.
xmlCopyPropList_APIParam_2  the first  attribute.
check if the URI matches an FTP one.
xmlHashLookup3_APIParam_3  a second xmlHashLookup3_APIParam_2 of the userdata.
xmlParseMemory_APIName returns  the resulting document tree.
attributeDeclSAXFunc_APIParam_3  the  attribute  name.
xmlStrdupFunc_APIName returns  the copy of the string or NULL in case of error.
xmlTextWriterStartDTD_APIParam_2  the xmlTextWriterStartDTD_APIParam_2 of the DTD.
Write an xml element.
xmlTextWriterWriteVFormatDTDElement_APIParam_4  pointer to the first member of the variable argument list.
Free a xmlRegFreeRegexp_APIParam_1.
xmlDOMWrapRemoveNode_APIParam_2  the xmlDOMWrapRemoveNode_APIParam_2.
Receive the document locator at startup, actually xmlDefaultSAXLocator.
xmlXPathTrailing_APIParam_1  a node-set.
xmlTextWriterWriteVFormatElementNS_APIParam_5  xmlTextWriterWriteVFormatElementNS_APIParam_5 string (see printf).
htmlParseChunk_APIName returns  zero if no error, the  xmlParserErrors  otherwise.
xmlParseURIRaw_APIParam_1  the URI string to analyze.
xmlCharEncCloseFunc_APIName returns  0 if success, or -1 in case of error.
If the result is 0 then only element-nodes and attribute-nodes need to be pushed.
xmlCharEncFirstLine_APIParam_3  an  xmlBuffer  for the input.
xmlSchematronNewParserCtxt_APIName returns  the parser context or NULL in case of error.
The boolean true value is converted to the string true.
xmlExpStringDerive_APIName returns  the resulting expression or NULL in case of internal error.
xmlParseExternalEntity_APIParam_1  the document the chunk pertains to.
WARNING: Some value types are not supported yet, resulting in a @retValue of "???".
xmlCanonicPath_APIParam_1  the resource locator in a filesystem notation.
xmlXPathPopNodeSet_APIParam_1  an XPath parser context.
xmlTextWriterWriteVFormatAttribute_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
Creates/frees an object cache on the XPath context.
Implement the substring-after_APIName XPath function string substring-after(string, string) The substring-after function returns the substring of the first argument string that follows the first occurrence of the second argument string in the first argument string, or the empty stringi if the first argument string does not contain the second argument string.
xmlDictQLookup_APIParam_2  the xmlDictQLookup_APIParam_2.
xmlSearchNs_APIParam_2  the current xmlSearchNs_APIParam_2.
xmlThrDefPedanticParserDefaultValue_APIName returns .
input from FILE *.
xmlNanoHTTPMethodRedir_APIParam_1  The xmlNanoHTTPMethodRedir_APIParam_1 to load.
xmlBufferAdd_APIName returns  0 successful, a positive error code number otherwise and -1 in case of internal or API error.
Check the maximum depth reachable by a pattern.
Free all the memory used by a parser context.
add the new xmlListPushBack_APIParam_2 at the end of the list.
xmlDocFormatDump_APIName returns  the number of bytes written or -1 in case of failure.
xmlTextWriterWriteDTD_APIParam_1  the  xmlTextWriterPtr.
xmlListEnd_APIParam_1  a list.
xmlXPathConvertString_APIParam_1  an XPath object.
xmlC14NExecute_APIName returns  non-negative value on success or a negative value on fail.
The string must be deallocated by the caller.
htmlReadFd_APIName returns  the resulting document tree.
A name must not appear more than once in an XML document as a value of this type; i.e., ID values must uniquely identify the elements which bear them.
xmlRMutexLock_APIParam_1  the reentrant mutex.
End an xml DTD entity.
Builds the string equivalent to the text contained in the Node xmlNodeListGetRawString_APIParam_2 made of TEXTs and ENTITY_REFs, contrary to xmlNodeListGetString_APIName this function doesn't do any character encoding handling.
externalSubsetSAXFunc_APIParam_2  the root element externalSubsetSAXFunc_APIParam_2.
xmlSAX2HasInternalSubset_APIParam_1  the user data (XML parser context).
xmlTextWriterEndComment_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlValidNormalizeAttributeValue_APIName returns  a new normalized string if normalization is needed, NULL otherwise the caller must free the returned xmlValidNormalizeAttributeValue_APIParam_4.
xmlParserInputBufferCreateFilenameDefault_APIParam_1  function pointer to the new ParserInputBufferCreateFilenameFunc.
Check whether this xmlGetPredefinedEntity_APIParam_1 is an predefined entity.
getEntitySAXFunc_APIParam_1  the user data (XML parser context).
xmlAddAttributeDecl_APIName returns  NULL if not new, otherwise the  attribute  decl.
Close a document saving context, i.e.
xmlTextWriterWriteFormatDTDInternalEntity_APIParam_2  TRUE if this is a parameter entity, FALSE if xmlTextWriterWriteFormatDTDInternalEntity_APIParam_5.
Call xmlInitParser_APIName once before processing in case of use in multithreaded programs.
Push new  attribute  data onto the xmlStreamPushAttr_APIParam_1.
xmlSwitchToEncoding_APIName returns  0 in case of success, -1 otherwise.
xmlTextReaderIsDefault_APIName returns  0 if not defaulted, 1 if defaulted, and -1 in case of error.
htmlEntityValueLookup_APIName returns  the associated  htmlEntityDescPtr  if found, NULL otherwise.
Print xmlShellPrintNode_APIParam_1 to the output FILE.
xmlTextWriterWriteVFormatCDATA_APIParam_3  pointer to the first member of the variable argument list.
xmlCharStrndup_APIParam_1  the input char *.
xmlReaderForIO_APIParam_1  an I/O read function.
xmlExpNewRange_APIName returns  the node or NULL in case of error.
unparsedEntityDeclSAXFunc_APIParam_2  The unparsedEntityDeclSAXFunc_APIParam_2 of the entity.
xmlNewNode_APIName returns  a pointer to the new node object.
xmlGetPredefinedEntity_APIParam_1  the entity xmlGetPredefinedEntity_APIParam_1.
xmlSchemaGetPredefinedType_APIParam_1  the type xmlSchemaGetPredefinedType_APIParam_1.
Callback when scanning xmlHashScannerFull_APIParam_2 in a hash with the full scanner.
hasExternalSubsetSAXFunc_APIName returns  1 if true.
htmlEncodeEntities_APIParam_1  a po.
xmlErrMemory_APIParam_2  xmlErrMemory_APIParam_2 informations.
xmlMemUsed_APIName returns  an int representing the amount of memory allocated.
xmlACatalogDump_APIParam_2  the file.
Build the string equivalent to the text contained in the Node xmlNodeListGetString_APIParam_2 made of TEXTs and ENTITY_REFs.
xmlBufferDump_APIName returns  the number of #xmlChar written.
xmlShellWrite_APIParam_3  a xmlShellWrite_APIParam_3 in the tree.
xmlSchematronNewValidCtxt_APIParam_2  a set of  xmlSchematronValidOptions.
xmlXPathNodeEval_APIName returns  the  xmlXPathObjectPtr  resulting from the evaluation or NULL.
xmlParseCharEncoding_APIParam_1  the encoding xmlParseCharEncoding_APIParam_1 as parsed, in UTF-8 format (ASCII actually).
xmlHashScanner_APIParam_3  the xmlHashScanner_APIParam_3 associated.
xmlCatalogAddLocal_APIParam_2  the xmlCatalogAddLocal_APIParam_2 to a new local catalog.
xmlOutputBufferGetSize_APIName returns  0 in case or error or no data is held, the size otherwise.
xmlTextReaderLookupNamespace_APIParam_1  the  xmlTextReaderPtr  used.
Create a new  xmlNewTextWriter  structure with @*doc as output.
htmlParseFile_APIParam_2  a free form C string describing the HTML document htmlParseFile_APIParam_2, or NULL.
Traversal function for the "preceding-sibling" direction The preceding-sibling axis contains the preceding siblings of the context node in reverse document order; the first preceding sibling is first on the axis; the sibling preceding that node is the second on the axis and so on.
xmlListPushBack_APIParam_1  a list.
[ WFC: PEs in Internal Subset ] In the internal DTD subset, parameter-entity references can occur only where markup declarations can occur, not within markup declarations.
Build a copy of a notation xmlCopyNotationTable_APIParam_1.
Start to fetch the given ftp:// resource.
Provides a portable isinf_APIName function to detect whether a double is a +Infinite or -Infinite.
xmlCopyChar_APIParam_2  pointer to an array of  xmlChar.
For parsing error this does not change the well-formedness result.
xmlTextWriterStartElement_APIParam_2  element xmlTextWriterStartElement_APIParam_2.
xmlCopyPropList_APIParam_1  the element where the attributes will be grafted.
Converts an XPath object to its boolean value.
This is used when xmlSchemaValidityLocatorFunc_APIParam_2 or node informations are not available to find out what xmlSchemaValidityLocatorFunc_APIParam_2 and xmlSchemaValidityLocatorFunc_APIParam_3 number are affected.
Dumps debug information for the  attribute  list.
This function try to open a connection to the indicated resource via HTTP GET.
xmlIOHTTPRead_APIName returns  the number of bytes written.
xmlTextWriterWriteVFormatDTD_APIParam_2  the xmlTextWriterWriteVFormatDTD_APIParam_2 of the DTD.
referenceSAXFunc_APIParam_2  The entity referenceSAXFunc_APIParam_2.
Search the last child of a node.
xmlSaveToIO_APIName returns  a new serialization context or NULL in case of error.
xmlXPathRegisterVariableNS_APIParam_1  the XPath context.
Handle an  attribute  that has been read by the parser.
xmlSchemaValidateLengthFacetWhtsp_APIParam_3  the lexical repr.
xmlXPathFunction_APIParam_1  the XPath interprestation context.
xmlOutputBufferCreateFilenameFunc_APIName returns  the new  xmlOutputBufferPtr  in case of success or NULL if no method was found.
xmlSchemaGetFacetValueAsULong_APIParam_1  an schemas type xmlSchemaGetFacetValueAsULong_APIParam_1.
Deallocate the memory used by an entities hash xmlFreeAttributeTable_APIParam_1.
xmlFreeValidCtxt_APIParam_1  the validation context to free.
cp ( S?
Free the structures associated to a regular expression evaulation context.
a strdup_APIName equivalent, with logging of the allocation info.
xmlExpNewAtom_APIName returns  the node or NULL in case of error.
xmlNanoFTPCheckResponse_APIName returns  the code number, or 0.
Create a new property carried by a xmlNewProp_APIParam_1.
xmlShellLoad_APIParam_1  the shell context.
xmlSAXParseMemoryWithData_APIParam_2  an pointer to a char array.
xmlParserInputBufferPush_APIName returns  the number of chars read and stored xmlParserInputBufferPush_APIParam_1 the buffer, or -1 xmlParserInputBufferPush_APIParam_1 case of error.
Copies the precomputed value.
xmlParseInNodeContext_APIParam_1  the context xmlParseInNodeContext_APIParam_1.
xmlIOHTTPOpen_APIName returns  an I/O context or NULL in case of error.
xmlMemBlocks_APIName returns  an int representing the number of blocks.
xmlXPathConvertFunc_APIParam_2  the number of the target xmlXPathConvertFunc_APIParam_2.
Load the catalogs and makes their definitions effective for the default external entity loader.
xlinkGetDefaultHandler_APIName returns  the current  xlinkHandlerPtr  value.
parse a value for ENTITY declarations [9] EntityValue ::= '"' ([^%&"] | PEReference | Reference)* '"' | "'" ([^%&'] | PEReference | Reference)* "'".
xmlTextWriterWriteFormatPI_APIParam_3  xmlTextWriterWriteFormatPI_APIParam_3 string (see printf) xmlTextWriterWriteFormatPI_APIParam_4  extra parameters xmlTextWriterWriteFormatPI_APIParam_4 the xmlTextWriterWriteFormatPI_APIParam_3.
htmlCtxtReadIO_APIParam_2  an I/O read function.
xmlC14NIsVisibleCallback_APIParam_2  the curent xmlC14NIsVisibleCallback_APIParam_2.
xmlNewChild_APIParam_4  the XML xmlNewChild_APIParam_4 of the child if any.
Converts a xmlXPathCastNodeToNumber_APIParam_1 to its number value.
xmlTextWriterWriteFormatDTD_APIParam_2  xmlTextWriterWriteFormatDTD_APIParam_6 xmlTextWriterWriteFormatDTD_APIParam_2 of xmlTextWriterWriteFormatDTD_APIParam_6 xmlTextWriterWriteFormatDTD_APIParam_6.
xmlCharEncodingInputFunc_APIName returns  the number of bytes written, -1 if lack of space, or -2 if the transcoding failed.
xmlXPathCastToString_APIParam_1  an XPath object.
xmlTextWriterStartCDATA_APIParam_1  the  xmlTextWriterPtr.
Checks the xmlSchemaValidateListSimpleTypeFacet_APIParam_2 of a list simple type against a xmlSchemaValidateListSimpleTypeFacet_APIParam_1.
xmlAddChildList_APIName returns  the last child or NULL in case of error.
xmlValidateNotationDecl_APIParam_2  a document instance.
xmlSchemaValidateStream_APIParam_5  the context to provide to the SAX handler.
xmlNewDocProp_APIName returns  a pointer to the  attribute.
xmlParseElementMixedContentDecl_APIParam_2  the input used for the current entity, needed for boundary checks.
processingInstructionSAXFunc_APIParam_2  the processingInstructionSAXFunc_APIParam_2 name processingInstructionSAXFunc_APIParam_3  the PI data's.
xmlShellDu_APIParam_2  unused.
parse an XML file and call the given SAX handler routines.
Deallocate a Schema structure.
xmlValidateNotationUse_APIName returns  1 if valid or 0 otherwise.
Add the QName @prefix:@name to the hash @dict if not present.
Use W3C XSD schema to validate the document as it is processed.
xmlSchemaSetValidOptions_APIParam_1  a schema validation context.
xmlAddAttributeDecl_APIParam_7  the  attribute  default xmlAddAttributeDecl_APIParam_6.
xmlParserWarning_APIParam_2  xmlParserWarning_APIParam_3 message to display/transmit xmlParserWarning_APIParam_3  extra parameters xmlParserWarning_APIParam_3 the message display.
[67] Reference ::= EntityRef | CharRef.
Check an input in case it was created from an HTTP stream, in that case it will handle encoding and update of the base URL in case of redirection.
This will dump the content of the entity xmlDumpEntitiesTable_APIParam_2 as an XML DTD definition.
xmlPatternGetStreamCtxt_APIName returns  a pointer to the context or NULL in case of failure.
Gets the read state of the xmlTextReaderReadState_APIParam_1.
xmlCatalogSetDefaultPrefer_APIParam_1  the default preference for delegation.
xmlParsePITarget_APIParam_1  an XML parser context.
htmlReadFd_APIParam_1  an open file descriptor.
Note that some properties can only be changed before any read has been done.
Get the canonical lexical representation of the value.
attributeDeclSAXFunc_APIParam_1  the user data (XML parser context).
attribute xmlIsRef_APIParam_3  the  attribute.
xmlNewDocPI_APIName returns  a pointer to the new node object.
xmlExpStringDerive_APIParam_3  the string.
Callback used in the I/O Output API to open the resource.
xmlThrDefGetWarningsDefaultValue_APIParam_1 .
xmlXIncludeProcessNode_APIParam_2  a xmlXIncludeProcessNode_APIParam_2 in an XML document.
xmlRegExecErrInfo_APIParam_2  return value for the error xmlRegExecErrInfo_APIParam_2.
xmlCopyChar_APIName returns  the number of  xmlChar  written.
Note that @value needs to be the *normalized* xmlSchemaValidateFacetWhtsp_APIParam_4 if the xmlSchemaValidateFacetWhtsp_APIParam_1 is of type "pattern".
Implement the number_APIName XPath function number number(object?).
htmlCtxtReadDoc_APIName returns  the resulting document tree.
xmlStringLenDecodeEntities_APIParam_4  combination of  XML_SUBSTITUTE_REF  and  XML_SUBSTITUTE_PEREF.
htmlNodeDumpFileFormat_APIParam_4  the document htmlNodeDumpFileFormat_APIParam_4.
xmlParseBalancedChunkMemory_APIParam_1  the document the chunk pertains to.
xmlInputMatchCallback_APIParam_1  the xmlInputMatchCallback_APIParam_1 or URI.
xmlTextWriterWriteVFormatDTDAttlist_APIParam_4  pointer to the first member of the variable argument list.
Write a formatted DTD internal entity.
xmlTextWriterWriteFormatAttributeNS_APIParam_5  xmlTextWriterWriteFormatAttributeNS_APIParam_5 string (see printf) xmlTextWriterWriteFormatAttributeNS_APIParam_6  extra parameters xmlTextWriterWriteFormatAttributeNS_APIParam_6 the xmlTextWriterWriteFormatAttributeNS_APIParam_5.
Registers an external mechanism to do function lookup.
a strchr for xmlChar's.
xmlTextReaderSetSchema_APIParam_2  a precompiled Schema xmlTextReaderSetSchema_APIParam_2.
[ VC: Proper Group/PE Nesting ] applies to [51] too (see [49]) [ VC: No Duplicate Types ] The same name must not appear more than once in a single mixed-content declaration.
Write a formatted xmlTextWriterWriteFormatDTDInternalEntity_APIParam_5 internal entity.
xmlListPushBack_APIParam_2  new xmlListPushBack_APIParam_2.
xmlIOFTPRead_APIName returns  the number of bytes written.
xmlGetLastChild_APIParam_1  the xmlGetLastChild_APIParam_1 node.
xmlGcMemSetup_APIName returns  0 on success.
xmlNewDocNodeEatName_APIParam_4  the XML text xmlNewDocNodeEatName_APIParam_4 if any.
Push new data onto the xmlStreamPushNode_APIParam_1.
xmlXPathCastNodeSetToBoolean_APIName returns  the boolean value.
xmlReaderNewFd_APIParam_4  the document xmlReaderNewFd_APIParam_4, or NULL.
xmlStreamPush_APIParam_2  the current xmlStreamPush_APIParam_2.
xmlC14NDocDumpMemory_APIParam_6  the memory pointer for allocated canonical XML text; the caller of this functions is responsible for calling xmlFree_APIName to free allocated memory.
The result must be deallocated with xmlFree_APIName.
xmlTextReaderConstBaseUri_APIName returns  the base URI or NULL if not available, the string will be deallocated with the xmlTextReaderConstBaseUri_APIParam_1.
[16] PI ::= '<?'
The xmlSetNsProp_APIParam_2 structure must be in scope, this is not checked.
xmlTextReaderRelaxNGValidate_APIParam_2  the path to a RelaxNG schema or NULL.
xmlSAX2ExternalSubset_APIParam_1  the user data (XML parser context).
xmlGetDtdEntity_APIParam_1  the document referencing the entity.
htmlElementAllowedHere_APIParam_2  HTML element.
xmlXIncludeProcessFlagsData_APIName returns  0 if no substitution were done, -1 if some processing failed or the number of substitutions done.
Validate that the given  attribute  xmlValidateAttributeValue_APIParam_2 match the proper production [ VC: ID ] Values of xmlValidateAttributeValue_APIParam_1 ID must match the Name production.... [ VC: IDREF ] Values of xmlValidateAttributeValue_APIParam_1 IDREF must match the Name production, and values of xmlValidateAttributeValue_APIParam_1 IDREFS must match Names ... [ VC: Entity Name ] Values of xmlValidateAttributeValue_APIParam_1 ENTITY must match the Name production, values of xmlValidateAttributeValue_APIParam_1 ENTITIES must match Names ... [ VC: Name Token ] Values of xmlValidateAttributeValue_APIParam_1 NMTOKEN must match the Nmtoken production; values of xmlValidateAttributeValue_APIParam_1 NMTOKENS must match Nmtokens.
function checks to see if @path is a valid source (file, socket...) for XML.
Prototype for callbacks used to plug variable lookup in the XPath engine.
xmlShellValidate_APIParam_4  unused.
Should be like ftp://myproxy/ or ftp://myproxy:3128/ A NULL xmlNanoFTPScanProxy_APIParam_1 cleans up proxy informations.
xmlACatalogResolveURI_APIParam_2  the xmlACatalogResolveURI_APIParam_2.
xmlTextReaderNormalization_APIName returns  1 or -1 in case of error.
xmlTextWriterWriteFormatElement_APIParam_3  xmlTextWriterWriteFormatElement_APIParam_3 string (see printf) xmlTextWriterWriteFormatElement_APIParam_4  extra parameters xmlTextWriterWriteFormatElement_APIParam_4 the xmlTextWriterWriteFormatElement_APIParam_3.
content.
Unplug a SAX based validation layer in a SAX parsing event flow.
xmlTextReaderRelaxNGValidateCtxt_APIParam_2  the RelaxNG schema validation context or NULL.
xmlCtxtReadFd_APIParam_2  an open file descriptor.
xmlSAXParseMemoryWithData_APIParam_5  the userdata.
length of a xmlChar's string.
xmlValidateRoot_APIParam_1  the validation context.
htmlCreateMemoryParserCtxt_APIParam_1  a pointer to a char array.
xmlNewDocNode_APIParam_1  the document.
a strdup for array of xmlChar's.
Load and parse an external subset.
xmlCopyCharMultiByte_APIParam_2  the char value.
parse the XML encoding declaration [80] EncodingDecl ::= S 'encoding' Eq ('"' EncName '"' | "'" EncName "'") this setups the conversion filters.
xmlModuleOpen_APIParam_1  the module xmlModuleOpen_APIParam_1.
A  comment  has been parsed.
xmlParseEncodingDecl_APIParam_1  an XML parser context.
parse an XML file and build a tree.
xmlMemSetup_APIName returns  0 on success.
xmlValidateOneElement_APIParam_2  a document instance.
xmlXPtrNewRangeNodes_APIParam_1  the starting node.
attributeDeclSAXFunc_APIParam_5  the attributeDeclSAXFunc_APIParam_4 of default value.
The caller has to free the returned @retValue.
xmlHashScannerFull_APIParam_4  the second xmlHashScannerFull_APIParam_3 associated.
xmlTextWriterWriteFormatElement_APIParam_2  element xmlTextWriterWriteFormatElement_APIParam_2.
Initialize the default SAX2 handler.
xmlExpNewOr_APIParam_1  the expression context.
Setup the FTP proxy informations.
xmlXPathRegisterVariableNS_APIParam_4  the variable xmlXPathRegisterVariableNS_APIParam_4 or NULL.
if we are within a CDATA section ']]>' marks an end of section.
Free up the  xmlXPathObjectPtr  @obj but don't deallocate the objects in the list contrary to xmlXPathFreeObject_APIName.
xmlHashQLookup_APIParam_1  the hash xmlHashQLookup_APIParam_1.
The value indicating whether to normalize white space and  attribute  values.
If @len is < 0 then the length will be calculated automatically.
xmlTextWriterWriteFormatPI_APIName returns  xmlTextWriterWriteFormatPI_APIParam_4 bytes written (may be 0 because of buffering) or -1 in case of error.
xmlNanoFTPConnect_APIParam_1  an FTP context.
xmlDOMWrapFreeCtxt_APIParam_1  the DOM-wrapper context.
htmlCreateFileParserCtxt_APIName returns  the new parser context or NULL.
the value of the xml:space attribute.
xmlXPtrBuildNodeList_APIName returns  an  xmlNodePtr  list or NULL.
xmlBufUse_APIName returns  the length of data in the internal content.
xmlGetDtdAttrDesc_APIParam_2  the element.
xmlAddElementDecl_APIParam_2  pointer to the DTD.
xmlShellPwd_APIParam_4  unused.
of the xmlSchemaValidateLengthFacetWhtsp_APIParam_3 to be validated xmlSchemaValidateLengthFacetWhtsp_APIParam_4  the precomputed xmlSchemaValidateLengthFacetWhtsp_APIParam_3.
xmlGetFeature_APIParam_3  location to store the xmlGetFeature_APIParam_3.
If not possible the new namespaces are redeclared on @tree at the top of the given subtree.
Currently it just checks for proxy informations.
[0-9]+ In practice allow [0-9].
xmlTextWriterWriteFormatDTD_APIParam_1  xmlTextWriterWriteFormatDTD_APIParam_6  xmlTextWriterPtr.
NB.
parse the XML version.
xmlSchemaCompareValuesWhtsp_APIParam_1  a first value.
xmlNodeBufGetContent_APIParam_2  the node being read.
xmlCharEncodingOutputFunc_APIParam_1  a po.
xmlSaveFormatFileTo_APIParam_4  should formatting spaces been added.
Write a formatted xmlTextWriterWriteFormatCDATA_APIParam_3 CDATA.
xmlTextWriterEndDTD_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
Determine the XML version of the document being read.
xmlNewEntityInputStream_APIName returns  the new input stream or NULL.
xmlNamespaceParseNSDef_APIName returns  the namespace name.
htmlCreatePushParserCtxt_APIParam_3  a pointer to an array of chars.
[ WFC: Parsed Entity ] An entity  reference  must not contain the name of an unparsed entity.
xmlStrchr_APIName returns  the  xmlChar  * for the first occurrence or NULL.
xmlNewGlobalNs_APIParam_1  the document carrying the namespace.
Converts a node-set to its boolean value.
xmlSchemaValueGetAsString_APIParam_1  the value.
xmlValidateOneNamespace_APIParam_2  a document i. nstance.
xmlTextWriterWriteFormatString_APIParam_2  xmlTextWriterWriteFormatString_APIParam_2 string (see printf) xmlTextWriterWriteFormatString_APIParam_3  extra parameters xmlTextWriterWriteFormatString_APIParam_3 the xmlTextWriterWriteFormatString_APIParam_2.
Escaping routine, does not do validity checks !
Push new data onto the xmlStreamPush_APIParam_1.
xmlPatterncompile_APIName returns  the compiled form of the xmlPatterncompile_APIParam_1 or NULL in case of error.
xlinkNodeDetectFunc_APIParam_1  user data pointer.
xmlDumpNotationDecl_APIParam_2  A notation declaration.
xmlShell_APIParam_4 buffer.
xmlSchematronFreeValidCtxt_APIParam_1  the schema validation context.
Search an  attribute  associated to a xmlHasProp_APIParam_1 This function also looks in DTD  attribute  declaration for #FIXED or default declaration values unless DTD use has been turned off.
xmlTextReaderCurrentNode_APIName returns  the  xmlNodePtr  or NULL in case of error.
Try to validate a single namespace declaration for an element basically it does the following checks as described by the XML-1.0 recommendation: - [ VC: Attribute Value Type ] - [ VC: Fixed Attribute Default ] - [ VC: Entity Name ] - [ VC: Name Token ] - [ VC: ID ] - [ VC: IDREF ] - [ VC: Entity Name ] - [ VC: Notation Attributes ] The ID/IDREF uniqueness and matching are done separately.
Evaluate the Precompiled XPath expression in the given context.
Note that for a default namespace, @prefix should be NULL.
xmlSearchNs_APIName returns  the namespace pointer or NULL.
If htmlSAXParseFile_APIParam_3 is NULL, fallback to the default DOM tree building routines.
Close the data connection from the server.
xmlRelaxNGValidityWarningFunc_APIParam_2  xmlRelaxNGValidityWarningFunc_APIParam_3 message xmlRelaxNGValidityWarningFunc_APIParam_3  extra arguments.
Unlink the xmlReplaceNode_APIParam_1 node from its current context, prune the new one at the same place.
xmlSchemaSAXUnplug_APIParam_1  a data structure returned by  xmlSchemaSAXPlug.
Provides the memory access functions set currently in use The xmlGcMemGet_APIParam_3 is specialized for atomic block allocations (i.e.
xmlValidateDocument_APIName returns  1 if valid or 0 otherwise.
Validate a branch of a tree, starting with the given @elem.
resolveEntitySAXFunc_APIName returns  the  xmlParserInputPtr  if inlined or NULL for DOM behaviour.
xmlShellCmd_APIParam_3  a first xmlShellCmd_APIParam_3.
xmlTextReaderReadInnerXml_APIName returns  a string containing the XML content, or NULL if the current node is neither an element nor attribute, or has no child nodes.
xmlCreateEntityParserCtxt_APIParam_2  the entity PUBLIC xmlCreateEntityParserCtxt_APIParam_2.
xmlSchemaValidateFacet_APIName returns  0 if the element is schemas valid, a positive error code number otherwise and -1 in case of internal or API error.
This tells the XML Reader to preserve all nodes matched by the xmlTextReaderPreservePattern_APIParam_2.
free an enumeration  attribute  node (recursive).
Write the content of the array in the output I/O buffer This routine handle the I18N transcoding from internal UTF-8 The buffer is lossless, i.e.
xmlThrDefDoValidityCheckingDefaultValue_APIName returns .
htmlReadFd_APIParam_3  the document htmlReadFd_APIParam_3, or NULL.
xmlTextWriterStartDTDAttlist_APIName returns  the bytes written (may be 0 because of buffering) or -1 in case of error.
xmlCatalogIsEmpty_APIParam_1  should this create an SGML catalog.
xmlModuleClose_APIName returns  0 in case of success, -1 in case of argument error and -2 if the xmlModuleClose_APIParam_1 could not be closed/unloaded.
Provides a portable isnan_APIName function to detect whether a double is a NotaNumber.
namespace if any xmlNewNode_APIParam_2  the node xmlNewNode_APIParam_2.
This one writes a quoted or double quoted #xmlChar xmlBufferWriteQuotedString_APIParam_2, checking first if it holds quote or double-quotes internally.
xmlTextReaderStandalone_APIParam_1  the  xmlTextReaderPtr  used.
will store in case of partial or delayed writes.
xmlParserInputBufferRead_APIParam_1  a buffered parser input.
xmlTextWriterWriteVFormatComment_APIParam_1  the  xmlTextWriterPtr.
xmlPatternMinDepth_APIParam_1  the precompiled pattern.
xmlHashQLookup3_APIParam_7  a third xmlHashQLookup3_APIParam_3 of the userdata.
xmlNewCDataBlock_APIParam_3  the length of the block.
Create a new input stream based on a file or an URL.
Compile the automata into a Reg Exp ready for being executed.
clears the entire output callback table.
xmlPopInput_APIName returns  the current  xmlChar  in the parser context.
Get the default xlink detection routine.
Allocate an element content structure.
xmlTextReaderMoveToElement_APIParam_1  the  xmlTextReaderPtr  used.
xmlBufferAddHead_APIParam_1  the buffer.
xmlHasProp_APIParam_2  the  attribute  xmlHasProp_APIParam_2.
xmlSAXParseEntity_APIName returns  the resulting document tree.
Applies the htmlCtxtUseOptions_APIParam_2 to the parser context.
xmlHashCreateDict_APIParam_2  a dictionary to use for the hash.
Dump an HTML node, recursive behaviour,children are printed too, and formatting returns/spaces are added.
xmlReplaceNode_APIName returns  the @old node.
xmlTextReaderRelaxNGSetSchema_APIParam_1  the  xmlTextReaderPtr  used.
xmlC14NDocDumpMemory_APIParam_1  the XML document for canonization.
xmlNewParserCtxt_APIName returns  the  xmlParserCtxtPtr  or NULL.
xmlHasFeature_APIParam_1  the xmlHasFeature_APIParam_1 to be examined.
xmlTextWriterWriteFormatDTDInternalEntity_APIParam_1  xmlTextWriterWriteFormatDTDInternalEntity_APIParam_5  xmlTextWriterPtr.
xmlValidateNCName_APIParam_2  allow spaces in front and end of the string.
set the compression ratio for a document, ZLIB based Correct values: 0 (uncompressed) to 9 (max compression).
xmlXPathNodeSetCreate_APIName returns  the newly created object.
Is the list empty ?.
htmlEncodeEntities_APIName returns  0 if success, -2 if the transcoding fails, or -1 otherwise The value of @inlen after return is the number of octets consumed as the return value is positive, else unpredictable.
Check if the current node is empty.
xmlSAX2IgnorableWhitespace_APIParam_1  the user data (XML parser context).
xmlSchemaValueAppend_APIName returns  0 if succeeded and -1 on API errors.
Take a block of UTF-8 chars UTF8ToHtml_APIParam_3 and try to convert it to an ASCII plus HTML entities block of chars UTF8ToHtml_APIParam_1.
xmlACatalogResolveURI_APIParam_1  a Catalog.
This function is computed in bytes from the beginning starting at zero and finishing at the size in byte of the file if parsing a file.
When do we just handle that as a set of chars ?
xmlXPathVariableLookupNS_APIParam_3  the variable namespace URI.
xmlSaveFile_APIParam_1  the xmlSaveFile_APIParam_1 (or URL).
xmlStreamPop_APIParam_1  the xmlStreamPop_APIParam_1 context.
Gives the length of the data currently held in the output buffer.
htmlNewDocNoDtD_APIParam_2  the external ID of the DTD, or NULL.
Calling this method changes the HTTP output method to use the "POST" method instead.
htmlParseEntityRef_APIName returns  the associated  htmlEntityDescPtr  if found, or NULL otherwise, if non-NULL *str will have to be freed by the caller.
xmlTextWriterWriteFormatAttribute_APIName returns  xmlTextWriterWriteFormatAttribute_APIParam_4 bytes written (may be 0 because of buffering) or -1 in case of error.
xmlSAXParseDoc_APIParam_3  work in xmlSAXParseDoc_APIParam_3 mode, i.e.
xmlCatalogDump_APIParam_1  the file.
This stamps all the element nodes with the document order Like for line information, the order is kept in the element->content field, the value stored is actually - the node number (starting at -1) to be able to differentiate from line numbers.
Fetch the given file from the server.
xmlReaderNewIO_APIParam_1  an XML xmlReaderNewIO_APIParam_1.
xmlHashCopy_APIParam_2  the copier function for items in the hash.
Sort the node xmlXPathNodeSetSort_APIParam_1 in document order.
Daniel Veillard.
xmlCtxtGetLastError_APIParam_1  an XML parser context.
Load and parse a DTD.
This function tries to read @len bytes from the existing HTTP connection and saves them in @dest.
NOTE: misleading but this is handled.
xmlUTF8Strsub_APIParam_2  relative pos of first char.
xmlNewInputFromFile_APIParam_2  the xmlNewInputFromFile_APIParam_2 to use as entity.
Create an XML Schemas parse context for that memory xmlSchemaNewMemParserCtxt_APIParam_1 expected to contain an XML Schemas file.
This function checks that all the namespaces declared within the given xmlReconciliateNs_APIParam_2 are properly declared.
xmlFreeMutex_APIName is used to reclaim resources associated with a libxml2 token struct.
xmlTextWriterWriteDTDExternalEntity_APIParam_1  the  xmlTextWriterPtr.
xmlStreamWantsAnyNode_APIName returns  1 in case of need of nodes of the above described types, 0 otherwise.
xmlCharEncInFunc_APIParam_3  an  xmlBuffer  for the input.
xmlSaveFormatFileEnc_APIName returns  the number of bytes written or -1 in case of error.
xmlSAX2CDataBlock_APIParam_2  The pcdata content.
xmlRegExecCallbacks_APIParam_1  the regular expression context.
same as xmlStrncat, but creates a new string.
xmlReaderNewIO_APIParam_7  a combination of  xmlParserOption.
xmlTextWriterWriteVFormatDTDElement_APIParam_1  the  xmlTextWriterPtr.
xmlNanoHTTPSave_APIParam_2  the xmlNanoHTTPSave_APIParam_2 where the content should be saved.
xmlTextReaderConstString_APIParam_1  the  xmlTextReaderPtr  used.
Implement the substring_APIName XPath function string substring(string, number, number?)
End the current xml coment.
xmlReaderNewIO_APIParam_3  an I/O close function.
xmlSaveTree_APIName returns  the number of byte written or -1 in case of error.
SDDecl?
Register a new id declaration.
Set a custom escaping function to be used for text in element content.
htmlNodeDumpOutput_APIParam_2  the document.
xmlLoadACatalog_APIName returns  the catalog parsed or NULL in case of error.
xmlTextWriterStartDTDElement_APIParam_2  the xmlTextWriterStartDTDElement_APIParam_2 of the DTD element.
parse an XML from a file descriptor and build a tree.
xmlDebugDumpOneNode_APIParam_1  the FILE * for the xmlDebugDumpOneNode_APIParam_1.
xmlXPathCompiledEval_APIName returns  the  xmlXPathObjectPtr  resulting from the evaluation or NULL.
xmlXPtrNewRangeNodeObject_APIParam_1  the starting node.
xmlXPathContextSetCache_APIParam_4 options  xmlXPathContextSetCache_APIParam_4 (currently only the xmlXPathContextSetCache_APIParam_3 0 is used).
xmlDebugDumpAttr_APIParam_2  the  attribute.
Write the content of the string in the output I/O buffer This routine handle the I18N transcoding from internal UTF-8 The buffer is lossless, i.e.
Search and get the value of an  attribute  associated to a xmlGetProp_APIParam_1 This does the entity substitution.
If @to is NULL, this creates first a new target state in the automata and then adds a transition xmlAutomataNewCountTrans2_APIParam_2 the @from state xmlAutomataNewCountTrans2_APIParam_3 the target state activated by a succession of input of value @token and @token2 and whose number is between @min and @max.
xmlParserError_APIParam_1 xmlParserError_APIParam_3 XML parser context.
xmlTextReaderNamespaceUri_APIParam_1  the  xmlTextReaderPtr  used.
Also note, this routine checks for the 4-byte maximum size, but does not check for 0x10ffff maximum value.
