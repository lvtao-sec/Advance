xmlAutomataGetInitState_APIName returns the initial xmlAutomataGetInitState_APIParam_0 of the automata
state, xmlAutomataGetInitState_APIParam_0

xmlAutomataGetInitState_APIName returns the initial xmlAutomataGetInitState_APIParam_0 of the automata
automata,1

xmlAutomataNewCountTrans_APIParam_3 is the target point of the transition or NULL
transition,3

xmlAutomataNewCountTrans2_APIParam_3 is the target point of the transition or NULL
transition,3

xmlAutomataNewAllTrans_APIParam_3 is the target point of the transition or NULL
transition,3

xmlAutomataNewCountedTrans_APIParam_3 is the target point of the transition or NULL
transition,3

xmlAutomataNewCounterTrans_APIParam_3 is the target point of the transition or NULL
transition,3

xmlAutomataNewEpsilon_APIParam_3 is the target point of the transition or NULL
transition,3

xmlAutomataNewOnceTrans_APIParam_3 is the target point of the transition or NULL
transition,3

xmlAutomataNewNegTrans_APIParam_3 is the target point of the transition or NULL
transition,3

xmlAutomataNewOnceTrans2_APIParam_3 is the target point of the transition or NULL
transition,3

xmlAutomataNewTransition_APIParam_3 is the target point of the transition or NULL
transition,3

xmlAutomataNewTransition2_APIParam_3 is the target point of the transition or NULL
transition,3

The automata should be free after this point
automata,1

xmlAutomataNewAllTrans_APIName returns the target state or NULL in case of error
target state,3

xmlAutomataNewCountTrans2_APIName returns the target state or NULL in case of error
target state,3

xmlAutomataNewCountTrans_APIName returns the target state or NULL in case of error
target state,3

xmlAutomataNewCountedTrans_APIName returns the target state or NULL in case of error
target state,3

xmlAutomataNewCounterTrans_APIName returns the target state or NULL in case of error
target state,3

xmlAutomataNewNegTrans_APIName returns the target state or NULL in case of error
target state,3

xmlAutomataNewOnceTrans_APIName returns the target state or NULL in case of error
target state,3

xmlAutomataNewEpsilon_APIName returns the target state or NULL in case of error
target state,3

xmlAutomataNewOnceTrans2_APIName returns the target state or NULL in case of error
target state,3

xmlAutomataNewTransition_APIName returns the target state or NULL in case of error
target state,3

xmlAutomataNewTransition2_APIName returns the target state or NULL in case of error
target state,3

Compile the automata into a Reg Exp ready for being executed
automata,1

Compile the xmlAutomataCompile_APIParam_1 into a xmlAutomataCompile_APIParam_0 ready for being executed
Reg Exp, xmlAutomataCompile_APIParam_0

xmlAutomataCompile_APIName returns the compiled xmlAutomataCompile_APIParam_0 or NULL in case of error
regexp, xmlAutomataCompile_APIParam_0

xmlRegexpCompile_APIName returns the compiled expression or NULL in case of error
expression,1

xmlAutomataNewState_APIName returns the new xmlAutomataNewState_APIParam_0 or NULL in case of error
state, xmlAutomataNewState_APIParam_0

this creates first a new target state in the automata and adds a transition xmlAutomataNewOnceTrans2_APIParam_2 the @from state xmlAutomataNewOnceTrans2_APIParam_3 the target state activated by a succession of input of value @token and @token2 and whose number is between xmlAutomataNewOnceTrans2_APIParam_6 and @max , moreover that transition can only be crossed once
@min, xmlAutomataNewOnceTrans2_APIParam_6

this creates first a new target state in the automata and adds a transition xmlAutomataNewOnceTrans2_APIParam_2 the @from state xmlAutomataNewOnceTrans2_APIParam_3 the target state activated by a succession of input of value @token and @token2 and whose number is between xmlAutomataNewOnceTrans2_APIParam_6 and @max , moreover that transition can only be crossed once
target state,3

this creates first a new xmlAutomataNewOnceTrans2_APIParam_3 in the automata and adds a transition xmlAutomataNewOnceTrans2_APIParam_2 the @from state xmlAutomataNewOnceTrans2_APIParam_3 the xmlAutomataNewOnceTrans2_APIParam_3 activated by a succession of input of value @token and @token2 and whose number is between xmlAutomataNewOnceTrans2_APIParam_6 and @max , moreover that transition can only be crossed once
transition,3

this creates first a new xmlAutomataNewOnceTrans2_APIParam_3 in the automata and adds a xmlAutomataNewOnceTrans2_APIParam_3 xmlAutomataNewOnceTrans2_APIParam_2 the @from state xmlAutomataNewOnceTrans2_APIParam_3 the xmlAutomataNewOnceTrans2_APIParam_3 activated by a succession of input of value @token and @token2 and whose number is between xmlAutomataNewOnceTrans2_APIParam_6 and @max , moreover that xmlAutomataNewOnceTrans2_APIParam_3 can only be crossed once
automata,3

this creates first a new xmlAutomataNewOnceTrans2_APIParam_3 in the xmlAutomataNewOnceTrans2_APIParam_3 and adds a xmlAutomataNewOnceTrans2_APIParam_3 xmlAutomataNewOnceTrans2_APIParam_2 the @from state xmlAutomataNewOnceTrans2_APIParam_3 the xmlAutomataNewOnceTrans2_APIParam_3 activated by a succession of input of value @token and @token2 and whose number is between xmlAutomataNewOnceTrans2_APIParam_6 and @max , moreover that xmlAutomataNewOnceTrans2_APIParam_3 can only be crossed once
@token2,5

this creates first a new xmlAutomataNewOnceTrans2_APIParam_3 in the xmlAutomataNewOnceTrans2_APIParam_3 and adds a xmlAutomataNewOnceTrans2_APIParam_3 xmlAutomataNewOnceTrans2_APIParam_2 the @from state xmlAutomataNewOnceTrans2_APIParam_3 the xmlAutomataNewOnceTrans2_APIParam_3 activated by a succession of input of value @token and xmlAutomataNewOnceTrans2_APIParam_5 and whose number is between xmlAutomataNewOnceTrans2_APIParam_6 and xmlAutomataNewOnceTrans2_APIParam_7 , moreover that xmlAutomataNewOnceTrans2_APIParam_3 can only be crossed once
@max, xmlAutomataNewOnceTrans2_APIParam_7

this creates first a new target state in the automata and adds a transition xmlAutomataNewOnceTrans_APIParam_2 the @from state xmlAutomataNewOnceTrans_APIParam_3 the target state activated by a succession of input of value @token and whose number is between xmlAutomataNewOnceTrans_APIParam_5 and @max , moreover that transition can only be crossed once
@min, xmlAutomataNewOnceTrans_APIParam_5

this creates first a new target state in the automata and adds a transition xmlAutomataNewOnceTrans_APIParam_2 the @from state xmlAutomataNewOnceTrans_APIParam_3 the target state activated by a succession of input of value @token and whose number is between xmlAutomataNewOnceTrans_APIParam_5 and @max , moreover that transition can only be crossed once
target state,3

this creates first a new xmlAutomataNewOnceTrans_APIParam_3 in the automata and adds a transition xmlAutomataNewOnceTrans_APIParam_2 the @from state xmlAutomataNewOnceTrans_APIParam_3 the xmlAutomataNewOnceTrans_APIParam_3 activated by a succession of input of value @token and whose number is between xmlAutomataNewOnceTrans_APIParam_5 and @max , moreover that transition can only be crossed once
transition,3

this creates first a new xmlAutomataNewOnceTrans_APIParam_3 in the automata and adds a xmlAutomataNewOnceTrans_APIParam_3 xmlAutomataNewOnceTrans_APIParam_2 the @from state xmlAutomataNewOnceTrans_APIParam_3 the xmlAutomataNewOnceTrans_APIParam_3 activated by a succession of input of value @token and whose number is between xmlAutomataNewOnceTrans_APIParam_5 and @max , moreover that xmlAutomataNewOnceTrans_APIParam_3 can only be crossed once
automata,3

this creates first a new xmlAutomataNewOnceTrans_APIParam_3 in the xmlAutomataNewOnceTrans_APIParam_3 and adds a xmlAutomataNewOnceTrans_APIParam_3 xmlAutomataNewOnceTrans_APIParam_2 the @from state xmlAutomataNewOnceTrans_APIParam_3 the xmlAutomataNewOnceTrans_APIParam_3 activated by a succession of input of value @token and whose number is between xmlAutomataNewOnceTrans_APIParam_5 and xmlAutomataNewOnceTrans_APIParam_6 , moreover that xmlAutomataNewOnceTrans_APIParam_3 can only be crossed once
@max, xmlAutomataNewOnceTrans_APIParam_6

xmlFreeRMutex_APIParam_1 is the reentrant xmlFreeRMutex_APIParam_1
mutex, xmlFreeRMutex_APIParam_1

xmlRMutexLock_APIParam_1 is the reentrant xmlRMutexLock_APIParam_1
mutex, xmlRMutexLock_APIParam_1

xmlRMutexUnlock_APIParam_1 is the reentrant xmlRMutexUnlock_APIParam_1
mutex, xmlRMutexUnlock_APIParam_1

xmlRFreeMutex_APIName is used to reclaim resources associated with a reentrant xmlFreeRMutex_APIParam_1
mutex, xmlFreeRMutex_APIParam_1

xmlGetGlobalState_APIName returns the thread global xmlGetGlobalState_APIParam_0 or NULL in case of error
state, xmlGetGlobalState_APIParam_0

xmlValidatePopElement_APIName returns 1 if no validation problem was found or 0 otherwise
validation problem,1

xmlValidatePushCData_APIName returns 1 if no validation problem was found or 0 otherwise
validation problem,2

xmlValidatePushElement_APIName returns 1 if no validation problem was found or 0 otherwise
validation problem,1

xmlRegExecPushString_APIName returns 1 if the xmlRegExecPushString_APIParam_1 reached a final state, 0 if non-final, and a negative xmlRegExecPushString_APIParam_2 in case of error
regexp, xmlRegExecPushString_APIParam_1

xmlRegExecPushString2_APIName returns 1 if the xmlRegExecPushString2_APIParam_1 reached a final state, 0 if non-final, and a negative xmlRegExecPushString2_APIParam_2 in case of error
regexp, xmlRegExecPushString2_APIParam_1

xmlXPathCompiledEvalToBoolean_APIName returns 1 if the expression evaluated to true, 0 if to false and -1 in API and internal errors
expression,1

xmlSchemaValidateDoc_APIName returns 0 if the document is schemas valid, a positive error code number otherwise and -1 in case of internal or API error
schemas,1

xmlSchemaValidateDoc_APIName returns 0 if the xmlSchemaValidateDoc_APIParam_2 is xmlSchemaValidateDoc_APIParam_1 valid, a positive error code number otherwise and -1 in case of internal or API error
document, xmlSchemaValidateDoc_APIParam_2

xmlSchemaValidateOneElement_APIName returns 0 if the xmlSchemaValidateOneElement_APIParam_2 and its subtree is valid, a positive error code number otherwise and -1 in case of an internal or API error
element, xmlSchemaValidateOneElement_APIParam_2

xmlSchemaValidateStream_APIName returns 0 if the document is schemas valid, a positive error code number otherwise and -1 in case of internal or API error
schemas,1

xmlSchemaValidateStream_APIName returns 0 if the document is xmlSchemaValidateStream_APIParam_1 valid, a positive error code number otherwise and -1 in case of internal or API error
error code number,3

xmlRelaxNGValidateDoc_APIName returns 0 if the xmlRelaxNGValidateDoc_APIParam_2 is valid, a positive error code number otherwise and -1 in case of internal or API error
document, xmlRelaxNGValidateDoc_APIParam_2

xmlRelaxNGValidateFullElement_APIName returns 1 if no validation problem was found or -1 in case of error
validation problem,1

xmlRelaxNGValidatePopElement_APIName returns 1 if no validation problem was found or 0 otherwise
validation problem,1

xmlRelaxNGValidatePushCData_APIName returns 1 if no validation problem was found or -1 otherwise
validation problem,2

xmlRelaxNGValidatePushElement_APIName returns 1 if no validation problem was found or 0 if validating the xmlRelaxNGValidatePushElement_APIParam_3 requires a full node, and -1 in case of error
element, xmlRelaxNGValidatePushElement_APIParam_3

xmlRelaxNGValidatePushElement_APIName returns 1 if no validation problem was found or 0 if validating the xmlRelaxNGValidatePushElement_APIParam_3 requires a full node, and -1 in case of error
validation problem,1

xmlRelaxNGValidatePushElement_APIName returns 1 if no xmlRelaxNGValidatePushElement_APIParam_1 was found or 0 if validating the xmlRelaxNGValidatePushElement_APIParam_3 requires a full node, and -1 in case of error
node, xmlRelaxNGValidatePushElement_APIParam_3

xmlXPathNodeSetContains_APIName returns true  if xmlXPathNodeSetContains_APIParam_1 contains @val, false  otherwise
@cur, xmlXPathNodeSetContains_APIParam_1

xmlParseChunk_APIName returns zero if no error, the xmlParserErrors otherwise
xmlParserErrors,1

xmlParseCtxtExternalEntity_APIName returns 0 if the entity is well formed, -1 in case of args problem and the parser error code otherwise
parser error code,1

xmlParseBalancedChunkMemoryRecover_APIName returns 0 if the chunk is well balanced , -1 in case of args problem and the parser error code otherwise In case xmlParseBalancedChunkMemoryRecover_APIParam_7 is set to 1 , the xmlParseBalancedChunkMemoryRecover_APIParam_6 will not be empty  , assuming the parsing succeeded to some extent
nodelist, xmlParseBalancedChunkMemoryRecover_APIParam_6

xmlNodeGetSpacePreserve_APIName returns -1 if xmlspace is not inherited, 0 if "default", 1 if "preserve
xmlspace,1

UTF8ToHtml_APIName returns 0 if success, -2 if the transcoding fails, or -1 otherwise The value of @inlen after return is the number of octets consumed as the return value is positive, else unpredictable
@inlen,4

htmlEncodeEntities_APIName returns 0 if success, -2 if the transcoding fails, or -1 otherwise The value of @inlen after return is the number of octets consumed as the return value is positive, else unpredictable
@inlen,4

htmlParseChunk_APIName returns zero if no error, the xmlParserErrors otherwise
xmlParserErrors,1

xmlListEmpty_APIName returns 1 if the xmlListEmpty_APIParam_1 is empty, 0 if not empty and -1 in case of error
list, xmlListEmpty_APIParam_1

xmlCatalogIsEmpty_APIName returns 1 if the catalog is empty, 0 if not, amd -1 in case of error
catalog,1

xmlSchemaGetCanonValueWhtsp_APIName returns 0 if the value could be built, 1 if the value type is not supported yet and -1 in xmlSchemaGetCanonValueWhtsp_APIParam_3 of API errors
case, xmlSchemaGetCanonValueWhtsp_APIParam_3

xmlSchemaIsBuiltInTypeFacet_APIName returns 1 if the facet can be used with the given built-in xmlSchemaIsBuiltInTypeFacet_APIParam_1, 0 otherwise and -1 in case the xmlSchemaIsBuiltInTypeFacet_APIParam_1 is not a xmlSchemaIsBuiltInTypeFacet_APIParam_1
built-in type, xmlSchemaIsBuiltInTypeFacet_APIParam_1

xmlSchemaIsBuiltInTypeFacet_APIName returns 1 if the xmlSchemaIsBuiltInTypeFacet_APIParam_2 can be used with the given built-in xmlSchemaIsBuiltInTypeFacet_APIParam_1, 0 otherwise and -1 in case the xmlSchemaIsBuiltInTypeFacet_APIParam_1 is not a xmlSchemaIsBuiltInTypeFacet_APIParam_1
facet, xmlSchemaIsBuiltInTypeFacet_APIParam_2

xmlSchemaValidateFacet_APIName returns 0 if the element is schemas valid, a positive error code number otherwise and -1 in case of internal or API error
schemas,4

xmlSchemaValidateFacetWhtsp_APIName returns 0 if the element is schemas valid, a positive error code number otherwise and -1 in case of internal or API error
schemas,6

xmlSchemaValidateLengthFacetWhtsp_APIName returns 0 if the xmlSchemaValidateLengthFacetWhtsp_APIParam_3 is valid, a positive error code otherwise and -1 in xmlSchemaValidateLengthFacetWhtsp_APIParam_6 of an internal or API error
case, xmlSchemaValidateLengthFacetWhtsp_APIParam_6

htmlCreateFileParserCtxt_APIName returns the new parser context or NULL
parser context,2

xmlCreateFileParserCtxt_APIName returns the new parser context or NULL
parser context,1

xmlCreateMemoryParserCtxt_APIName returns the new parser context or NULL
parser context,1

xmlCreateEntityParserCtxt_APIName returns the new parser context or NULL
parser context,3

xmlCreateURLParserCtxt_APIName returns the new parser context or NULL
parser context,1

xmlCreateDocParserCtxt_APIName returns the new parser context or NULL
parser context,1

xmlCreatePushParserCtxt_APIName returns the new parser context or NULL
parser context,5

htmlCreateMemoryParserCtxt_APIName returns the new parser context or NULL
parser context,1

htmlCreatePushParserCtxt_APIName returns the new parser context or NULL
parser context,5

htmlCreateFileParserCtxt_APIParam_2 is a free form C string describing the HTML document htmlCreateFileParserCtxt_APIParam_2 , or NULL
form C string,2

htmlParseDoc_APIParam_2 is a free form C string describing the HTML document htmlParseDoc_APIParam_2 , or NULL
form C string,1

htmlParseFile_APIParam_2 is a free form C string describing the HTML document htmlParseFile_APIParam_2 , or NULL
form C string,2

htmlSAXParseDoc_APIParam_2 is a free form C string describing the HTML document htmlSAXParseDoc_APIParam_2 , or NULL
form C string,1

htmlSAXParseFile_APIParam_2 is a free form C string describing the HTML document htmlSAXParseFile_APIParam_2 , or NULL
form C string,2

nodePop_APIName returns the nodePop_APIParam_0 just removed
node, nodePop_APIParam_0

xmlDecodeEntities_APIName is deprecated , we now always process entities content through xmlStringDecodeEntities TODO
xmlStringDecodeEntities TODO,6

This behavior can conveniently be produced by normalizing all line breaks to xmlCurrentChar_APIParam_1 on input , before parsing . -RRB
#xA, xmlCurrentChar_APIParam_1

xmlStringDecodeEntities_APIName returns A newly allocated string with the substitution done
string,2

xmlStringLenDecodeEntities_APIName returns A newly allocated string with the substitution done
string,2

xmlParsePubidLiteral_APIName returns the PubidLiteral parsed or NULL
PubidLiteral,1

xmlParseSystemLiteral_APIName returns the SystemLiteral parsed or NULL
parsed,1

All attributes should be treated by a non-validating xmlParseAttValue_APIParam_1 declared CDATA
parser, xmlParseAttValue_APIParam_1

The xmlParseAttribute_APIParam_1 of any entity referred to directly or indirectly in an attribute xmlParseAttribute_APIParam_2 must not contain a
replacement text, xmlParseAttribute_APIParam_1

2.11 xmlCurrentChar_APIParam_2 an external parsed entity or the literal entity value of an internal parsed entity contains either the literal two-character sequence  #xD #xA  or a standalone literal #xD , an XML processor must pass to the application the single character #xA
End-of-Line Handling Wherever, xmlCurrentChar_APIParam_2

2.11 xmlCurrentChar_APIParam_2 an external parsed entity or the literal entity value of an internal parsed entity contains either the literal two-character sequence  #xD #xA  or a standalone literal #xD , an XML processor must pass to the application the single character #xA
XML processor,1

A name must not appear more than once in an XML document as a value of this type
XML document,2

each IDREF Name must match the value of an ID attribute on some element in the XML document
XML document,2

= ` ID ' | ` IDREF ' | ` IDREFS ' | ` ENTITY ' | ` ENTITIES ' | ` NMTOKEN ' | ` NMTOKENS ' Validity constraints for attribute values syntax are checked in xmlValidateAttributeValue_APIName Values of xmlValidateAttributeValue_APIParam_1 must match the Name production
type ID, xmlValidateAttributeValue_APIParam_1

= ` ID ' | ` IDREF ' | ` IDREFS ' | ` ENTITY ' | ` ENTITIES ' | ` NMTOKEN ' | ` NMTOKENS ' Validity constraints for attribute values syntax are checked in xmlValidateAttributeValue_APIName Values of xmlValidateAttributeValue_APIParam_1 must match the Name production
Validity constraints,2

Before the value of an attribute is passed to the application or checked for validity , the XML processor must normalize it as follows
XML processor,1

Skip an XML comment <!-- .... --> The spec says that  For compatibility , the string  --  must not occur within comments
XML comment,1

= ' #REQUIRED ' | ' #IMPLIED
|,1

applies to and xmlParseElementChildrenContentDecl_APIParam_1 must be properly nested with parenthesized groups
TODO Parameter-entity replacement text, xmlParseElementChildrenContentDecl_APIParam_1

xmlParseElementChildrenContentDecl_APIParam_2 is the xmlParseElementChildrenContentDecl_APIParam_2 used for the current entity , needed for boundary checks
input, xmlParseElementChildrenContentDecl_APIParam_2

xmlParseElementMixedContentDecl_APIParam_2 is the xmlParseElementMixedContentDecl_APIParam_2 used for the current entity , needed for boundary checks
input, xmlParseElementMixedContentDecl_APIParam_2

call xmlParseElementDecl_APIName for an xmlParseElementContentDecl_APIParam_3 either Mixed or Children , the cases EMPTY and ANY are handled directly in xmlParseElementDecl contentspec
Element content, xmlParseElementContentDecl_APIParam_3

call xmlParseElementDecl_APIName for an xmlParseElementContentDecl_APIParam_3 either Mixed or Children , the cases EMPTY and ANY are handled directly in xmlParseElementDecl contentspec
xmlParseElementDecl contentspec,3

call xmlParseElementDecl_APIName for an xmlParseElementContentDecl_APIParam_3 either Mixed or Children , the cases EMPTY and ANY are handled directly in xmlParseElementContentDecl_APIParam_3
xmlParseElementDecl contentspec,1

The declaration of a parameter entity must precede any reference to it
parameter entity,1

The declaration of a parameter entity must precede any reference to it
parameter entity,1

The declaration of a parameter entity must precede any reference to it
parameter entity,1

The declaration of a parameter entity must precede any reference to it
parameter entity,1

The declaration of a parameter entity must precede any reference to it
parameter entity,1

The declaration of a parameter entity must precede any reference to it
parameter entity,1

The declaration of a parameter entity must precede any reference to it
parameter entity,1

The declaration of a parameter entity must precede any reference to it
parameter entity,1

The declaration of a parameter entity must precede any reference to it
parameter entity,1

its xmlParseElementChildrenContentDecl_APIParam_1 should not be empty
replacement text, xmlParseElementChildrenContentDecl_APIParam_1

For interoperability , , and neither the first nor last non-blank character of the xmlParseElementChildrenContentDecl_APIParam_1 should be a connector
replacement text, xmlParseElementChildrenContentDecl_APIParam_1

xmlParseEntityRef_APIName returns the xmlParseEntityRef_APIParam_0 if found, or NULL otherwise
xmlEntityPtr, xmlParseEntityRef_APIParam_0

Similarly , the declaration of a general xmlParseEntityRef_APIParam_0 must precede any reference to it which appears in a default value in an attribute-list declaration
entity, xmlParseEntityRef_APIParam_0

for such documents , the rule that an xmlParseEntityRef_APIParam_0 must be declared ` yes
entity, xmlParseEntityRef_APIParam_0

' In a document without any DTD , a document with only an internal DTD subset which contains no parameter entity references , or a document with  standalone = ` yes '  , the Name given in the entity reference must match that in an entity declaration , except that well-formed documents need not declare any of the following entities
parameter entity references,1

In the internal DTD subset , parameter-entity references can occur only where markup declarations can occur , not within markup declarations
parameter-entity references,1

call xmlSAXParseDTD_APIName or a xmlParseExternalID_APIParam_2 NOTE
Public ID, xmlParseExternalID_APIParam_2

= elementdecl | AttlistDecl | EntityDecl | NotationDecl | PI | xmlParseMarkupDecl_APIParam_1 must be properly nested with markup declarations
Comment Parameter-entity replacement text, xmlParseMarkupDecl_APIParam_1

The declaration of a parameter entity must precede any reference to it ... Parameter-entity references may only appear in the DTD
parameter entity,1

The declaration of a xmlParserHandlePEReference_APIParam_1 must precede any reference to it ... Parameter-entity references may only appear in the DTD
Parameter-entity references,1

The declaration of a parameter entity must precede any reference to it ... Parameter-entity references may only appear in the DTD
parameter entity,1

The declaration of a xmlParserHandlePEReference_APIParam_1 must precede any reference to it ... Parameter-entity references may only appear in the DTD
Parameter-entity references,1

The declaration of a parameter entity must precede any reference to it ... Parameter-entity references may only appear in the DTD
parameter entity,1

The declaration of a xmlParserHandlePEReference_APIParam_1 must precede any reference to it ... Parameter-entity references may only appear in the DTD
Parameter-entity references,1

The declaration of a parameter entity must precede any reference to it ... Parameter-entity references may only appear in the DTD
parameter entity,1

The declaration of a xmlParserHandlePEReference_APIParam_1 must precede any reference to it ... Parameter-entity references may only appear in the DTD
Parameter-entity references,1

xmlParseQuotedString_APIName returns the string parser or NULL
string parser,1

xmlParseSDDecl_APIName returns 1 if standalone="yes" 0 if standalone="no" -2 if standalone attribute is missing or invalid (A standalone value of -2 means that the XML declaration was found, but no value was specified for the standalone attribute
XML declaration,1

In a document without any DTD , a document with only an internal DTD subset which contains no parameter entity references , or a document with  standalone = ` yes
parameter entity references,1

In a document without any DTD , a document with only an internal DTD subset which contains no parameter entity references , or a document with  standalone = ` yes
parameter entity references,1

In a document without any DTD , a document with only an internal DTD subset which contains no parameter entity references , or a document with  standalone = ` yes
parameter entity references,1

In a document without any DTD , a document with only an internal DTD subset which contains no parameter entity references , or a document with  standalone = ` yes
parameter entity references,1

xmlParseVersionNum_APIName returns the xmlParseVersionNum_APIParam_0 giving the XML version number, or NULL
string, xmlParseVersionNum_APIParam_0

xmlParseVersionNum_APIName returns the xmlParseVersionNum_APIParam_0 giving the XML version number, or NULL
XML version number,1

seems deprecated now , only used in the default part of xmlParserHandleReference NameChar
default part,1

xmlAddAttributeDecl_APIName returns NULL if not new, otherwise the xmlAddAttributeDecl_APIParam_9
attribute decl, xmlAddAttributeDecl_APIParam_9

xmlAddElementDecl_APIName returns NULL if not, otherwise the entity
entity,5

xmlAddID_APIName returns NULL if not, otherwise the new xmlIDPtr
xmlIDPtr,4

xmlAddRef_APIName returns NULL if not, otherwise the new xmlAddRef_APIParam_0
xmlRefPtr, xmlAddRef_APIParam_0

xmlGetPredefinedEntity_APIName returns NULL if not, otherwise the xmlGetPredefinedEntity_APIParam_0
entity, xmlGetPredefinedEntity_APIParam_0

xmlAddNotationDecl_APIParam_5 is the xmlAddNotationDecl_APIParam_5 or NULL
system identifier, xmlAddNotationDecl_APIParam_5

xmlCopyAttributeTable_APIName returns the new xmlAttributeTablePtr or NULL in case of error
xmlAttributeTablePtr,1

xmlCopyDocElementContent_APIName returns the new xmlElementContentPtr or NULL in case of error
xmlElementContentPtr,2

xmlCopyElementContent_APIName returns the new xmlElementContentPtr or NULL in case of error
xmlElementContentPtr,1

xmlCopyElementTable_APIName returns the new xmlElementTablePtr or NULL in case of error
xmlElementTablePtr,1

xmlCopyNotationTable_APIName returns the new xmlNotationTablePtr or NULL in case of error
xmlNotationTablePtr,1

xmlExpNewAtom_APIName returns the xmlExpNewAtom_APIParam_0 or NULL in case of error
node, xmlExpNewAtom_APIParam_0

xmlExpNewOr_APIName returns the node or NULL in case of error
node,3

xmlExpNewRange_APIName returns the node or NULL in case of error
node,2

xmlExpNewSeq_APIName returns the node or NULL in case of error
node,3

xmlNewTextWriter_APIName returns the new xmlNewTextWriter_APIParam_0 or NULL in case of error
xmlTextWriterPtr, xmlNewTextWriter_APIParam_0

xmlNewTextWriterDoc_APIName returns the new xmlNewTextWriterDoc_APIParam_0 or NULL in case of error
xmlTextWriterPtr, xmlNewTextWriterDoc_APIParam_0

xmlNewTextWriterFilename_APIName returns the new xmlNewTextWriterFilename_APIParam_0 or NULL in case of error
xmlTextWriterPtr, xmlNewTextWriterFilename_APIParam_0

xmlNewTextWriterMemory_APIName returns the new xmlNewTextWriterMemory_APIParam_0 or NULL in case of error
xmlTextWriterPtr, xmlNewTextWriterMemory_APIParam_0

xmlNewTextWriterPushParser_APIName returns the new xmlNewTextWriterPushParser_APIParam_0 or NULL in case of error
xmlTextWriterPtr, xmlNewTextWriterPushParser_APIParam_0

xmlNewTextWriterTree_APIName returns the new xmlNewTextWriterTree_APIParam_0 or NULL in case of error
xmlTextWriterPtr, xmlNewTextWriterTree_APIParam_0

xmlCopyEntitiesTable_APIName returns the new xmlEntitiesTablePtr or NULL in case of error
xmlEntitiesTablePtr,1

xmlNewTextReader_APIName returns the new xmlNewTextReader_APIParam_0 or NULL in case of error
xmlTextReaderPtr, xmlNewTextReader_APIParam_0

xmlNewTextReaderFilename_APIName returns the new xmlNewTextReaderFilename_APIParam_0 or NULL in case of error
xmlTextReaderPtr, xmlNewTextReaderFilename_APIParam_0

xmlReaderForDoc_APIName returns the new xmlReaderForDoc_APIParam_0 or NULL in case of error
reader, xmlReaderForDoc_APIParam_0

xmlReaderForFd_APIName returns the new xmlReaderForFd_APIParam_0 or NULL in case of error
reader, xmlReaderForFd_APIParam_0

xmlReaderForFile_APIName returns the new xmlReaderForFile_APIParam_0 or NULL in case of error
reader, xmlReaderForFile_APIParam_0

xmlReaderForIO_APIName returns the new xmlReaderForIO_APIParam_0 or NULL in case of error
reader, xmlReaderForIO_APIParam_0

xmlReaderForMemory_APIName returns the new xmlReaderForMemory_APIParam_0 or NULL in case of error
reader, xmlReaderForMemory_APIParam_0

xmlReaderWalker_APIName returns the new xmlReaderWalker_APIParam_0 or NULL in case of error
reader, xmlReaderWalker_APIParam_0

xmlTextReaderCurrentDoc_APIName returns the xmlTextReaderCurrentDoc_APIParam_0 or NULL in case of error
xmlDocPtr, xmlTextReaderCurrentDoc_APIParam_0

xmlTextReaderCurrentNode_APIName returns the xmlTextReaderCurrentNode_APIParam_0 or NULL in case of error
xmlNodePtr, xmlTextReaderCurrentNode_APIParam_0

xmlTextReaderPreserve_APIName returns the xmlTextReaderPreserve_APIParam_0 or NULL in case of error
xmlNodePtr, xmlTextReaderPreserve_APIParam_0

xmlAddNextSibling_APIName returns the new node or NULL in case of error
node,2

xmlAddPrevSibling_APIName returns the new node or NULL in case of error
node,2

xmlDOMWrapAcquireNsFunction_APIName returns an xmlDOMWrapAcquireNsFunction_APIParam_0 or NULL in case of an error
xmlNsPtr, xmlDOMWrapAcquireNsFunction_APIParam_0

xmlNewCatalog_APIName returns the xmlNewCatalog_APIParam_0 or NULL in case of error
xmlCatalogPtr, xmlNewCatalog_APIParam_0

xmlCopyEnumeration_APIName returns the xmlEnumerationPtr just created or NULL in case of error
xmlEnumerationPtr,1

xmlCreateEnumeration_APIName returns the xmlCreateEnumeration_APIParam_0 just created or NULL in case of error
xmlEnumerationPtr, xmlCreateEnumeration_APIParam_0

xmlCreateEntitiesTable_APIName returns the xmlCreateEntitiesTable_APIParam_0 just created or NULL in case of error
xmlEntitiesTablePtr, xmlCreateEntitiesTable_APIParam_0

xmlNewCharEncodingHandler_APIName returns the xmlNewCharEncodingHandler_APIParam_0 created (or NULL in case of error
xmlCharEncodingHandlerPtr, xmlNewCharEncodingHandler_APIParam_0

xmlHashScan3_APIParam_2 is the xmlHashScan3_APIParam_2 of the xmlHashScan3_APIParam_6 or NULL
userdata, xmlHashScan3_APIParam_6

xmlHashScanFull3_APIParam_2 is the xmlHashScanFull3_APIParam_2 of the xmlHashScanFull3_APIParam_6 or NULL
userdata, xmlHashScanFull3_APIParam_6

xmlGetDtdAttrDesc_APIName returns the xmlGetDtdAttrDesc_APIParam_0 if found or NULL
xmlAttributePtr, xmlGetDtdAttrDesc_APIParam_0

xmlGetDtdElementDesc_APIName returns the xmlGetDtdElementDesc_APIParam_0 if found or NULL
xmlElementPtr, xmlGetDtdElementDesc_APIParam_0

xmlGetDtdNotationDesc_APIName returns the xmlGetDtdNotationDesc_APIParam_0 if found or NULL
xmlNotationPtr, xmlGetDtdNotationDesc_APIParam_0

xmlGetDtdQAttrDesc_APIName returns the xmlGetDtdQAttrDesc_APIParam_0 if found or NULL
xmlAttributePtr, xmlGetDtdQAttrDesc_APIParam_0

xmlGetDtdQElementDesc_APIName returns the xmlGetDtdQElementDesc_APIParam_0 if found or NULL
xmlElementPtr, xmlGetDtdQElementDesc_APIParam_0

xmlGetID_APIName returns NULL if not found, otherwise the xmlGetID_APIParam_0 defining the ID
xmlAttrPtr, xmlGetID_APIParam_0

xmlNewDocElementContent_APIName returns NULL if not, otherwise the new element content structure
element,3

xmlNewElementContent_APIName returns NULL if not, otherwise the new element content structure
element,2

Deprecated in favor of xmlNewDocElementContent
xmlNewDocElementContent,2

Deprecated , unsafe , use xmlSprintfElementContent_APIParam_2
xmlSnprintfElementContent, xmlSprintfElementContent_APIParam_2

xmlValidCtxtNormalizeAttributeValue_APIParam_1 is the validation context or NULL
validation context,1

xmlTextReaderRelaxNGValidateCtxt_APIParam_2 is the xmlTextReaderRelaxNGValidateCtxt_APIParam_2 or NULL
RelaxNG schema validation context, xmlTextReaderRelaxNGValidateCtxt_APIParam_2

xmlTextReaderSchemaValidateCtxt_APIParam_2 is the xmlTextReaderSchemaValidateCtxt_APIParam_2 or NULL
XML Schema validation context, xmlTextReaderSchemaValidateCtxt_APIParam_2

xmlValidGetPotentialChildren_APIName returns the number of element in the list, or -1 in case of error
element,1

xmlValidGetValidElements -LRB- NULL , node - > childs , to append a child to ` node
xmlValidGetValidElements,3

xmlValidGetValidElements_APIParam_3 -LRB- NULL , node - > childs , to append a child to ` node
node,2

xmlValidGetValidElements -LRB- node - > last , NULL , ... pointers to the element xmlValidGetValidElements_APIParam_3 are inserted at the beginning of the array and do not need to be freed
xmlValidGetValidElements,3

xmlValidGetValidElements_APIParam_3 -LRB- node - > last , NULL , ... pointers to the element xmlValidGetValidElements_APIParam_3 are inserted at the beginning of the array and do not need to be freed
node,2

the XML processor must further process the normalized attribute xmlValidNormalizeAttributeValue_APIParam_4 by discarding any leading and trailing space characters , and by replacing sequences of space characters by single space character
space character,4

the XML processor must further process the normalized attribute xmlValidNormalizeAttributeValue_APIParam_4 by discarding any leading and trailing space characters , and by replacing sequences of space characters by single space character
XML processor,4

the xmlValidNormalizeAttributeValue_APIParam_4 must further process the normalized attribute xmlValidNormalizeAttributeValue_APIParam_4 by discarding any leading and trailing space characters , and by replacing sequences of space characters by single space character
space characters,4

the XML processor must further process the normalized attribute xmlValidCtxtNormalizeAttributeValue_APIParam_5 by discarding any leading and trailing space characters , and by replacing sequences of space characters by single space character
space character,5

the XML processor must further process the normalized attribute xmlValidCtxtNormalizeAttributeValue_APIParam_5 by discarding any leading and trailing space characters , and by replacing sequences of space characters by single space character
XML processor,5

the xmlValidCtxtNormalizeAttributeValue_APIParam_5 must further process the normalized attribute xmlValidCtxtNormalizeAttributeValue_APIParam_5 by discarding any leading and trailing space characters , and by replacing sequences of space characters by single space character
space characters,5

xmlExpExpDerive_APIName returns the resulting xmlExpExpDerive_APIParam_2 or NULL in case of internal error, the result must be freed
expression, xmlExpExpDerive_APIParam_2

xmlNanoFTPNewCtxt_APIName returns an FTP context or NULL in case of error
FTP context,1

xmlIOFTPOpen_APIName returns an I/O context or NULL in case of error
I/O context,1

xmlIOHTTPOpen_APIName returns an I/O context or NULL in case of error
I/O context,1

xmlIOHTTPOpenW_APIName returns an I/O context or NULL in case of error
I/O context,1

xmlExpParse_APIName returns a new xmlExpParse_APIParam_2 or NULL in case of failure
expression, xmlExpParse_APIParam_2

xmlExpStringDerive_APIName returns the resulting xmlExpStringDerive_APIParam_2 or NULL in case of internal error
expression, xmlExpStringDerive_APIParam_2

Get the atom associated to the choice @left | xmlExpNewOr_APIParam_3 Note that @left and xmlExpNewOr_APIParam_3 are consumed in the operation , to keep an handle on them use xmlExpRef_APIName and use xmlExpFree_APIName to release them , this is true even in case of failure
@right, xmlExpNewOr_APIParam_3

Get the atom associated to the xmlExpNewOr_APIParam_2 | xmlExpNewOr_APIParam_3 Note that @left and xmlExpNewOr_APIParam_3 are consumed in the operation , to keep an handle on them use xmlExpRef_APIName and use xmlExpFree_APIName to release them , this is true even in case of failure
choice @left, xmlExpNewOr_APIParam_2

Get the atom associated to the xmlExpNewOr_APIParam_2 | xmlExpNewOr_APIParam_3 Note that @left and xmlExpNewOr_APIParam_3 are consumed in the operation , to keep an handle on them use xmlExpRef_APIName and use xmlExpFree_APIName to release them , this is true even in case of failure
Note @left, xmlExpNewOr_APIParam_2

Get the atom associated to the range -LCB- xmlExpNewRange_APIParam_3 , @max -RCB- Note that @subset is consumed in the operation , to keep an handle on @subset use xmlExpRef_APIName and use xmlExpFree_APIName to release @subset , this is true even in case of failure
@min, xmlExpNewRange_APIParam_3

Get the atom associated to the range -LCB- xmlExpNewRange_APIParam_3 , @max -RCB- Note that xmlExpNewRange_APIParam_2 is consumed in the operation , to keep an handle on xmlExpNewRange_APIParam_2 use xmlExpRef_APIName and use xmlExpFree_APIName to release xmlExpNewRange_APIParam_2 , this is true even in case of failure
@subset, xmlExpNewRange_APIParam_2

Get the atom associated to the range -LCB- xmlExpNewRange_APIParam_3 , xmlExpNewRange_APIParam_4 -RCB- Note that xmlExpNewRange_APIParam_2 is consumed in the operation , to keep an handle on xmlExpNewRange_APIParam_2 use xmlExpRef_APIName and use xmlExpFree_APIName to release xmlExpNewRange_APIParam_2 , this is true even in case of failure
@max, xmlExpNewRange_APIParam_4

Get the atom associated to the sequence @left , xmlExpNewSeq_APIParam_3 Note that @left and xmlExpNewSeq_APIParam_3 are consumed in the operation , to keep an handle on them use xmlExpRef_APIName and use xmlExpFree_APIName to release them , this is true even in case of failure
@right, xmlExpNewSeq_APIParam_3

Get the atom associated to the xmlExpNewSeq_APIParam_2 , xmlExpNewSeq_APIParam_3 Note that @left and xmlExpNewSeq_APIParam_3 are consumed in the operation , to keep an handle on them use xmlExpRef_APIName and use xmlExpFree_APIName to release them , this is true even in case of failure
sequence @left, xmlExpNewSeq_APIParam_2

Get the atom associated to the xmlExpNewSeq_APIParam_2 , xmlExpNewSeq_APIParam_3 Note that @left and xmlExpNewSeq_APIParam_3 are consumed in the operation , to keep an handle on them use xmlExpRef_APIName and use xmlExpFree_APIName to release them , this is true even in case of failure
Note @left, xmlExpNewSeq_APIParam_2

xmlCopyError_APIName returns 0 in case of success and -1 in case of error
error,2

xmlRegExecErrInfo_APIName returns will be freed with the @exec context and do not need to be deallocated
context,2

xmlRegExecNextValues_APIName returns will be freed with the @exec context and do not need to be deallocated
context,1

Extract informations from the regexp execution, the parameter @values must point to an array of @nbval string pointers on return xmlRegExecNextValues_APIParam_2 will contain the number of possible strings in that state and the @values array will be updated with them
string pointers,5

Extract informations from the regexp execution, the parameter @values must point to an array of @nbval xmlRegExecNextValues_APIParam_5 on return xmlRegExecNextValues_APIParam_2 will contain the number of possible strings in that state and the @values array will be updated with them
execution, xmlRegExecNextValues_APIParam_1

xmlOutputBufferCreateFilenameFunc_APIName returns the new xmlOutputBufferCreateFilenameFunc_APIParam_0 in case of success or NULL if no method was found
xmlOutputBufferPtr, xmlOutputBufferCreateFilenameFunc_APIParam_0

xmlParserInputBufferCreateFilenameFunc_APIName returns the new xmlParserInputBufferCreateFilenameFunc_APIParam_0 in case of success or NULL if no method was found
xmlParserInputBufferPtr, xmlParserInputBufferCreateFilenameFunc_APIParam_0

xmlCtxtGetLastError_APIName returns NULL if no xmlCtxtGetLastError_APIParam_0 occurred or a pointer to the xmlCtxtGetLastError_APIParam_0
error, xmlCtxtGetLastError_APIParam_0

xmlGetLastError_APIName returns NULL if no xmlGetLastError_APIParam_0 occurred or a pointer to the xmlGetLastError_APIParam_0
error, xmlGetLastError_APIParam_0

xmlCharStrdup_APIName returns a new xmlCharStrdup_APIParam_0 or NULL
xmlChar *, xmlCharStrdup_APIParam_0

xmlCharStrndup_APIName returns a new xmlCharStrndup_APIParam_0 or NULL
xmlChar *, xmlCharStrndup_APIParam_0

xmlStrdup_APIName returns a new xmlChar * or NULL
xmlChar *,1

xmlStrndup_APIName returns a new xmlChar * or NULL
xmlChar *,1

xmlLoadExternalEntity_APIName returns the xmlLoadExternalEntity_APIParam_0 or NULL
xmlParserInputPtr, xmlLoadExternalEntity_APIParam_0

xmlNewParserCtxt_APIName returns the xmlNewParserCtxt_APIParam_0 or NULL
xmlParserCtxtPtr, xmlNewParserCtxt_APIParam_0

xmlNodeGetContent_APIName returns a new #xmlChar * or NULL if no content is available
content,1

xmlNodeGetContent_APIName returns a new xmlNodeGetContent_APIParam_0 * or NULL if no xmlNodeGetContent_APIParam_1 is available
#xmlChar, xmlNodeGetContent_APIParam_0

xmlXPathCastBooleanToString_APIName returns a newly allocated xmlXPathCastBooleanToString_APIParam_0
string, xmlXPathCastBooleanToString_APIParam_0

xmlXPathCastNodeSetToString_APIName returns a newly allocated xmlXPathCastNodeSetToString_APIParam_0
string, xmlXPathCastNodeSetToString_APIParam_0

xmlXPathCastNodeToString_APIName returns a newly allocated xmlXPathCastNodeToString_APIParam_0
string, xmlXPathCastNodeToString_APIParam_0

xmlXPathCastNumberToString_APIName returns a newly allocated xmlXPathCastNumberToString_APIParam_0
string, xmlXPathCastNumberToString_APIParam_0

xmlXPathCastToString_APIName returns the allocated string value of the object, NULL in case of error
object, xmlXPathCastToString_APIParam_1

xmlXPathCompile_APIName returns the xmlXPathCompile_APIParam_0 resulting from the compilation or NULL
xmlXPathCompExprPtr, xmlXPathCompile_APIParam_0

xmlXPathCtxtCompile_APIName returns the xmlXPathCtxtCompile_APIParam_0 resulting from the compilation or NULL
xmlXPathCompExprPtr, xmlXPathCtxtCompile_APIParam_0

xmlXPathCmpNodes_APIName returns -2 in case of error 1 if first point < second point, 0 if it is the same node, -1 otherwise
node,2

xmlSchemaGetValidErrors_APIName returns -1 in case of error and 0 otherwise
error,2

xmlRelaxNGGetValidErrors_APIName returns -1 in case of error and 0 otherwise
error,2

xmlXPathCompiledEval_APIName returns the xmlXPathCompiledEval_APIParam_0 resulting from the evaluation or NULL
xmlXPathObjectPtr, xmlXPathCompiledEval_APIParam_0

xmlXPathEval_APIName returns the xmlXPathEval_APIParam_0 resulting from the evaluation or NULL
xmlXPathObjectPtr, xmlXPathEval_APIParam_0

xmlXPathEvalExpression_APIName returns the xmlXPathEvalExpression_APIParam_0 resulting from the evaluation or NULL
xmlXPathObjectPtr, xmlXPathEvalExpression_APIParam_0

xmlXPathNodeEval_APIName returns the xmlXPathNodeEval_APIParam_0 resulting from the evaluation or NULL
xmlXPathObjectPtr, xmlXPathNodeEval_APIParam_0

xmlXPtrEval_APIName returns the xmlXPtrEval_APIParam_0 resulting from the evaluation or NULL
xmlXPathObjectPtr, xmlXPtrEval_APIParam_0

Other values for xmlXPathContextSetCache_APIParam_4 have currently no effect
@options, xmlXPathContextSetCache_APIParam_4

the result will be converted to true if the number is equal to the position of the xmlXPathEvaluatePredicateResult_APIParam_1 in the xmlXPathEvaluatePredicateResult_APIParam_1 list and will be converted to false otherwise
context node, xmlXPathEvaluatePredicateResult_APIParam_1

the xmlXPathEvaluatePredicateResult_APIParam_2 will be converted to true if the number is equal to the position of the xmlXPathEvaluatePredicateResult_APIParam_1 in the xmlXPathEvaluatePredicateResult_APIParam_1 list and will be converted to false otherwise
result, xmlXPathEvaluatePredicateResult_APIParam_2

the xmlXPathEvaluatePredicateResult_APIParam_2 will be converted to true if the number is equal to the position of the xmlXPathEvaluatePredicateResult_APIParam_1 in the xmlXPathEvaluatePredicateResult_APIParam_1 list and will be converted to false otherwise
context node list, xmlXPathEvaluatePredicateResult_APIParam_1

the result will be converted to true if the number is equal to the position of the xmlXPathEvaluatePredicateResult_APIParam_1 in the xmlXPathEvaluatePredicateResult_APIParam_1 list and will be converted to false otherwise
context node, xmlXPathEvaluatePredicateResult_APIParam_1

the xmlXPathEvaluatePredicateResult_APIParam_2 will be converted to true if the number is equal to the position of the xmlXPathEvaluatePredicateResult_APIParam_1 in the xmlXPathEvaluatePredicateResult_APIParam_1 list and will be converted to false otherwise
result, xmlXPathEvaluatePredicateResult_APIParam_2

the xmlXPathEvaluatePredicateResult_APIParam_2 will be converted to true if the number is equal to the position of the xmlXPathEvaluatePredicateResult_APIParam_1 in the xmlXPathEvaluatePredicateResult_APIParam_1 list and will be converted to false otherwise
context node list, xmlXPathEvaluatePredicateResult_APIParam_1

the result will be converted to true if the number is equal to the position of the xmlXPathEvaluatePredicateResult_APIParam_1 in the xmlXPathEvaluatePredicateResult_APIParam_1 list and will be converted to false otherwise
context node, xmlXPathEvaluatePredicateResult_APIParam_1

the xmlXPathEvaluatePredicateResult_APIParam_2 will be converted to true if the number is equal to the position of the xmlXPathEvaluatePredicateResult_APIParam_1 in the xmlXPathEvaluatePredicateResult_APIParam_1 list and will be converted to false otherwise
result, xmlXPathEvaluatePredicateResult_APIParam_2

the xmlXPathEvaluatePredicateResult_APIParam_2 will be converted to true if the number is equal to the position of the xmlXPathEvaluatePredicateResult_APIParam_1 in the xmlXPathEvaluatePredicateResult_APIParam_1 list and will be converted to false otherwise
context node list, xmlXPathEvaluatePredicateResult_APIParam_1

the result will be converted to true if the number is equal to the position of the xmlXPathEvaluatePredicateResult_APIParam_1 in the xmlXPathEvaluatePredicateResult_APIParam_1 list and will be converted to false otherwise
context node, xmlXPathEvaluatePredicateResult_APIParam_1

the xmlXPathEvaluatePredicateResult_APIParam_2 will be converted to true if the number is equal to the position of the xmlXPathEvaluatePredicateResult_APIParam_1 in the xmlXPathEvaluatePredicateResult_APIParam_1 list and will be converted to false otherwise
result, xmlXPathEvaluatePredicateResult_APIParam_2

the xmlXPathEvaluatePredicateResult_APIParam_2 will be converted to true if the number is equal to the position of the xmlXPathEvaluatePredicateResult_APIParam_1 in the xmlXPathEvaluatePredicateResult_APIParam_1 list and will be converted to false otherwise
context node list, xmlXPathEvaluatePredicateResult_APIParam_1

xmlXPathFuncLookupFunc_APIName returns the xmlXPathFuncLookupFunc_APIParam_0 or NULL if not found
XPath function, xmlXPathFuncLookupFunc_APIParam_0

xmlXPathNewContext_APIName returns the xmlXPathNewContext_APIParam_0 just allocated
xmlXPathContext, xmlXPathNewContext_APIParam_0

xmlXPtrNewContext_APIName returns the xmlXPtrNewContext_APIParam_0 just allocated
xmlXPathContext, xmlXPtrNewContext_APIParam_0

xmlXPathNewParserContext_APIName returns the xmlXPathParserContext just allocated
xmlXPathParserContext,2

xmlSAX2GetPublicId_APIName returns a xmlSAX2GetPublicId_APIParam_0
xmlChar, xmlSAX2GetPublicId_APIParam_0

xmlSAX2GetSystemId_APIName returns a xmlSAX2GetSystemId_APIParam_0
xmlChar, xmlSAX2GetSystemId_APIParam_0

xmlXPathObjectCopy_APIName returns the newly created object
object,1

xmlXPtrLocationSetCreate_APIName returns the newly created xmlXPtrLocationSetCreate_APIParam_1
object, xmlXPtrLocationSetCreate_APIParam_1

xmlXPtrNewCollapsedRange_APIName returns the newly created xmlXPtrNewCollapsedRange_APIParam_0
object, xmlXPtrNewCollapsedRange_APIParam_0

xmlXPtrNewLocationSetNodeSet_APIName returns the newly created xmlXPtrNewLocationSetNodeSet_APIParam_0
object, xmlXPtrNewLocationSetNodeSet_APIParam_0

xmlXPtrNewLocationSetNodes_APIName returns the newly created xmlXPtrNewLocationSetNodes_APIParam_0
object, xmlXPtrNewLocationSetNodes_APIParam_0

xmlXPtrNewRange_APIName returns the newly created xmlXPtrNewRange_APIParam_0
object, xmlXPtrNewRange_APIParam_0

xmlXPtrNewRangeNodeObject_APIName returns the newly created object
object,2

xmlXPtrNewRangeNodePoint_APIName returns the newly created object
object,2

xmlXPtrNewRangeNodes_APIName returns the newly created xmlXPtrNewRangeNodes_APIParam_0
object, xmlXPtrNewRangeNodes_APIParam_0

xmlXPtrNewRangePointNode_APIName returns the newly created object
object,1

xmlXPtrNewRangePoints_APIName returns the newly created object
object,2

xmlXPtrWrapLocationSet_APIName returns the newly created xmlXPtrWrapLocationSet_APIParam_0
object, xmlXPtrWrapLocationSet_APIParam_0

xmlXPathNewBoolean_APIName returns the newly created xmlXPathNewBoolean_APIParam_0
object, xmlXPathNewBoolean_APIParam_0

xmlXPathNewCString_APIName returns the newly created xmlXPathNewCString_APIParam_0
object, xmlXPathNewCString_APIParam_0

xmlXPathNewFloat_APIName returns the newly created xmlXPathNewFloat_APIParam_0
object, xmlXPathNewFloat_APIParam_0

xmlXPathNewNodeSet_APIName returns the newly created xmlXPathNewNodeSet_APIParam_0
object, xmlXPathNewNodeSet_APIParam_0

xmlXPathNewNodeSetList_APIName returns the newly created xmlXPathNewNodeSetList_APIParam_0
object, xmlXPathNewNodeSetList_APIParam_0

xmlXPathNewValueTree_APIName returns the newly created xmlXPathNewValueTree_APIParam_0
object, xmlXPathNewValueTree_APIParam_0

xmlXPathNewString_APIName returns the newly created xmlXPathNewString_APIParam_0
object, xmlXPathNewString_APIParam_0

xmlXPathWrapCString_APIName returns the newly created xmlXPathWrapCString_APIParam_0
object, xmlXPathWrapCString_APIParam_0

xmlXPathWrapExternal_APIName returns the newly created xmlXPathWrapExternal_APIParam_0
object, xmlXPathWrapExternal_APIParam_0

xmlXPathWrapNodeSet_APIName returns the newly created xmlXPathWrapNodeSet_APIParam_0
object, xmlXPathWrapNodeSet_APIParam_0

xmlXPathWrapString_APIName returns the newly created xmlXPathWrapString_APIParam_0
object, xmlXPathWrapString_APIParam_0

xmlXPathNodeSetCreate_APIParam_1 is an initial xmlNodePtr , or NULL
xmlNodePtr,1

xmlXPtrLocationSetCreate_APIParam_1 is an initial xmlXPtrLocationSetCreate_APIParam_1 , or NULL
xmlXPathObjectPtr, xmlXPtrLocationSetCreate_APIParam_1

xmlXPathOrderDocElems_APIName returns the number of elements found in the xmlXPathOrderDocElems_APIParam_1 or -1 in case of error
document, xmlXPathOrderDocElems_APIParam_1

The xmlXPathSetContextNode_APIParam_1 must be in the same document as that associated with the context
context,2

xmlNewTextWriterTree_APIParam_2 is xmlNodePtr or NULL for doc - > children
doc,1

xmlNewTextWriterTree_APIParam_2 is xmlNodePtr or NULL for xmlNewTextWriterTree_APIParam_1 - > children
xmlNodePtr,2

xmlTextWriterSetIndent_APIParam_2 = 0 do not xmlTextWriterSetIndent_APIParam_2
indentation, xmlTextWriterSetIndent_APIParam_2

xmlTextWriterSetIndent_APIParam_2 > 0 do xmlTextWriterSetIndent_APIParam_2
indentation, xmlTextWriterSetIndent_APIParam_2

Start an xml attribute with namespace support
xml attribute,4

Start an xml element with namespace support
xml element,4

The entity must have been started with xmlTextWriterWriteDTDExternalEntity_APIParam_1
xmlTextWriterStartDTDEntity, xmlTextWriterWriteDTDExternalEntity_APIParam_1

Write a formatted xml element with namespace support
xml element,4

xmlIsBaseChar_APIParam_1 or xmlIsBaseCharQ instead
Use xmlIsBaseChar_ch, xmlIsBaseChar_APIParam_1

xmlIsBaseChar_APIParam_1 or xmlIsBaseChar_APIParam_1 instead
xmlIsBaseCharQ, xmlIsBaseChar_APIParam_1

xmlIsBlank_APIParam_1 or xmlIsBlankQ instead
Use xmlIsBlank_ch, xmlIsBlank_APIParam_1

xmlIsChar_APIParam_1 or xmlIsCharQ instead
Use xmlIsChar_ch, xmlIsChar_APIParam_1

xmlIsChar_APIParam_1 or xmlIsChar_APIParam_1 instead
xmlIsCharQ, xmlIsChar_APIParam_1

xmlIsDigit_APIParam_1 or xmlIsDigitQ instead
Use xmlIsDigit_ch, xmlIsDigit_APIParam_1

xmlIsExtender_APIParam_1 or xmlIsExtenderQ instead
Use xmlIsExtender_ch, xmlIsExtender_APIParam_1

xmlIsPubidChar_APIParam_1 or xmlIsPubidCharQ instead
Use xmlIsPubidChar_ch, xmlIsPubidChar_APIParam_1

xmlIsPubidChar_APIParam_1 or xmlIsPubidChar_APIParam_1 instead
xmlIsPubidCharQ, xmlIsPubidChar_APIParam_1

xmlSaveToBuffer_APIName returns a new serialization context or NULL in case of error
serialization context,2

xmlSaveToFd_APIName returns a new serialization context or NULL in case of error
serialization context,2

xmlSaveToFilename_APIName returns a new serialization context or NULL in case of error
serialization context,2

xmlSaveToIO_APIName returns a new xmlSaveToIO_APIParam_3 or NULL in case of error
serialization context, xmlSaveToIO_APIParam_3

xmlAddDocEntity_APIName returns a pointer to the entity or NULL in case of error
pointer,6

xmlAddDocEntity_APIName returns a xmlAddDocEntity_APIParam_6 to the xmlAddDocEntity_APIParam_0 or NULL in case of error
entity, xmlAddDocEntity_APIParam_0

xmlAddDtdEntity_APIName returns a pointer to the entity or NULL in case of error
pointer,6

xmlAddDtdEntity_APIName returns a xmlAddDtdEntity_APIParam_6 to the xmlAddDtdEntity_APIParam_0 or NULL in case of error
entity, xmlAddDtdEntity_APIParam_0

xmlNewEntity_APIName returns a pointer to the entity or NULL in case of error
pointer,6

xmlNewEntity_APIName returns a xmlNewEntity_APIParam_6 to the xmlNewEntity_APIParam_0 or NULL in case of error
entity, xmlNewEntity_APIParam_0

Contrary to xmlEncodeEntities , this routine is reentrant , and result must be deallocated
xmlEncodeEntities,2

remove xmlEncodeEntities , once we are not afraid of breaking binary compatibility People must migrate their code to xmlEncodeEntitiesReentrant
xmlEncodeEntities,2

remove xmlEncodeEntities_APIParam_2 , once we are not afraid of breaking binary compatibility People must migrate their code to xmlEncodeEntitiesReentrant
xmlEncodeEntitiesReentrant,2

xmlGetDocEntity returns A pointer to the entity structure or NULL if not found
pointer,2

xmlGetDtdEntity returns A pointer to the entity structure or NULL if not found
pointer,2

xmlGetParameterEntity returns A pointer to the entity structure or NULL if not found
pointer,2

Note the first argument is the xmlGetDtdEntity_APIParam_1 , not the DTD node
document node, xmlGetDtdEntity_APIParam_1

xmlXPtrBuildNodeList_APIName returns an xmlXPtrBuildNodeList_APIParam_0 or NULL
xmlNodePtr list, xmlXPtrBuildNodeList_APIParam_0

Create a new entity, this differs from xmlAddDocEntity_APIName that if the document is NULL or has no internal subset defined, an unlinked xmlNewEntity_APIParam_0 structure will be returned, it is the responsability of the caller to link it to the document later or free it when not needed anymore
entity, xmlNewEntity_APIParam_0

Create a new entity, this differs from xmlAddDocEntity_APIName that if the xmlNewEntity_APIParam_1 is NULL or has no internal subset defined, an unlinked xmlNewEntity_APIParam_0 structure will be returned, it is the responsability of the caller to link it to the xmlNewEntity_APIParam_1 later or free it when not needed anymore
document, xmlNewEntity_APIParam_1

Create a new entity, this differs from xmlAddDocEntity_APIName that if the xmlNewEntity_APIParam_1 is NULL or has no internal subset defined, an unlinked xmlNewEntity_APIParam_0 structure will be returned, it is the responsability of the caller to link it to the xmlNewEntity_APIParam_1 later or free it when not needed anymore
entity structure,6

xmlXPtrNewContext_APIParam_2 is the node that directly contains the XPointer being evaluated or NULL
node,3

it may be worthwhile to first convert it into a  nice  one by calling xmlBuildRelativeURI_APIParam_1 before calling this routine , since this routine assumes xmlBuildRelativeURI_APIParam_1 has already been through some validation
xmlBuildURI, xmlBuildRelativeURI_APIParam_1

xmlParseURI_APIName returns a newly built xmlParseURI_APIParam_0 or NULL in case of error
xmlURIPtr, xmlParseURI_APIParam_0

xmlParseURIRaw_APIName returns a newly built xmlParseURIRaw_APIParam_0 or NULL in case of error
xmlURIPtr, xmlParseURIRaw_APIParam_0

xmlPathToURI_APIName returns a new URI, or a duplicate of the xmlPathToURI_APIParam_1 parameter if the construction fails
construction,1

xmlSaveUri_APIName returns a new xmlSaveUri_APIParam_0 (to be deallocated by caller
string, xmlSaveUri_APIParam_0

It will try to escape the chars needing this , but this is heuristic based it is impossible to be sure
chars,1

xmlURIEscapeStr_APIName returns a new escaped string or NULL in case of error
string,1

xmlURIUnescapeString_APIName returns a copy of the string, but unescaped, will return NULL only in case of error
string,1

xmlHashScan3_APIParam_3 is a second xmlHashScan3_APIParam_2 of the xmlHashScan3_APIParam_6 or NULL
userdata, xmlHashScan3_APIParam_6

xmlHashScanFull3_APIParam_3 is a second xmlHashScanFull3_APIParam_2 of the xmlHashScanFull3_APIParam_6 or NULL
userdata, xmlHashScanFull3_APIParam_6

xmlHashScan3_APIParam_4 is a third xmlHashScan3_APIParam_2 of the xmlHashScan3_APIParam_6 or NULL
userdata, xmlHashScan3_APIParam_6

xmlHashScanFull3_APIParam_4 is a third xmlHashScanFull3_APIParam_2 of the xmlHashScanFull3_APIParam_6 or NULL
userdata, xmlHashScanFull3_APIParam_6

xmlSchemaGetParserErrors_APIName returns -1 in xmlSchemaGetParserErrors_APIParam_1 of failure, 0 otherwise
case, xmlSchemaGetParserErrors_APIParam_1

xmlSchemaNewDocParserCtxt_APIName returns the parser context or NULL in xmlSchemaNewDocParserCtxt_APIParam_0 of error
case, xmlSchemaNewDocParserCtxt_APIParam_0

xmlSchemaNewMemParserCtxt_APIName returns the parser context or NULL in case of error
parser context,1

xmlSchemaNewMemParserCtxt_APIName returns the xmlSchemaNewMemParserCtxt_APIParam_1 or NULL in xmlSchemaNewMemParserCtxt_APIParam_0 of error
case, xmlSchemaNewMemParserCtxt_APIParam_0

xmlSchemaNewParserCtxt_APIName returns the parser context or NULL in case of error
parser context,1

xmlSchemaNewParserCtxt_APIName returns the xmlSchemaNewParserCtxt_APIParam_1 or NULL in xmlSchemaNewParserCtxt_APIParam_0 of error
case, xmlSchemaNewParserCtxt_APIParam_0

xmlRelaxNGNewMemParserCtxt_APIName returns the parser context or NULL in case of error
parser context,1

xmlRelaxNGNewParserCtxt_APIName returns the parser context or NULL in case of error
parser context,1

xmlSchematronNewDocParserCtxt_APIName returns the parser context or NULL in xmlSchematronNewDocParserCtxt_APIParam_0 of error
case, xmlSchematronNewDocParserCtxt_APIParam_0

xmlSchematronNewMemParserCtxt_APIName returns the parser context or NULL in case of error
parser context,1

xmlSchematronNewMemParserCtxt_APIName returns the xmlSchematronNewMemParserCtxt_APIParam_1 or NULL in xmlSchematronNewMemParserCtxt_APIParam_0 of error
case, xmlSchematronNewMemParserCtxt_APIParam_0

xmlSchematronNewParserCtxt_APIName returns the parser context or NULL in case of error
parser context,1

xmlSchematronNewParserCtxt_APIName returns the xmlSchematronNewParserCtxt_APIParam_1 or NULL in xmlSchematronNewParserCtxt_APIParam_0 of error
case, xmlSchematronNewParserCtxt_APIParam_0

The xmlSchematronNewDocParserCtxt_APIParam_1 may be modified
document, xmlSchematronNewDocParserCtxt_APIParam_1

The xmlSchematronNewDocParserCtxt_APIParam_1 may be modified
document, xmlSchematronNewDocParserCtxt_APIParam_1

The xmlSchematronNewDocParserCtxt_APIParam_1 may be modified
document, xmlSchematronNewDocParserCtxt_APIParam_1

The xmlSchematronNewDocParserCtxt_APIParam_1 may be modified
document, xmlSchematronNewDocParserCtxt_APIParam_1

xmlSchemaParse_APIName returns the internal XML Schema structure built from the resource or NULL in case of error
XML Schema structure,1

xmlSchemaParse_APIName returns the internal xmlSchemaParse_APIParam_1 built from the resource or NULL in xmlSchemaParse_APIParam_1 of error
case, xmlSchemaParse_APIParam_1

xmlRelaxNGParse_APIName returns the internal XML RelaxNG structure built from the resource or NULL in case of error
XML RelaxNG structure,1

xmlSchematronParse_APIName returns the internal XML Schematron structure built from the resource or NULL in case of error
XML Schematron structure,1

xmlSchematronParse_APIName returns the internal xmlSchematronParse_APIParam_1 built from the resource or NULL in xmlSchematronParse_APIParam_1 of error
case, xmlSchematronParse_APIParam_1

xmlSchemaSAXPlug_APIName returns a pointer to a data structure needed to unplug the validation layer or NULL in case of errors
pointer,2

xmlSchemaSAXPlug_APIName returns a xmlSchemaSAXPlug_APIParam_2 to a data structure needed to unplug the validation layer or NULL in case of errors
validation layer,3

xmlSchemaSAXPlug_APIName returns a xmlSchemaSAXPlug_APIParam_2 to a data structure needed to unplug the xmlSchemaSAXPlug_APIParam_3 or NULL in case of errors
data structure,3

xmlSchemaValidCtxtGetParserCtxt_APIName returns the parser context of the xmlSchemaValidCtxtGetParserCtxt_APIParam_1 or NULL in case of error
schema validation context, xmlSchemaValidCtxtGetParserCtxt_APIParam_1

xmlSchemaValidCtxtGetParserCtxt_APIName returns the xmlSchemaValidCtxtGetParserCtxt_APIParam_1 of the xmlSchemaValidCtxtGetParserCtxt_APIParam_1 or NULL in case of error
parser context, xmlSchemaValidCtxtGetParserCtxt_APIParam_1

Validate an xmlSchemaValidateStream_APIParam_2 based on a flow of xmlSchemaValidateStream_APIParam_4 from the parser and forward the events to the @sax handler with the provided @user_data the user call xmlSchemaValidateStream_APIName must be a SAX2 one
SAX event, xmlSchemaValidateStream_APIParam_4

Validate an xmlSchemaValidateStream_APIParam_2 based on a flow of xmlSchemaValidateStream_APIParam_4 from the parser and forward the events to the @sax handler with the provided xmlSchemaValidateStream_APIParam_5 the user call xmlSchemaValidateStream_APIName must be a SAX2 one
@user_data, xmlSchemaValidateStream_APIParam_5

Validate an xmlSchemaValidateStream_APIParam_2 based on a flow of xmlSchemaValidateStream_APIParam_4 from the parser and forward the events to the @sax handler with the provided xmlSchemaValidateStream_APIParam_5 the user call xmlSchemaValidateStream_APIName must be a SAX2 one
@sax handler,4

Validate an xmlSchemaValidateStream_APIParam_2 based on a flow of xmlSchemaValidateStream_APIParam_4 from the xmlSchemaValidateStream_APIParam_2 and forward the events to the xmlSchemaValidateStream_APIParam_4 with the provided xmlSchemaValidateStream_APIParam_5 the user call xmlSchemaValidateStream_APIName must be a SAX2 one
parser, xmlSchemaValidateStream_APIParam_2

The value of @outlen after return is the number of octets consumed
@outlen,2

The value of @outlen after return is the number of octets consumed
@outlen,2

The value of @outlen after return is the number of octets consumed
@outlen,2

The value of @outlen after return is the number of octets consumed
@outlen,2

The value of @outlen after return is the number of octets consumed
@outlen,2

The value of @outlen after return is the number of octets consumed
@outlen,2

The value of @outlen after return is the number of octets consumed
@outlen,2

The value of @outlen after return is the number of octets consumed
@outlen,2

The value of @outlen after return is the number of octets consumed
@outlen,2

The value of @outlen after return is the number of octets consumed
@outlen,2

The value of @outlen after return is the number of octets consumed
@outlen,2

The value of @outlen after return is the number of octets consumed
@outlen,2

The value of @outlen after return is the number of octets consumed
@outlen,2

The value of @outlen after return is the number of octets consumed
@outlen,2

The value of @outlen after return is the number of octets consumed
@outlen,2

The value of @inlen after return is the number of octets consumed if the return value is positive, else unpredictiable
@inlen,4

The value of @inlen after return is the number of octets consumed if the return value is positive, else unpredictiable
@inlen,4

The value of @inlen after return is the number of octets consumed if the return value is positive, else unpredictiable
@inlen,4

The value of @inlen after return is the number of octets consumed if the return value is positive, else unpredictiable
@inlen,4

The value of @outlen after return is the number of octets consumed
@outlen,2

The value of @outlen after return is the number of octets consumed
@outlen,2

The value of @outlen after return is the number of octets consumed
@outlen,2

The value of @outlen after return is the number of octets consumed
@outlen,2

The value of @outlen after return is the number of octets consumed
@outlen,2

The value of @outlen after return is the number of octets consumed
@outlen,2

The value of @outlen after return is the number of octets consumed
@outlen,2

The value of @outlen after return is the number of octets consumed
@outlen,2

The value of @outlen after return is the number of octets consumed
@outlen,2

The value of @outlen after return is the number of octets consumed
@outlen,2

limit itself to 45 chars
chars,1

xmlCharEncodingInputFunc_APIName returns the number of bytes written, -1 if lack of space, or -2 if the xmlCharEncodingInputFunc_APIParam_3 failed
transcoding, xmlCharEncodingInputFunc_APIParam_3

xmlCharEncodingOutputFunc_APIName returns the number of bytes written, -1 if lack of space, or -2 if the xmlCharEncodingOutputFunc_APIParam_3 failed
transcoding, xmlCharEncodingOutputFunc_APIParam_3

Generic front-end for the encoding xmlCharEncOutFunc_APIParam_1 output function a first call with @in == NULL has to be made firs to initiate the output xmlCharEncOutFunc_APIParam_3 case of non-stateless encoding needing to initiate their state or the output
@in,3

Generic front-end for the encoding xmlCharEncOutFunc_APIParam_1 output function a first call with xmlCharEncOutFunc_APIParam_3 == NULL has to be made firs to initiate the output xmlCharEncOutFunc_APIParam_3 case of non-stateless encoding needing to initiate their state or the output
front-end,1

Generic xmlCharEncOutFunc_APIParam_1 for the encoding xmlCharEncOutFunc_APIParam_1 xmlCharEncOutFunc_APIParam_2 function a first call with xmlCharEncOutFunc_APIParam_3 == NULL has to be made firs to initiate the xmlCharEncOutFunc_APIParam_2 xmlCharEncOutFunc_APIParam_3 case of non-stateless encoding needing to initiate their state or the xmlCharEncOutFunc_APIParam_2
output, xmlCharEncOutFunc_APIParam_2

a first call designed to produce heading xmlCharEncodingOutputFunc_APIParam_3 is called with xmlCharEncodingOutputFunc_APIParam_3 = NULL
info, xmlCharEncodingOutputFunc_APIParam_3

The value of @outlen after return is the number of octets produced
@outlen,2

xmlFindCharEncodingHandler_APIName returns the xmlFindCharEncodingHandler_APIParam_0 or NULL if not found
handler, xmlFindCharEncodingHandler_APIParam_0

xmlGetCharEncodingHandler_APIName returns the xmlGetCharEncodingHandler_APIParam_0 or NULL if not found
handler, xmlGetCharEncodingHandler_APIParam_0

xmlDetectCharEncoding_APIParam_1 is a xmlDetectCharEncoding_APIParam_1 to the first bytes of the XML entity , must be at least 2 bytes long
pointer, xmlDetectCharEncoding_APIParam_1

xmlDetectCharEncoding_APIParam_1 is a xmlDetectCharEncoding_APIParam_1 to the first bytes of the xmlDetectCharEncoding_APIParam_2 , must be at least 2 bytes long
XML entity, xmlDetectCharEncoding_APIParam_2

xmlCopyError_APIParam_1 is a source error
source error,2

And xmlSetStructuredErrorFunc_APIParam_1 will be passed as first argument to @handler For multi-threaded applications , this must be set separately for each thread
@ctx, xmlSetStructuredErrorFunc_APIParam_1

And xmlSetStructuredErrorFunc_APIParam_1 will be passed as first argument to xmlSetStructuredErrorFunc_APIParam_2 For multi-threaded applications , this must be set separately for each thread
@handler, xmlSetStructuredErrorFunc_APIParam_2

htmlDocDump_APIName returns the number of byte written or -1 in case of htmlDocDump_APIParam_1
failure, htmlDocDump_APIParam_1

htmlNodeDumpFileFormat_APIName returns the number of byte written or -1 in case of htmlNodeDumpFileFormat_APIParam_1
failure, htmlNodeDumpFileFormat_APIParam_1

xmlDocDump_APIName returns the number of bytes written or -1 in case of xmlDocDump_APIParam_1
failure, xmlDocDump_APIParam_1

xmlDocFormatDump_APIName returns the number of bytes written or -1 in case of xmlDocFormatDump_APIParam_1
failure, xmlDocFormatDump_APIParam_1

xmlNanoFTPConnectTo_APIName returns an fTP context or NULL if xmlNanoFTPConnectTo_APIName failed
fTP context,1

xmlNanoFTPOpen_APIName returns an FTP context, or NULL
FTP context,1

Initialize the FTP Proxy context by parsing the xmlNanoFTPScanProxy_APIParam_1 and finding the protocol host port it indicates
FTP Proxy context,1

Initialize the HTTP Proxy context by parsing the xmlNanoHTTPScanProxy_APIParam_1 and finding the protocol host port it indicates
HTTP Proxy context,1

xmlC14NExecute_APIParam_5 is the list of inclusive namespace prefixes ended with a NULL or NULL
list,2

this xmlC14NExecute_APIParam_7 have encoder == NULL
buffer MUST, xmlC14NExecute_APIParam_7

this xmlC14NExecute_APIParam_7 have encoder == NULL
buffer MUST, xmlC14NExecute_APIParam_7

this xmlC14NExecute_APIParam_7 have encoder == NULL
buffer MUST, xmlC14NExecute_APIParam_7

this xmlC14NExecute_APIParam_7 have encoder == NULL
buffer MUST, xmlC14NExecute_APIParam_7

xmlTextReaderConstEncoding_APIName returns a xmlTextReaderConstEncoding_APIParam_0 containing the encoding of the document or NULL in case of error
string, xmlTextReaderConstEncoding_APIParam_0

xmlTextReaderConstBaseUri_APIName returns the base URI or NULL if not available, the xmlTextReaderConstBaseUri_APIParam_0 will be deallocated with the reader
string, xmlTextReaderConstBaseUri_APIParam_0

xmlTextReaderConstBaseUri_APIName returns the base URI or NULL if not available, the xmlTextReaderConstBaseUri_APIParam_0 will be deallocated with the reader
reader,1

xmlTextReaderConstLocalName_APIName returns the local name or NULL if not available, the xmlTextReaderConstLocalName_APIParam_0 will be deallocated with the reader
string, xmlTextReaderConstLocalName_APIParam_0

xmlTextReaderConstLocalName_APIName returns the local name or NULL if not available, the xmlTextReaderConstLocalName_APIParam_0 will be deallocated with the reader
reader,1

xmlTextReaderConstName_APIName returns the local name or NULL if not available, the xmlTextReaderConstName_APIParam_0 is deallocated with the reader
string, xmlTextReaderConstName_APIParam_0

xmlTextReaderConstName_APIName returns the local name or NULL if not available, the xmlTextReaderConstName_APIParam_0 is deallocated with the reader
reader,1

xmlTextReaderConstPrefix_APIName returns the prefix or NULL if not available, the xmlTextReaderConstPrefix_APIParam_0 is deallocated with the reader
string, xmlTextReaderConstPrefix_APIParam_0

xmlTextReaderConstPrefix_APIName returns the prefix or NULL if not available, the xmlTextReaderConstPrefix_APIParam_0 is deallocated with the reader
reader,1

xmlTextReaderConstNamespaceUri_APIName returns the namespace URI or NULL if not available, the xmlTextReaderConstNamespaceUri_APIParam_0 will be deallocated with the reader
string, xmlTextReaderConstNamespaceUri_APIParam_0

xmlTextReaderConstNamespaceUri_APIName returns the namespace URI or NULL if not available, the xmlTextReaderConstNamespaceUri_APIParam_0 will be deallocated with the reader
reader,1

xmlTextReaderConstString_APIName returns an interned copy of the string or NULL in case of error
string,2

xmlStrdupFunc_APIName returns the copy of the string or NULL in case of error
string,1

xmlTextReaderConstValue_APIName returns the xmlTextReaderConstValue_APIParam_0 or NULL if not available
string, xmlTextReaderConstValue_APIParam_0

xmlTextReaderValue_APIName returns the xmlTextReaderValue_APIParam_0 or NULL if not available
string, xmlTextReaderValue_APIParam_0

xmlSchemaCollapseString_APIName returns the new string or NULL if no change was required
change,1

xmlSchemaWhiteSpaceReplace_APIName returns the new string or NULL if no change was required
change,1

xmlTextReaderConstXmlVersion_APIName returns a xmlTextReaderConstXmlVersion_APIParam_0 containing the XML version of the document or NULL in case of error
string, xmlTextReaderConstXmlVersion_APIParam_0

xmlTextReaderConstXmlVersion_APIName returns a xmlTextReaderConstXmlVersion_APIParam_0 containing the XML version of the document or NULL in case of error
XML version,1

as a result of this call , the xmlTextReaderCurrentDoc_APIParam_1 will not destroy the associated XML document and calling xmlFreeDoc_APIName on the result is needed once the xmlTextReaderCurrentDoc_APIParam_1 parsing has finished
XML document,1

xmlTextReaderErrorFunc_APIParam_4 is a xmlTextReaderErrorFunc_APIParam_4 indicating where the xmlTextReaderErrorFunc_APIParam_4 occurred
error, xmlTextReaderErrorFunc_APIParam_4

xmlTextReaderExpand_APIName returns a node pointer valid until the next xmlTextReaderRead_APIName call or NULL in case of error
node pointer,1

xmlTextReaderGetAttributeNo_APIName returns a xmlTextReaderGetAttributeNo_APIParam_0 containing the value of the specified attribute, or NULL in case of error
string, xmlTextReaderGetAttributeNo_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

The xmlTextReaderReadString_APIParam_0 must be deallocated by the caller
string, xmlTextReaderReadString_APIParam_0

xmlTextReaderGetRemainder_APIName returns the xmlTextReaderGetRemainder_APIParam_0 attached to the XML or NULL in case of error
xmlParserInputBufferPtr, xmlTextReaderGetRemainder_APIParam_0

xmlTextReaderLocatorBaseURI_APIName returns the base URI or NULL in case of error, if non NULL it need to be freed by the caller
error, xmlTextReaderLocatorBaseURI_APIParam_1

Currently implemented only for xmlTextReaderNextSibling_APIParam_1 built on a document
Readers, xmlTextReaderNextSibling_APIParam_1

Since attribute value and end of line normalizations are a MUST in the XML specification only the value true is accepted
XML specification,1

xmlTextReaderReadInnerXml_APIName returns a string containing the XML content, or NULL if the current node is neither an element nor attribute, or has no child nodes
XML content,1

xmlTextReaderReadInnerXml_APIName returns a xmlTextReaderReadInnerXml_APIParam_0 containing the XML content, or NULL if the current node is neither an element nor attribute, or has no child nodes
string, xmlTextReaderReadInnerXml_APIParam_0

xmlTextReaderReadOuterXml_APIName returns a xmlTextReaderReadOuterXml_APIParam_0 containing the node and any XML content, or NULL if the current node cannot be serialized
string, xmlTextReaderReadOuterXml_APIParam_0

xmlTextReaderReadOuterXml_APIName returns a xmlTextReaderReadOuterXml_APIParam_0 containing the node and any XML content, or NULL if the current node cannot be serialized
XML content,1

xmlTextReaderReadString_APIName returns a xmlTextReaderReadString_APIParam_0 containing the contents of the Element or Text node, or NULL if the xmlTextReaderReadString_APIParam_1 is positioned on any other type of node
string, xmlTextReaderReadString_APIParam_0

xmlTextReaderRelaxNGSetSchema_APIName returns 0 in case the RelaxNG validation could be activated and -1 in case of error
RelaxNG validation,2

xmlTextReaderRelaxNGValidateCtxt_APIName returns 0 in case the schemas validation could be activated and -1 in case of error
schemas validation,2

xmlTextReaderSchemaValidateCtxt_APIName returns 0 in case the schemas validation could be activated and -1 in case of error
schemas validation,2

xmlTextReaderSetSchema_APIName returns 0 in case the xmlTextReaderSetSchema_APIParam_2 could be activated and -1 in case of error
Schema validation, xmlTextReaderSetSchema_APIParam_2

@ The xmlTextReaderRelaxNGSetSchema_APIParam_2 should not be call xmlRegFreeRegexp_APIName is deallocated or its use has been deactivated
@schema, xmlTextReaderRelaxNGSetSchema_APIParam_2

@ The @schema should not be call xmlRegFreeRegexp_APIName is deallocated or its use has been deactivated
@schema,2

xmlTextReaderRelaxNGValidate_APIParam_2 is the path to a xmlTextReaderRelaxNGValidate_APIParam_2 or NULL
RelaxNG schema, xmlTextReaderRelaxNGValidate_APIParam_2

xmlTextReaderSchemaValidate_APIParam_2 is the path to a xmlTextReaderSchemaValidate_APIParam_2 or NULL
W3C XSD schema, xmlTextReaderSchemaValidate_APIParam_2

xmlNanoHTTPFetch_APIParam_2 is the xmlNanoHTTPFetch_APIParam_2 where the xmlNanoHTTPFetch_APIParam_3 should be saved
content, xmlNanoHTTPFetch_APIParam_3

xmlNanoHTTPSave_APIParam_2 is the xmlNanoHTTPSave_APIParam_2 where the content should be saved
content,2

xmlDictCreateSub_APIName returns the newly created dictionary, or NULL if an error occurred
dictionary,1

xmlDictSetLimit_APIName returns the previous xmlDictSetLimit_APIParam_2 of the xmlDictSetLimit_APIParam_1 or 0
dictionary, xmlDictSetLimit_APIParam_1

xmlDictSize_APIName returns the number of elements in the xmlDictSize_APIParam_1 or -1 in case of error
dictionary, xmlDictSize_APIParam_1

xmlXPathCompareValues_APIName returns 1 if the comparison succeeded, 0 if it failed
comparison,1

The < comparison will be true if the first number is less than the second number
comparison,1

The < = comparison will be true if the first number is greater than the second number
comparison,1

The < = comparison will be true if the first number is less than or equal to the second number
comparison,1

The < = comparison will be true if the first number is greater than or equal to the second number
comparison,1

Implement the boolean_APIName XPath function boolean boolean The boolean function converts its argument to a boolean as follows
argument,2

Implement the contains_APIName XPath function boolean contains The contains function returns true if the first argument string contains the second argument string, and otherwise returns false
argument string,2

xmlXPathFunctionLookup_APIName returns the xmlXPathFunctionLookup_APIParam_0 or NULL if not found
xmlXPathFunction, xmlXPathFunctionLookup_APIParam_0

xmlXPathFunctionLookupNS_APIName returns the xmlXPathFunctionLookupNS_APIParam_0 or NULL if not found
xmlXPathFunction, xmlXPathFunctionLookupNS_APIParam_0

xmlXPathHasSameNodes_APIName returns true  if @nodes1 shares any node with @nodes2, false  otherwise
@nodes2, xmlXPathHasSameNodes_APIParam_2

xmlXPathHasSameNodes_APIName returns true  if xmlXPathHasSameNodes_APIParam_1 any node with @nodes2, false  otherwise
@nodes1 shares, xmlXPathHasSameNodes_APIParam_1

xmlXPathHasSameNodes_APIName returns true  if xmlXPathHasSameNodes_APIParam_1 any node with @nodes2, false  otherwise
node,2

the result is the union of the result of applying xmlXPathIdFunction_APIParam_0 to the string value of each of the nodes in the argument node-set
id, xmlXPathIdFunction_APIParam_0

the result is the union of the result of applying xmlXPathIdFunction_APIParam_0 to the string value of each of the nodes in the argument node-set
argument node-set,2

xmlXPathLeading_APIName returns the nodes in xmlXPathLeading_APIParam_1 that precede the first node in @nodes2 in document order, xmlXPathLeading_APIParam_1 if @nodes2 is NULL or empty or an empty node-set if xmlXPathLeading_APIParam_1 does not contain @nodes2
@nodes1, xmlXPathLeading_APIParam_1

xmlXPathLeading_APIName returns the nodes in xmlXPathLeading_APIParam_1 that precede the first node in xmlXPathLeading_APIParam_2 in document order, xmlXPathLeading_APIParam_1 if xmlXPathLeading_APIParam_2 is NULL or empty or an empty node-set if xmlXPathLeading_APIParam_1 does not contain xmlXPathLeading_APIParam_2
@nodes2, xmlXPathLeading_APIParam_2

xmlXPathLeading_APIName returns the nodes in xmlXPathLeading_APIParam_1 that precede the first node in xmlXPathLeading_APIParam_2 in document order, xmlXPathLeading_APIParam_1 if xmlXPathLeading_APIParam_2 is NULL or empty or an empty node-set if xmlXPathLeading_APIParam_1 does not contain xmlXPathLeading_APIParam_2
node,2

xmlXPathLeading_APIName returns the nodes in xmlXPathLeading_APIParam_1 that precede the first xmlXPathLeading_APIParam_2 in xmlXPathLeading_APIParam_2 in document order, xmlXPathLeading_APIParam_1 if xmlXPathLeading_APIParam_2 is NULL or empty or an empty node-set if xmlXPathLeading_APIParam_1 does not contain xmlXPathLeading_APIParam_2
node-set,2

xmlXPathLeading_APIName returns the nodes in xmlXPathLeading_APIParam_1 that precede the first xmlXPathLeading_APIParam_2 in xmlXPathLeading_APIParam_2 in document order, xmlXPathLeading_APIParam_1 if xmlXPathLeading_APIParam_2 is NULL or empty or an empty xmlXPathLeading_APIParam_2 if xmlXPathLeading_APIParam_1 does not contain xmlXPathLeading_APIParam_2
nodes,2

xmlXPathLeadingSorted_APIName returns the nodes in xmlXPathLeadingSorted_APIParam_1 that precede the first node in @nodes2 in document order, xmlXPathLeadingSorted_APIParam_1 if @nodes2 is NULL or empty or an empty node-set if xmlXPathLeadingSorted_APIParam_1 does not contain @nodes2
@nodes1, xmlXPathLeadingSorted_APIParam_1

xmlXPathLeadingSorted_APIName returns the nodes in xmlXPathLeadingSorted_APIParam_1 that precede the first node in xmlXPathLeadingSorted_APIParam_2 in document order, xmlXPathLeadingSorted_APIParam_1 if xmlXPathLeadingSorted_APIParam_2 is NULL or empty or an empty node-set if xmlXPathLeadingSorted_APIParam_1 does not contain xmlXPathLeadingSorted_APIParam_2
@nodes2, xmlXPathLeadingSorted_APIParam_2

xmlXPathLeadingSorted_APIName returns the nodes in xmlXPathLeadingSorted_APIParam_1 that precede the first node in xmlXPathLeadingSorted_APIParam_2 in document order, xmlXPathLeadingSorted_APIParam_1 if xmlXPathLeadingSorted_APIParam_2 is NULL or empty or an empty node-set if xmlXPathLeadingSorted_APIParam_1 does not contain xmlXPathLeadingSorted_APIParam_2
node,2

xmlXPathLeadingSorted_APIName returns the nodes in xmlXPathLeadingSorted_APIParam_1 that precede the first xmlXPathLeadingSorted_APIParam_2 in xmlXPathLeadingSorted_APIParam_2 in document order, xmlXPathLeadingSorted_APIParam_1 if xmlXPathLeadingSorted_APIParam_2 is NULL or empty or an empty node-set if xmlXPathLeadingSorted_APIParam_1 does not contain xmlXPathLeadingSorted_APIParam_2
node-set,2

xmlXPathLeadingSorted_APIName returns the nodes in xmlXPathLeadingSorted_APIParam_1 that precede the first xmlXPathLeadingSorted_APIParam_2 in xmlXPathLeadingSorted_APIParam_2 in document order, xmlXPathLeadingSorted_APIParam_1 if xmlXPathLeadingSorted_APIParam_2 is NULL or empty or an empty xmlXPathLeadingSorted_APIParam_2 if xmlXPathLeadingSorted_APIParam_1 does not contain xmlXPathLeadingSorted_APIParam_2
nodes,2

xmlXPathNodeLeading_APIName returns the xmlXPathNodeLeading_APIParam_1 in @nodes that precede @node in document order, @nodes if @node is NULL or an empty node-set if @nodes does not contain @node
@node,2

xmlXPathNodeLeading_APIName returns the xmlXPathNodeLeading_APIParam_1 in @nodes that precede xmlXPathNodeLeading_APIParam_2 in document order, @nodes if xmlXPathNodeLeading_APIParam_2 is NULL or an empty node-set if @nodes does not contain @node
@nodes,2

xmlXPathNodeLeading_APIName returns the xmlXPathNodeLeading_APIParam_1 in xmlXPathNodeLeading_APIParam_2 that precede xmlXPathNodeLeading_APIParam_2 in document order, xmlXPathNodeLeading_APIParam_2 if xmlXPathNodeLeading_APIParam_2 is NULL or an empty node-set if xmlXPathNodeLeading_APIParam_2 does not contain @node
node-set,1

xmlXPathNodeLeading_APIName returns the xmlXPathNodeLeading_APIParam_1 in xmlXPathNodeLeading_APIParam_2 that precede xmlXPathNodeLeading_APIParam_2 in document order, xmlXPathNodeLeading_APIParam_2 if xmlXPathNodeLeading_APIParam_2 is NULL or an empty xmlXPathNodeLeading_APIParam_1 if xmlXPathNodeLeading_APIParam_2 does not contain @node
document order, xmlXPathNodeLeading_APIParam_2

xmlXPathNodeLeadingSorted_APIName returns the xmlXPathNodeLeadingSorted_APIParam_1 in @nodes that precede @node in document order, @nodes if @node is NULL or an empty node-set if @nodes does not contain @node
@node,2

xmlXPathNodeLeadingSorted_APIName returns the xmlXPathNodeLeadingSorted_APIParam_1 in @nodes that precede xmlXPathNodeLeadingSorted_APIParam_2 in document order, @nodes if xmlXPathNodeLeadingSorted_APIParam_2 is NULL or an empty node-set if @nodes does not contain @node
@nodes,2

xmlXPathNodeLeadingSorted_APIName returns the xmlXPathNodeLeadingSorted_APIParam_1 in xmlXPathNodeLeadingSorted_APIParam_2 that precede xmlXPathNodeLeadingSorted_APIParam_2 in document order, xmlXPathNodeLeadingSorted_APIParam_2 if xmlXPathNodeLeadingSorted_APIParam_2 is NULL or an empty node-set if xmlXPathNodeLeadingSorted_APIParam_2 does not contain @node
node-set,1

xmlXPathNodeLeadingSorted_APIName returns the xmlXPathNodeLeadingSorted_APIParam_1 in xmlXPathNodeLeadingSorted_APIParam_2 that precede xmlXPathNodeLeadingSorted_APIParam_2 in document order, xmlXPathNodeLeadingSorted_APIParam_2 if xmlXPathNodeLeadingSorted_APIParam_2 is NULL or an empty xmlXPathNodeLeadingSorted_APIParam_1 if xmlXPathNodeLeadingSorted_APIParam_2 does not contain @node
document order, xmlXPathNodeLeadingSorted_APIParam_2

xmlXPathNodeSetMerge_APIParam_1 is the first NodeSet or NULL
NodeSet,2

Namespace nodes in libxml do not match the XPath semantic
libxml,1

xmlXPathNodeTrailing_APIName returns the xmlXPathNodeTrailing_APIParam_1 in @nodes that follow @node in document order, @nodes if @node is NULL or an empty node-set if @nodes does not contain @node
@node,2

xmlXPathNodeTrailing_APIName returns the xmlXPathNodeTrailing_APIParam_1 in @nodes that follow xmlXPathNodeTrailing_APIParam_2 in document order, @nodes if xmlXPathNodeTrailing_APIParam_2 is NULL or an empty node-set if @nodes does not contain @node
@nodes,2

xmlXPathNodeTrailing_APIName returns the xmlXPathNodeTrailing_APIParam_1 in xmlXPathNodeTrailing_APIParam_2 that follow xmlXPathNodeTrailing_APIParam_2 in document order, xmlXPathNodeTrailing_APIParam_2 if xmlXPathNodeTrailing_APIParam_2 is NULL or an empty node-set if xmlXPathNodeTrailing_APIParam_2 does not contain @node
node-set,1

xmlXPathNodeTrailing_APIName returns the xmlXPathNodeTrailing_APIParam_1 in xmlXPathNodeTrailing_APIParam_2 that follow xmlXPathNodeTrailing_APIParam_2 in document order, xmlXPathNodeTrailing_APIParam_2 if xmlXPathNodeTrailing_APIParam_2 is NULL or an empty xmlXPathNodeTrailing_APIParam_1 if xmlXPathNodeTrailing_APIParam_2 does not contain @node
document order, xmlXPathNodeTrailing_APIParam_2

xmlXPathNodeTrailingSorted_APIName returns the xmlXPathNodeTrailingSorted_APIParam_1 in @nodes that follow @node in document order, @nodes if @node is NULL or an empty node-set if @nodes does not contain @node
@node,2

xmlXPathNodeTrailingSorted_APIName returns the xmlXPathNodeTrailingSorted_APIParam_1 in @nodes that follow xmlXPathNodeTrailingSorted_APIParam_2 in document order, @nodes if xmlXPathNodeTrailingSorted_APIParam_2 is NULL or an empty node-set if @nodes does not contain @node
@nodes,2

xmlXPathNodeTrailingSorted_APIName returns the xmlXPathNodeTrailingSorted_APIParam_1 in xmlXPathNodeTrailingSorted_APIParam_2 that follow xmlXPathNodeTrailingSorted_APIParam_2 in document order, xmlXPathNodeTrailingSorted_APIParam_2 if xmlXPathNodeTrailingSorted_APIParam_2 is NULL or an empty node-set if xmlXPathNodeTrailingSorted_APIParam_2 does not contain @node
node-set,1

xmlXPathNodeTrailingSorted_APIName returns the xmlXPathNodeTrailingSorted_APIParam_1 in xmlXPathNodeTrailingSorted_APIParam_2 that follow xmlXPathNodeTrailingSorted_APIParam_2 in document order, xmlXPathNodeTrailingSorted_APIParam_2 if xmlXPathNodeTrailingSorted_APIParam_2 is NULL or an empty xmlXPathNodeTrailingSorted_APIParam_1 if xmlXPathNodeTrailingSorted_APIParam_2 does not contain @node
document order, xmlXPathNodeTrailingSorted_APIParam_2

Implement the not_APIName XPath function boolean not The not function returns true if its argument is false, and false otherwise
argument,2

Implement the not_APIName XPath function boolean not The not function returns true if its xmlXPathNotFunction_APIParam_2 is false, and false otherwise
XPath function boolean,1

xmlXPathRegisterFunc_APIParam_3 is the function implementation or NULL
function implementation,3

xmlXPathRegisterFuncNS_APIParam_4 is the function implementation or NULL
function implementation,4

Implement the starts-with_APIName XPath function boolean starts-with The starts-with function returns true if the first argument string starts with the second argument string, and otherwise returns false
argument string,2

xmlXPathTrailing_APIName returns the nodes in xmlXPathTrailing_APIParam_1 that follow the first node in @nodes2 in document order, xmlXPathTrailing_APIParam_1 if @nodes2 is NULL or empty or an empty node-set if xmlXPathTrailing_APIParam_1 does not contain @nodes2
@nodes1, xmlXPathTrailing_APIParam_1

xmlXPathTrailing_APIName returns the nodes in xmlXPathTrailing_APIParam_1 that follow the first node in xmlXPathTrailing_APIParam_2 in document order, xmlXPathTrailing_APIParam_1 if xmlXPathTrailing_APIParam_2 is NULL or empty or an empty node-set if xmlXPathTrailing_APIParam_1 does not contain xmlXPathTrailing_APIParam_2
@nodes2, xmlXPathTrailing_APIParam_2

xmlXPathTrailing_APIName returns the nodes in xmlXPathTrailing_APIParam_1 that follow the first node in xmlXPathTrailing_APIParam_2 in document order, xmlXPathTrailing_APIParam_1 if xmlXPathTrailing_APIParam_2 is NULL or empty or an empty node-set if xmlXPathTrailing_APIParam_1 does not contain xmlXPathTrailing_APIParam_2
node,2

xmlXPathTrailing_APIName returns the nodes in xmlXPathTrailing_APIParam_1 that follow the first xmlXPathTrailing_APIParam_2 in xmlXPathTrailing_APIParam_2 in document order, xmlXPathTrailing_APIParam_1 if xmlXPathTrailing_APIParam_2 is NULL or empty or an empty node-set if xmlXPathTrailing_APIParam_1 does not contain xmlXPathTrailing_APIParam_2
node-set,2

xmlXPathTrailing_APIName returns the nodes in xmlXPathTrailing_APIParam_1 that follow the first xmlXPathTrailing_APIParam_2 in xmlXPathTrailing_APIParam_2 in document order, xmlXPathTrailing_APIParam_1 if xmlXPathTrailing_APIParam_2 is NULL or empty or an empty xmlXPathTrailing_APIParam_2 if xmlXPathTrailing_APIParam_1 does not contain xmlXPathTrailing_APIParam_2
nodes,2

xmlXPathTrailingSorted_APIName returns the nodes in xmlXPathTrailingSorted_APIParam_1 that follow the first node in @nodes2 in document order, xmlXPathTrailingSorted_APIParam_1 if @nodes2 is NULL or empty or an empty node-set if xmlXPathTrailingSorted_APIParam_1 does not contain @nodes2
@nodes1, xmlXPathTrailingSorted_APIParam_1

xmlXPathTrailingSorted_APIName returns the nodes in xmlXPathTrailingSorted_APIParam_1 that follow the first node in xmlXPathTrailingSorted_APIParam_2 in document order, xmlXPathTrailingSorted_APIParam_1 if xmlXPathTrailingSorted_APIParam_2 is NULL or empty or an empty node-set if xmlXPathTrailingSorted_APIParam_1 does not contain xmlXPathTrailingSorted_APIParam_2
@nodes2, xmlXPathTrailingSorted_APIParam_2

xmlXPathTrailingSorted_APIName returns the nodes in xmlXPathTrailingSorted_APIParam_1 that follow the first node in xmlXPathTrailingSorted_APIParam_2 in document order, xmlXPathTrailingSorted_APIParam_1 if xmlXPathTrailingSorted_APIParam_2 is NULL or empty or an empty node-set if xmlXPathTrailingSorted_APIParam_1 does not contain xmlXPathTrailingSorted_APIParam_2
node,2

xmlXPathTrailingSorted_APIName returns the nodes in xmlXPathTrailingSorted_APIParam_1 that follow the first xmlXPathTrailingSorted_APIParam_2 in xmlXPathTrailingSorted_APIParam_2 in document order, xmlXPathTrailingSorted_APIParam_1 if xmlXPathTrailingSorted_APIParam_2 is NULL or empty or an empty node-set if xmlXPathTrailingSorted_APIParam_1 does not contain xmlXPathTrailingSorted_APIParam_2
node-set,2

xmlXPathTrailingSorted_APIName returns the nodes in xmlXPathTrailingSorted_APIParam_1 that follow the first xmlXPathTrailingSorted_APIParam_2 in xmlXPathTrailingSorted_APIParam_2 in document order, xmlXPathTrailingSorted_APIParam_1 if xmlXPathTrailingSorted_APIParam_2 is NULL or empty or an empty xmlXPathTrailingSorted_APIParam_2 if xmlXPathTrailingSorted_APIParam_1 does not contain xmlXPathTrailingSorted_APIParam_2
nodes,2

Implement the substring-after_APIName XPath function string substring-after The substring-after function returns the substring of the first argument string that follows the first occurrence of the second argument string in the first argument string, or the empty stringi if the first argument string does not contain the second argument string
argument string,2

the comparisons and addition used for the above follow the standard IEEE 754 rules
comparisons,1

occurrences of that character in the first argument string are removed
argument string,2

xmlPatternGetStreamCtxt_APIName returns a pointer to the context or NULL in case of failure
pointer,1

Both @name and @ns being NULL means the / i.e
@ns,3

Both @name and @ns being NULL means the / i.e
@ns,3

Both @name and @ns being NULL means the / i.e
@ns,3

Both @name and @ns being NULL means the / i.e
@ns,3

Both @name and @ns being NULL means the / i.e
@ns,3

Both @name and @ns being NULL means the / i.e
@ns,3

Both @name and @ns being NULL means the / i.e
@ns,3

Both @name and @ns being NULL means the / i.e
@ns,3

Both @name and @ns being NULL means the / i.e
@ns,3

strings for xmlStreamPush_APIParam_2 and xmlStreamPush_APIParam_3 will be expected to come from the dictionary
strings,1

strings for xmlStreamPushAttr_APIParam_2 and xmlStreamPushAttr_APIParam_3 will be expected to come from the dictionary
strings,1

strings for xmlStreamPushNode_APIParam_2 and xmlStreamPushNode_APIParam_3 will be expected to come from the dictionary
strings,1

xmlSAX2GetEntity_APIName returns the xmlSAX2GetEntity_APIParam_0 if found
xmlEntityPtr, xmlSAX2GetEntity_APIParam_0

xmlSAX2GetParameterEntity_APIName returns the xmlSAX2GetParameterEntity_APIParam_0 if found
xmlEntityPtr, xmlSAX2GetParameterEntity_APIParam_0

getEntitySAXFunc_APIName returns the getEntitySAXFunc_APIParam_0 if found
xmlEntityPtr, getEntitySAXFunc_APIParam_0

getParameterEntitySAXFunc_APIName returns the getParameterEntitySAXFunc_APIParam_0 if found
xmlEntityPtr, getParameterEntitySAXFunc_APIParam_0

xmlSAX2ResolveEntity_APIName returns the xmlSAX2ResolveEntity_APIParam_0 if inlined or NULL for DOM behaviour
xmlParserInputPtr, xmlSAX2ResolveEntity_APIParam_0

resolveEntitySAXFunc_APIName returns the resolveEntitySAXFunc_APIParam_0 if inlined or NULL for DOM behaviour
xmlParserInputPtr, resolveEntitySAXFunc_APIParam_0

xmlSAX2StartElement_APIParam_3 is An array of name/value xmlSAX2StartElement_APIParam_3 , NULL terminated
attributes pairs, xmlSAX2StartElement_APIParam_3

startElementSAXFunc_APIParam_3 is An array of name/value startElementSAXFunc_APIParam_3 , NULL terminated
attributes pairs, startElementSAXFunc_APIParam_3

xmlMemRealloc_APIName returns a xmlMemRealloc_APIParam_1 to the allocated area or NULL in case of lack of memory
pointer, xmlMemRealloc_APIParam_1

xmlReallocLoc_APIName returns a xmlReallocLoc_APIParam_1 to the allocated area or NULL in case of lack of memory
pointer, xmlReallocLoc_APIParam_1

xmlMemStrdupLoc_APIName returns a pointer to the new string or NULL if xmlMemStrdupLoc_APIParam_3 occurred
allocation error, xmlMemStrdupLoc_APIParam_3

xmlMemStrdupLoc_APIName returns a pointer to the new string or NULL if xmlMemStrdupLoc_APIParam_3 occurred
string,1

xmlMemoryStrdup_APIName returns a pointer to the new string or NULL if allocation error occurred
string,1

Check the xmlDebugCheckDocument_APIParam_2 for potential content problems , and xmlDebugCheckDocument_APIParam_1 the errors to @output
document, xmlDebugCheckDocument_APIParam_2

xmlShellPrintXPathError_APIParam_2 is the argument that cause xpath to fail
argument cause xpath, xmlShellPrintXPathError_APIParam_2

xmlShellPrintXPathError_APIParam_1 is valid xpath error id
xpath error id,1

xmlCheckUTF8_APIParam_1 is assumed to be null-terminated
@utf, xmlCheckUTF8_APIParam_1

xmlCheckUTF8_APIName returns value true if xmlCheckUTF8_APIParam_1 is valid
@utf, xmlCheckUTF8_APIParam_1

xmlGetUTF8Char_APIName returns the char value or -1 in case of error, and sets *len to the actual number of bytes consumed (0 in case of error
len, xmlGetUTF8Char_APIParam_2

xmlStrcasestr_APIName returns the xmlChar * for the first occurrence or NULL
*,2

xmlStrchr_APIName returns the xmlChar * for the first occurrence or NULL
*,2

xmlStrstr_APIName returns the xmlChar * for the first occurrence or NULL
*,2

xmlStrsub_APIName returns the xmlChar * for the first occurrence or NULL
*,1

The original xmlStrcat_APIParam_1 is reallocated and should not be freed
@cur, xmlStrcat_APIParam_1

Note that if xmlStrncat_APIParam_3 < 0 this is an API error and NULL will be returned
@len, xmlStrncat_APIParam_3

xmlStrncat_APIName returns a new xmlChar *, the original xmlStrncat_APIParam_1 is reallocated and should not be freed
@cur, xmlStrncat_APIParam_1

xmlStrncat_APIName returns a new xmlChar *, the original xmlStrncat_APIParam_1 is reallocated and should not be freed
xmlChar *,2

xmlStrncatNew_APIParam_3 is the xmlStrncatNew_APIParam_3 of @str2 or < 0. xmlStrncatNew_APIName returns a new xmlChar * or NULL
xmlChar *,2

xmlStrncatNew_APIParam_3 is the xmlStrncatNew_APIParam_3 of xmlStrncatNew_APIParam_2 or < 0. xmlStrncatNew_APIName returns a new xmlStrncatNew_APIParam_2 or NULL
@str2, xmlStrncatNew_APIParam_2

xmlUTF8Strloc_APIName returns the relative character position of the desired char or -1 if not found
char,2

xmlUTF8Strloc_APIName returns the relative character position of the desired xmlUTF8Strloc_APIParam_2 or -1 if not found
character position,2

xmlUTF8Strpos_APIName returns a pointer to the UTF8 character or NULL
pointer,1

xmlUTF8Strpos_APIName returns a xmlUTF8Strpos_APIParam_1 to the xmlUTF8Strpos_APIParam_1 or NULL
UTF8 character, xmlUTF8Strpos_APIParam_1

xmlUTF8Strsub_APIName returns a pointer to a newly created string or NULL if any problem
pointer,1

The remaining characters will be parsed so The remaining characters do not need to be fed in again through xmlCreatePushParserCtxt_APIParam_3
xmlParseChunk, xmlCreatePushParserCtxt_APIParam_3

The remaining characters will be parsed so The remaining characters do not need to be fed in again through xmlCreatePushParserCtxt_APIParam_3
characters,5

To allow content encoding detection , xmlCreatePushParserCtxt_APIParam_4 should be > = 4 The value of @filename is used for fetching external entities and error/warning reports
@size, xmlCreatePushParserCtxt_APIParam_4

xmlCtxtReadDoc_APIName returns the resulting xmlCtxtReadDoc_APIParam_2
document tree, xmlCtxtReadDoc_APIParam_2

xmlParseDoc_APIName returns the resulting xmlParseDoc_APIParam_1
document tree, xmlParseDoc_APIParam_1

xmlParseFile_APIName returns the resulting document tree if the xmlParseFile_APIParam_1 was wellformed, NULL otherwise
file, xmlParseFile_APIParam_1

xmlReadDoc_APIName returns the resulting xmlReadDoc_APIParam_1
document tree, xmlReadDoc_APIParam_1

xmlSAXParseDoc_APIName returns the resulting xmlSAXParseDoc_APIParam_2
document tree, xmlSAXParseDoc_APIParam_2

htmlCtxtReadDoc_APIName returns the resulting htmlCtxtReadDoc_APIParam_2
document tree, htmlCtxtReadDoc_APIParam_2

htmlParseDoc_APIName returns the resulting htmlParseDoc_APIParam_1
document tree, htmlParseDoc_APIParam_1

htmlReadDoc_APIName returns the resulting htmlReadDoc_APIParam_1
document tree, htmlReadDoc_APIParam_1

xmlCtxtUseOptions_APIName returns 0 in case of success, the xmlCtxtUseOptions_APIParam_1 of unknown or unimplemented xmlCtxtUseOptions_APIParam_2 in case of error
set, xmlCtxtUseOptions_APIParam_1

htmlCtxtUseOptions_APIName returns 0 in case of success, the htmlCtxtUseOptions_APIParam_1 of unknown or unimplemented htmlCtxtUseOptions_APIParam_2 in case of error
set, htmlCtxtUseOptions_APIParam_1

xmlGetFeaturesList_APIParam_1 is the xmlGetFeaturesList_APIParam_1 of the features name array
length, xmlGetFeaturesList_APIParam_1

xmlGetFeaturesList_APIParam_2 is an array of xmlGetFeaturesList_APIParam_2 to be filled with the features name
string, xmlGetFeaturesList_APIParam_2

xmlIOParseDTD_APIParam_1 is the xmlIOParseDTD_APIParam_1 or NULL
SAX handler block, xmlIOParseDTD_APIParam_1

xmlIOParseDTD_APIName returns the resulting xmlIOParseDTD_APIParam_0 or NULL in case of error
xmlDtdPtr, xmlIOParseDTD_APIParam_0

xmlParseDTD_APIName returns the resulting xmlParseDTD_APIParam_0 or NULL in case of error
xmlDtdPtr, xmlParseDTD_APIParam_0

xmlSAXParseDTD_APIName returns the resulting xmlSAXParseDTD_APIParam_0 or NULL in case of error
xmlDtdPtr, xmlSAXParseDTD_APIParam_0

xmlGetFeaturesList_APIName returns -1 in case or error, or the total number of features, xmlGetFeaturesList_APIParam_1 is updated with the number of strings copied, strings must not be deallocated
features,2

Upgrade of 1.X code should be done by using xmlIsBlankNode_APIName commodity function to detect the  empty  xmlIsBlankNode_APIParam_1 generated
nodes, xmlIsBlankNode_APIParam_1

xmlLoadExternalEntity_APIParam_3 is the xmlLoadExternalEntity_APIParam_3 in which the entity is called or NULL
context, xmlLoadExternalEntity_APIParam_3

xmlNoNetExternalEntityLoader_APIParam_3 is the xmlNoNetExternalEntityLoader_APIParam_3 in which the entity is called or NULL
context, xmlNoNetExternalEntityLoader_APIParam_3

xmlParserFindNodeInfo_APIName returns an xmlParserFindNodeInfo_APIParam_2 or NULL
xmlParserNodeInfo block pointer, xmlParserFindNodeInfo_APIParam_2

Find the index that the info record for the given xmlParserFindNodeInfoIndex_APIParam_2 is or should be at in a sorted sequence
info record,1

Find the index that the xmlParserFindNodeInfoIndex_APIParam_1 for the given xmlParserFindNodeInfoIndex_APIParam_2 is or should be at in a sorted xmlParserFindNodeInfoIndex_APIParam_1
sequence, xmlParserFindNodeInfoIndex_APIParam_1

xmlRecoverDoc_APIName returns the resulting xmlRecoverDoc_APIParam_1 or NULL in case of failure
document tree, xmlRecoverDoc_APIParam_1

xmlAddSibling_APIName returns the new xmlAddSibling_APIParam_2 or NULL in case of error
element, xmlAddSibling_APIParam_2

xmlBufContent_APIName returns the internal content
content,1

xmlBufferContent_APIName returns the internal content
content,1

This does not work with immutable xmlBufferDetach_APIParam_1 as they can not be reset
buffers, xmlBufferDetach_APIParam_1

xmlBufferShrink_APIName returns the number of #xmlChar removed, or -1 in case of failure
#xmlChar,1

xmlBuildQName_APIName returns the new string which must be freed by the caller if different from xmlBuildQName_APIParam_3 and @ncname or NULL in case of error
@memory, xmlBuildQName_APIParam_3

xmlCopyDoc_APIName returns a new #xmlDocPtr, or NULL in case of error
#xmlDocPtr,1

xmlCopyDtd_APIName returns a new #xmlDtdPtr, or NULL in case of error
#xmlDtdPtr,1

xmlCopyNamespace_APIName returns a new #xmlNsPtr, or NULL in case of error
#xmlNsPtr,1

xmlCopyNamespaceList_APIName returns a new #xmlNsPtr, or NULL in case of error
#xmlNsPtr,1

xmlCopyNode_APIName returns a new #xmlNodePtr, or NULL in case of error
#xmlNodePtr,1

xmlCopyNodeList_APIName returns a new #xmlNodePtr, or NULL in case of error
#xmlNodePtr,1

xmlCopyProp_APIName returns a new #xmlAttrPtr, or NULL in case of error
#xmlAttrPtr,2

xmlCopyPropList_APIName returns a new #xmlAttrPtr, or NULL in case of error
#xmlAttrPtr,2

xmlDocCopyNode_APIName returns a new #xmlNodePtr, or NULL in case of error
#xmlNodePtr,1

xmlDocCopyNodeList_APIName returns a new #xmlNodePtr, or NULL in case of error
#xmlNodePtr,2

@destParent ensures that the tree is namespace wellformed by creating additional ns-decls where needed
ns-decls,6

xmlDOMWrapAdoptNode_APIParam_5 ensures that the tree is namespace wellformed by creating additional xmlDOMWrapAdoptNode_APIParam_6 where needed
@destParent, xmlDOMWrapAdoptNode_APIParam_5

Ensures that the tree is namespace wellformed by creating additional ns-decls where needed
ns-decls,6

1 -RRB- , nsDef entries on element-nodes are used 2 -RRB- If * no * call xmlXPathIsNodeType_APIName , @destDoc - > oldNs entries are used
nsDef entries,6

1 -RRB- , xmlDOMWrapCloneNode_APIParam_6 on element-nodes are used 2 -RRB- If * no * call xmlXPathIsNodeType_APIName , xmlDOMWrapCloneNode_APIParam_5 - > oldNs entries are used
@destDoc, xmlDOMWrapCloneNode_APIParam_5

1 -RRB- , xmlDOMWrapCloneNode_APIParam_6 on element-nodes are used 2 -RRB- If * no * call xmlXPathIsNodeType_APIName , xmlDOMWrapCloneNode_APIParam_5 - > oldNs entries are used
oldNs entries,6

1 -RRB- , xmlDOMWrapCloneNode_APIParam_6 on xmlDOMWrapCloneNode_APIParam_3 are used 2 -RRB- If * no * call xmlXPathIsNodeType_APIName , xmlDOMWrapCloneNode_APIParam_5 - > xmlDOMWrapCloneNode_APIParam_6 are used
element-nodes, xmlDOMWrapCloneNode_APIParam_3

xmlDOMWrapNewCtxt_APIName returns the xmlDOMWrapNewCtxt_APIParam_0 or NULL in case of an internal error
xmlDOMWrapCtxtPtr, xmlDOMWrapNewCtxt_APIParam_0

call xmlDOMWrapReconcileNamespaces_APIName to ns-decls hold on element-nodes
ns-decls,3

call xmlDOMWrapReconcileNamespaces_APIName to xmlDOMWrapReconcileNamespaces_APIParam_3 hold on xmlDOMWrapReconcileNamespaces_APIParam_2
element-nodes, xmlDOMWrapReconcileNamespaces_APIParam_2

This will substitute ns-references to node - > nsDef for ns-references to doc - > oldNs , thus ensuring the removed branch to be autark wrt ns-references
node,3

This will substitute ns-references to xmlDOMWrapRemoveNode_APIParam_3 - > nsDef for ns-references to doc - > oldNs , thus ensuring the removed branch to be autark wrt ns-references
wrt ns-references,4

This will substitute ns-references to xmlDOMWrapRemoveNode_APIParam_3 - > nsDef for ns-references to doc - > oldNs , thus ensuring the removed branch to be autark xmlDOMWrapRemoveNode_APIParam_4
ns-references,4

xmlDocGetRootElement_APIName returns the xmlDocGetRootElement_APIParam_0 for the root or NULL
#xmlNodePtr, xmlDocGetRootElement_APIParam_0

xmlGetBufferAllocationScheme_APIName returns the current xmlGetBufferAllocationScheme_APIParam_0
allocation scheme, xmlGetBufferAllocationScheme_APIParam_0

xmlGetNsList_APIName returns an NULL terminated array of all the xmlGetNsList_APIParam_0 found that need to be freed by the caller or NULL if no namespace if defined
#xmlNsPtr, xmlGetNsList_APIParam_0

XML special chars must be escaped first by using xmlEncodeEntitiesReentrant_APIName , or xmlNewTextChild_APIName should be used
chars,4

@content is supposed to be a piece of XML CDATA , so it allow entities references , but XML special chars need to be escaped first by using xmlEncodeEntitiesReentrant_APIName
chars,4

@content is supposed to be a piece of XML CDATA , so it allow xmlNewDocNodeEatName_APIParam_2 , but XML special xmlNewDocNodeEatName_APIParam_4 need to be escaped first by using xmlEncodeEntitiesReentrant_APIName
entities references, xmlNewDocNodeEatName_APIParam_2

xmlNewDocNodeEatName_APIParam_4 is supposed to be a piece of XML CDATA , so it allow xmlNewDocNodeEatName_APIParam_2 , but XML special xmlNewDocNodeEatName_APIParam_4 need to be escaped first by using xmlEncodeEntitiesReentrant_APIName
@content, xmlNewDocNodeEatName_APIParam_4

@content is supposed to be a piece of XML CDATA , so it allow entities references , but XML special chars need to be escaped first by using xmlEncodeEntitiesReentrant_APIName
chars,4

@content is supposed to be a piece of XML CDATA , so it allow xmlNewDocNodeEatName_APIParam_2 , but XML special xmlNewDocNodeEatName_APIParam_4 need to be escaped first by using xmlEncodeEntitiesReentrant_APIName
entities references, xmlNewDocNodeEatName_APIParam_2

xmlNewDocNodeEatName_APIParam_4 is supposed to be a piece of XML CDATA , so it allow xmlNewDocNodeEatName_APIParam_2 , but XML special xmlNewDocNodeEatName_APIParam_4 need to be escaped first by using xmlEncodeEntitiesReentrant_APIName
@content, xmlNewDocNodeEatName_APIParam_4

@content is supposed to be a piece of XML CDATA , so it allow entities references , but XML special chars need to be escaped first by using xmlEncodeEntitiesReentrant_APIName
chars,4

@content is supposed to be a piece of XML CDATA , so it allow xmlNewDocNodeEatName_APIParam_2 , but XML special xmlNewDocNodeEatName_APIParam_4 need to be escaped first by using xmlEncodeEntitiesReentrant_APIName
entities references, xmlNewDocNodeEatName_APIParam_2

xmlNewDocNodeEatName_APIParam_4 is supposed to be a piece of XML CDATA , so it allow xmlNewDocNodeEatName_APIParam_2 , but XML special xmlNewDocNodeEatName_APIParam_4 need to be escaped first by using xmlEncodeEntitiesReentrant_APIName
@content, xmlNewDocNodeEatName_APIParam_4

@content is supposed to be a piece of XML CDATA , so it allow entities references , but XML special chars need to be escaped first by using xmlEncodeEntitiesReentrant_APIName
chars,4

@content is supposed to be a piece of XML CDATA , so it allow xmlNewDocNodeEatName_APIParam_2 , but XML special xmlNewDocNodeEatName_APIParam_4 need to be escaped first by using xmlEncodeEntitiesReentrant_APIName
entities references, xmlNewDocNodeEatName_APIParam_2

xmlNewDocNodeEatName_APIParam_4 is supposed to be a piece of XML CDATA , so it allow xmlNewDocNodeEatName_APIParam_2 , but XML special xmlNewDocNodeEatName_APIParam_4 need to be escaped first by using xmlEncodeEntitiesReentrant_APIName
@content, xmlNewDocNodeEatName_APIParam_4

Note that for a default namespace , xmlNewNs_APIParam_3 should be NULL
@prefix, xmlNewNs_APIParam_3

We use xmlNewNs_APIParam_2 == NULL in the case of an element creation where the namespace was not defined
href, xmlNewNs_APIParam_2

Use xmlNewChild_APIName will contain xmlNewTextChild_APIParam_2 that need to be preserved
entities, xmlNewTextChild_APIParam_2

In contrast to xmlNodeSetContent_APIName , @content is supposed to be raw text , so unescaped XML special chars are allowed , entity references are not supported
entity references,2

In contrast to xmlNodeSetContent_APIName , @content is supposed to be raw text , so unescaped XML special chars are allowed , xmlNodeAddContent_APIParam_2 are not supported
chars,2

In contrast to xmlNodeSetContent_APIName , @content is supposed to be raw text , so unescaped XML special xmlNodeAddContent_APIParam_2 are allowed , xmlNodeAddContent_APIParam_2 are not supported
contrast,2

In xmlNodeAddContent_APIParam_2 to xmlNodeSetContent_APIName , @content is supposed to be raw text , so unescaped XML special xmlNodeAddContent_APIParam_2 are allowed , xmlNodeAddContent_APIParam_2 are not supported
contrast,2

In xmlNodeAddContent_APIParam_2 to xmlNodeSetContent_APIName , xmlNodeAddContent_APIParam_2 is supposed to be raw text , so unescaped XML special xmlNodeAddContent_APIParam_2 are allowed , xmlNodeAddContent_APIParam_2 are not supported
@content, xmlNodeAddContent_APIParam_2

In contrast to xmlNodeSetContentLen_APIName , @content is supposed to be raw text , so unescaped XML special chars are allowed , entity references are not supported
entity references,2

In contrast to xmlNodeSetContentLen_APIName , @content is supposed to be raw text , so unescaped XML special chars are allowed , xmlNodeAddContentLen_APIParam_2 are not supported
chars,2

In contrast to xmlNodeSetContentLen_APIName , @content is supposed to be raw text , so unescaped XML special xmlNodeAddContentLen_APIParam_2 are allowed , xmlNodeAddContentLen_APIParam_2 are not supported
contrast,2

In xmlNodeAddContentLen_APIParam_2 to xmlNodeSetContentLen_APIName , @content is supposed to be raw text , so unescaped XML special xmlNodeAddContentLen_APIParam_2 are allowed , xmlNodeAddContentLen_APIParam_2 are not supported
contrast,2

In xmlNodeAddContentLen_APIParam_2 to xmlNodeSetContentLen_APIName , xmlNodeAddContentLen_APIParam_2 is supposed to be raw text , so unescaped XML special xmlNodeAddContentLen_APIParam_2 are allowed , xmlNodeAddContentLen_APIParam_2 are not supported
@content, xmlNodeAddContentLen_APIParam_2

The code should work on both XML and xmlNodeGetBase_APIParam_1
HTML document, xmlNodeGetBase_APIParam_1

The xmlNodeGetBase_APIParam_2 should work on both XML and xmlNodeGetBase_APIParam_1
code, xmlNodeGetBase_APIParam_2

xmlNodeListGetRawString_APIName returns a pointer to the string copy, the caller must free it with xmlFree_APIName
pointer,3

xmlNodeListGetRawString_APIName returns a xmlNodeListGetRawString_APIParam_3 to the string copy, the caller must free it with xmlFree_APIName
string copy,3

xmlNodeListGetString_APIName returns a pointer to the string copy, the caller must free it with xmlFree_APIName
pointer,3

xmlNodeListGetString_APIName returns a xmlNodeListGetString_APIParam_3 to the string copy, the caller must free it with xmlFree_APIName
string copy,3

xmlNodeListGetRawString_APIParam_3 is should we replace entity contents or show their external form
entity contents,2

xmlNodeListGetString_APIParam_3 is should we replace entity contents or show their external form
entity contents,2

@content is supposed to be a piece of XML CDATA , so @content allows entity references , but XML special chars need to be escaped first by using xmlEncodeEntitiesReentrant_APIName resp
entity references,2

@content is supposed to be a piece of XML CDATA , so @content allows xmlNodeSetContentLen_APIParam_2 , but XML special chars need to be escaped first by using xmlEncodeEntitiesReentrant_APIName resp
chars,2

xmlNodeSetContentLen_APIParam_2 is supposed to be a piece of XML CDATA , so xmlNodeSetContentLen_APIParam_2 allows xmlNodeSetContentLen_APIParam_2 , but XML special xmlNodeSetContentLen_APIParam_2 need to be escaped first by using xmlEncodeEntitiesReentrant_APIName resp
@content, xmlNodeSetContentLen_APIParam_2

@content is supposed to be a piece of XML CDATA , so @content allows entity references , but XML special chars need to be escaped first by using xmlEncodeEntitiesReentrant_APIName resp
entity references,2

@content is supposed to be a piece of XML CDATA , so @content allows xmlNodeSetContentLen_APIParam_2 , but XML special chars need to be escaped first by using xmlEncodeEntitiesReentrant_APIName resp
chars,2

xmlNodeSetContentLen_APIParam_2 is supposed to be a piece of XML CDATA , so xmlNodeSetContentLen_APIParam_2 allows xmlNodeSetContentLen_APIParam_2 , but XML special xmlNodeSetContentLen_APIParam_2 need to be escaped first by using xmlEncodeEntitiesReentrant_APIName resp
@content, xmlNodeSetContentLen_APIParam_2

@content is supposed to be a piece of XML CDATA , so @content allows entity references , but XML special chars need to be escaped first by using xmlEncodeEntitiesReentrant_APIName resp
entity references,2

@content is supposed to be a piece of XML CDATA , so @content allows xmlNodeSetContentLen_APIParam_2 , but XML special chars need to be escaped first by using xmlEncodeEntitiesReentrant_APIName resp
chars,2

xmlNodeSetContentLen_APIParam_2 is supposed to be a piece of XML CDATA , so xmlNodeSetContentLen_APIParam_2 allows xmlNodeSetContentLen_APIParam_2 , but XML special xmlNodeSetContentLen_APIParam_2 need to be escaped first by using xmlEncodeEntitiesReentrant_APIName resp
@content, xmlNodeSetContentLen_APIParam_2

@content is supposed to be a piece of XML CDATA , so @content allows entity references , but XML special chars need to be escaped first by using xmlEncodeEntitiesReentrant_APIName resp
entity references,2

@content is supposed to be a piece of XML CDATA , so @content allows xmlNodeSetContentLen_APIParam_2 , but XML special chars need to be escaped first by using xmlEncodeEntitiesReentrant_APIName resp
chars,2

xmlNodeSetContentLen_APIParam_2 is supposed to be a piece of XML CDATA , so xmlNodeSetContentLen_APIParam_2 allows xmlNodeSetContentLen_APIParam_2 , but XML special xmlNodeSetContentLen_APIParam_2 need to be escaped first by using xmlEncodeEntitiesReentrant_APIName resp
@content, xmlNodeSetContentLen_APIParam_2

The subtree may still hold pointers to namespace declarations outside the subtree or invalid/masked
pointers,2

The xmlReconciliateNs_APIParam_2 may still hold xmlReconciliateNs_APIParam_2 to namespace declarations outside the xmlReconciliateNs_APIParam_2 or invalid/masked
subtree, xmlReconciliateNs_APIParam_2

xmlReplaceNode_APIName returns the @old node
node,2

We do not allow to cross xmlSearchNs_APIParam_2
entities boundaries, xmlSearchNs_APIParam_2

xmlSplitQName3_APIName returns NULL if it is not a Qualified Name, otherwise, update xmlSplitQName3_APIParam_2 with the length in byte of the prefix and return a pointer to the start of the xmlSplitQName3_APIParam_1 without the prefix
pointer,1

xmlSplitQName3_APIName returns NULL if it is not a Qualified Name, otherwise, update xmlSplitQName3_APIParam_2 with the xmlSplitQName3_APIParam_2 in byte of the prefix and return a xmlSplitQName3_APIParam_1 to the start of the xmlSplitQName3_APIParam_1 without the prefix
length, xmlSplitQName3_APIParam_2

Note that namespace nodes can not be unlinked as they do not have pointer to their parent
pointer,1

xmlModuleOpen_APIName returns a handle for the xmlModuleOpen_APIParam_0 or NULL in case of error
module, xmlModuleOpen_APIParam_0

We canot guarantee that an UTF-8 string would work , which is why xmlModuleOpen_APIParam_1 is a const char * and not a xmlModuleOpen_APIParam_1
const xmlChar, xmlModuleOpen_APIParam_1

We canot guarantee that an UTF-8 string would work , which is why xmlModuleOpen_APIParam_1 is a xmlModuleOpen_APIParam_1 and not a xmlModuleOpen_APIParam_1
const char *, xmlModuleOpen_APIParam_1

We canot guarantee that an UTF-8 string would work , which is why xmlModuleSymbol_APIParam_2 is a const char * and not a xmlModuleSymbol_APIParam_2
const xmlChar, xmlModuleSymbol_APIParam_2

We canot guarantee that an UTF-8 string would work , which is why xmlModuleSymbol_APIParam_2 is a xmlModuleSymbol_APIParam_2 and not a xmlModuleSymbol_APIParam_2
const char *, xmlModuleSymbol_APIParam_2

Checks Has full knowledge of Required and Deprecated htmlAttrAllowed_APIParam_2
attributes, htmlAttrAllowed_APIParam_2

htmlAttrAllowed_APIParam_3 is whether to allow deprecated htmlAttrAllowed_APIParam_2
attributes, htmlAttrAllowed_APIParam_2

htmlNewParserCtxt_APIName returns the htmlNewParserCtxt_APIParam_0 or NULL in case of allocation error
htmlParserCtxtPtr, htmlNewParserCtxt_APIParam_0

htmlNodeStatus_APIName returns for Element nodes, a return from htmlElementAllowedHere  or htmlNodeStatus_APIParam_0
htmlElementStatusHere, htmlNodeStatus_APIParam_0

htmlNodeStatus_APIName returns for Element nodes, a return from htmlNodeStatus_APIParam_1  or htmlNodeStatus_APIParam_0
htmlElementAllowedHere, htmlNodeStatus_APIParam_1

htmlNodeStatus_APIName returns for Element nodes, a return from htmlNodeStatus_APIParam_1  or htmlNodeStatus_APIParam_0
Element nodes, htmlNodeStatus_APIParam_1

for Attribute nodes, a return from htmlAttrAllowed for other nodes, HTML_NA (no checks performed
nodes, htmlNodeStatus_APIParam_1

for Attribute nodes, a return from htmlAttrAllowed for other nodes, HTML_NA (no checks performed
Attribute nodes, htmlNodeStatus_APIParam_1

htmlSAXParseDoc_APIName returns the resulting htmlSAXParseDoc_APIParam_1 
document tree, htmlSAXParseDoc_APIParam_1

xmlListCreate_APIName returns the new list or NULL in case of error
list,2

xmlListDup_APIName returns a new copy of the list or NULL in case of error
list,1

xmlListEnd_APIName returns the last element in the list, or NULL
list, xmlListEnd_APIParam_1

xmlListFront_APIName returns the first element in the list, or NULL
list, xmlListFront_APIParam_1

xmlListSize_APIName returns the number of elements in the xmlListSize_APIParam_1 or -1 in case of error
list, xmlListSize_APIParam_1

xmlOutputBufferCreateIO_APIName returns the new parser output or NULL
parser output,2

xmlAllocParserInputBuffer_APIName returns the new xmlAllocParserInputBuffer_APIParam_0 or NULL
parser input, xmlAllocParserInputBuffer_APIParam_0

xmlParserInputBufferCreateFd_APIName returns the new xmlParserInputBufferCreateFd_APIParam_0 or NULL
parser input, xmlParserInputBufferCreateFd_APIParam_0

xmlParserInputBufferCreateFile_APIName returns the new xmlParserInputBufferCreateFile_APIParam_0 or NULL
parser input, xmlParserInputBufferCreateFile_APIParam_0

xmlParserInputBufferCreateFilename_APIName returns the new xmlParserInputBufferCreateFilename_APIParam_0 or NULL
parser input, xmlParserInputBufferCreateFilename_APIParam_0

xmlParserInputBufferCreateIO_APIName returns the new xmlParserInputBufferCreateIO_APIParam_0 or NULL
parser input, xmlParserInputBufferCreateIO_APIParam_0

xmlParserInputBufferCreateMem_APIName returns the new xmlParserInputBufferCreateMem_APIParam_0 or NULL
parser input, xmlParserInputBufferCreateMem_APIParam_0

xmlParserInputBufferCreateStatic_APIName returns the new xmlParserInputBufferCreateStatic_APIParam_0 or NULL
parser input, xmlParserInputBufferCreateStatic_APIParam_0

xmlCheckHTTPInput_APIName returns the input or NULL in case of HTTP error
input,2

xmlInputOpenCallback_APIName returns an Input context or NULL in case or error
Input context,1

xmlNoNetExternalEntityLoader_APIName returns a new allocated xmlParserInputPtr, or NULL
xmlParserInputPtr, xmlNoNetExternalEntityLoader_APIParam_0

Please see xmlNormalizeWindowsPath_APIParam_1 in uri.c for a better solution
xmlURIFromPath, xmlNormalizeWindowsPath_APIParam_1

xmlOutputBufferCreateFilename_APIName returns the new xmlOutputBufferCreateFilename_APIParam_0 or NULL
output, xmlOutputBufferCreateFilename_APIParam_0

xmlOutputBufferGetContent_APIName returns a pointer to the data or NULL in case of error
pointer,1

xmlOutputBufferGetSize_APIName returns 0 in case or error or no data is held, the xmlOutputBufferGetSize_APIParam_0 otherwise
size, xmlOutputBufferGetSize_APIParam_0

xmlOutputOpenCallback_APIName returns an Output context or NULL in case or error
Output context,1

one should be able to remove one extra copy by copying directly onto in - > xmlParserInputBufferGrow_APIParam_1 or in - > raw
buffer, xmlParserInputBufferGrow_APIParam_1

to what catalogs should be accepted
catalogs,1

to what catalogs should be accepted
catalogs,1

to what catalogs should be accepted
catalogs,1

to what catalogs should be accepted
catalogs,1

Try to call xmlCatalogResolvePublic_APIName associated to a xmlCatalogGetSystem_APIParam_1 , use xmlCatalogResolveSystem_APIName
system ID DEPRECATED, xmlCatalogGetSystem_APIParam_1

xmlCatalogSetDefaults_APIParam_1 is what catalogs should be accepted
catalogs,1

xmlLoadACatalog_APIName returns the xmlLoadACatalog_APIParam_0 parsed or NULL in case of error
catalog, xmlLoadACatalog_APIParam_0

xmlLoadSGMLSuperCatalog_APIName returns the xmlLoadSGMLSuperCatalog_APIParam_0 parsed or NULL in case of error
catalog, xmlLoadSGMLSuperCatalog_APIParam_0

xmlSchemaCheckFacet_APIName returns 0 if valid, a positive error code if not valid and -1 in xmlSchemaCheckFacet_APIParam_3 of an internal or API error
case, xmlSchemaCheckFacet_APIParam_3

This will be fixed in xmlSchemaGetCanonValue_APIParam_1 1.1
XML Schema, xmlSchemaGetCanonValue_APIParam_1

xmlSchemaGetPredefinedType_APIName returns the xmlSchemaGetPredefinedType_APIParam_0 if found, NULL otherwise
type, xmlSchemaGetPredefinedType_APIParam_0

xmlSchemaNewNOTATIONValue_APIName returns a pointer to the new value or NULL in case of error
pointer,2

xmlSchemaNewQNameValue_APIName returns a pointer to the new value or NULL in case of an error
pointer,2

We need this for xmlSchemaNewStringValue_APIParam_1 as well
anySimpleType, xmlSchemaNewStringValue_APIParam_1

xmlSchemaNewStringValue_APIName returns a pointer to the new xmlSchemaNewStringValue_APIParam_2 or NULL in case of error
pointer,2

Note that @value needs to be the * normalized * xmlSchemaValidateFacetWhtsp_APIParam_4
*,6

